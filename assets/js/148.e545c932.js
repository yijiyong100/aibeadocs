(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{663:function(t,s,a){"use strict";a.r(s);var n=a(53),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("本文主要是介绍 图-最短路径(Floyd)算法 。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#弗洛伊德-floyd-算法"}},[t._v("弗洛伊德(Floyd)算法")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-定义概览"}},[t._v("1.定义概览")])]),a("li",[a("a",{attrs:{href:"#_2-算法思想"}},[t._v("2.算法思想")])]),a("li",[a("a",{attrs:{href:"#_3-算法过程"}},[t._v("3.算法过程")])]),a("li",[a("a",{attrs:{href:"#_4-画片演示"}},[t._v("4.画片演示")])]),a("li",[a("a",{attrs:{href:"#_5-代码实现"}},[t._v("5.代码实现")])])])]),a("li",[a("a",{attrs:{href:"#源码地址"}},[t._v("源码地址")])]),a("li",[a("a",{attrs:{href:"#参考资料"}},[t._v("参考资料")])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"弗洛伊德-floyd-算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弗洛伊德-floyd-算法"}},[t._v("#")]),t._v(" 弗洛伊德(Floyd)算法")]),t._v(" "),a("h3",{attrs:{id:"_1-定义概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义概览"}},[t._v("#")]),t._v(" 1.定义概览")]),t._v(" "),a("p",[t._v("Floyd-Warshall算法（Floyd-Warshall algorithm）是解决"),a("strong",[t._v("任意两点间")]),t._v("的最短路径的一种算法，可以正确处理有向图或负权的最短路径问题，同时也被用于计算有向图的传递闭包。Floyd-Warshall算法的时间复杂度为O(N3)，空间复杂度为O(N2)。")]),t._v(" "),a("h3",{attrs:{id:"_2-算法思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-算法思想"}},[t._v("#")]),t._v(" 2.算法思想")]),t._v(" "),a("p",[t._v("从vi到vj的所有可能存在的路径中，选出一条长度最短的路径。")]),t._v(" "),a("p",[t._v("此算法由Robert W. Floyd（罗伯特·弗洛伊德）于1962年发表在“Communications of the ACM”上。同年Stephen Warshall（史蒂芬·沃舍尔）也独立发表了这个算法。Floyd这个牛人是朵奇葩，他原本在芝加哥大学读的文学，但是因为当时美国经济不太景气，找工作比较困难，无奈之下到西屋电气公司当了一名计算机操作员，在IBM650机房值夜班，并由此开始了他的计算机生涯。")]),t._v(" "),a("p",[t._v("我们来想一想，根据我们以往的经验，如果要让任意两点（例如从顶点a点到顶点b）之间的路程变短，只能引入第三个点（顶点k），并通过这个顶点k中转即a->k->b，才可能缩短原来从顶点a点到顶点b的路程。那么这个中转的顶点k是1~n中的哪个点呢？甚至有时候不只通过一个点，而是经过两个点或者更多点中转会更短，即a->k1->k2b->或者a->k1->k2…->k->i…->b。比如上图中从4号城市到3号城市（4->3）的路程e[4][3]原本是12。如果只通过1号城市中转（4->1->3），路程将缩短为11（e[4][1]+e[1][3]=5+6=11）。其实1号城市到3号城市也可以通过2号城市中转，使得1号到3号城市的路程缩短为5（e[1][2]+e[2][3]=2+3=5）。所以如果同时经过1号和2号两个城市中转的话，从4号城市到3号城市的路程会进一步缩短为10。通过这个的例子，我们发现每个顶点都有可能使得另外两个顶点之间的路程变短。")]),t._v(" "),a("p",[t._v("Floyd算法就是首先只允许经过0号结点，看看是否会变短，如果变短就加之修改，然后只允许经过0，1号结点，看看是否变短，加之修改，直到中间结点到达为所有可能的结点。")]),t._v(" "),a("h3",{attrs:{id:"_3-算法过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-算法过程"}},[t._v("#")]),t._v(" 3.算法过程")]),t._v(" "),a("p",[t._v("定义N阶方阵序列:"),a("em",[t._v("D")]),t._v("−1,"),a("em",[t._v("D")]),t._v("0,"),a("em",[t._v("D")]),t._v("1,"),a("em",[t._v("D")]),t._v("2...."),a("em",[t._v("D**n")]),t._v("−1")]),t._v(" "),a("p",[a("em",[t._v("D")]),t._v("−1["),a("em",[t._v("i")]),t._v("]["),a("em",[t._v("j")]),t._v("]="),a("em",[t._v("G")]),t._v("."),a("em",[t._v("a"),a("strong",[t._v("r")]),t._v("c")]),t._v("["),a("em",[t._v("i")]),t._v("]["),a("em",[t._v("j")]),t._v("]")]),t._v(" "),a("p",[a("em",[t._v("D**k")]),t._v("["),a("em",[t._v("i")]),t._v("]["),a("em",[t._v("j")]),t._v("]="),a("em",[t._v("M"),a("strong",[t._v("i")]),t._v("n")]),t._v("{"),a("em",[t._v("D**k")]),t._v("−1["),a("em",[t._v("i")]),t._v("]["),a("em",[t._v("j")]),t._v("],"),a("em",[t._v("D**k")]),t._v("−1["),a("em",[t._v("i")]),t._v("]["),a("em",[t._v("K")]),t._v("]+"),a("em",[t._v("D**k")]),t._v("−1["),a("em",[t._v("k")]),t._v("]["),a("em",[t._v("j")]),t._v("]}")]),t._v(" "),a("p",[t._v("显然: "),a("em",[t._v("D**k")]),t._v("["),a("em",[t._v("i")]),t._v("]["),a("em",[t._v("j")]),t._v("]是从vi到vj的所经顶点的序号不大于k的最短路径长度。\n"),a("em",[t._v("D**n")]),t._v("中为所有顶点偶对vi、vj间的最终最短路径长度。")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/algorithm/basic/floyd-1.png"),alt:"wxmp"}}),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/algorithm/basic/floyd-2.png"),alt:"wxmp"}}),t._v(" "),a("h3",{attrs:{id:"_4-画片演示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-画片演示"}},[t._v("#")]),t._v(" 4.画片演示")]),t._v(" "),a("p",[t._v("矩阵坐标从0开始\n"),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/algorithm/basic/shortestpath-3.png"),alt:"wxmp"}})]),t._v(" "),a("h3",{attrs:{id:"_5-代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-代码实现"}},[t._v("#")]),t._v(" 5.代码实现")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//G--\x3e图，v0--\x3e源点，P[v][w]表示v到其余各点w最短路径，D[v][w]表示v到其余各点w的带权路径长度和 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ShortestPath_Floyd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AdjMatrix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAXVEX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAXVEX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAXVEX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MAXVEX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化D和P ")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vexnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vexnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" G"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("acre"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vexnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vexnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("vexnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果经过下标为k的顶点路径比原两点间的路径更短，则更新 ")]),t._v("\n                    D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" D"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("w"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" P"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//路径设置经过下标为k的顶点 ")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12345678910111213141516171819202122232425")]),t._v("\n")])])]),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/algorithm/basic/shortestpath-4.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("解读路径矩阵P:\n已0到3为例:")]),t._v(" "),a("blockquote",[a("p",[t._v("p[0][3]=1,所以0–>1;\np[1][3]=3,所以1–>3;\n所以0到3:0–>1–>3")])]),t._v(" "),a("h2",{attrs:{id:"源码地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源码地址"}},[t._v("#")]),t._v(" 源码地址")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/hsc396612325/Blog/tree/master/text19",target:"_blank",rel:"noopener noreferrer"}},[t._v("点此查看源码"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[t._v("《大话数据结构》\n《数据结构与算法》")]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("https://www.freesion.com/article/1065562680/")])])])}),[],!1,null,null,null);s.default=r.exports}}]);