(window.webpackJsonp=window.webpackJsonp||[]).push([[272],{787:function(t,s,a){"use strict";a.r(s);var n=a(53),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("本文主要是介绍 常用SQL-连表查询 。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1、union"}},[t._v("1、Union")])]),a("li",[a("a",{attrs:{href:"#_2、inner-join-内连接"}},[t._v("2、INNER JOIN（内连接）")])]),a("li",[a("a",{attrs:{href:"#_3、外连接"}},[t._v("3、外连接")])]),a("li",[a("a",{attrs:{href:"#_4、cross-join-交叉连接"}},[t._v("4、CROSS JOIN（交叉连接）")])]),a("li",[a("a",{attrs:{href:"#_5、全部实例脚本"}},[t._v("5、全部实例脚本")])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),a("p"),t._v(" "),a("h1",{attrs:{id:"sql总结-二-连表查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql总结-二-连表查询"}},[t._v("#")]),t._v(" SQL总结（二）连表查询")]),t._v(" "),a("p",[t._v("连接查询包括合并、内连接、外连接和交叉连接，如果涉及多表查询，了解这些连接的特点很重要。")]),t._v(" "),a("p",[t._v("只有真正了解它们之间的区别，才能正确使用。")]),t._v(" "),a("h2",{attrs:{id:"_1、union"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、union"}},[t._v("#")]),t._v(" 1、Union")]),t._v(" "),a("p",[t._v("UNION 操作符用于合并两个或多个 SELECT 语句的结果集。")]),t._v(" "),a("p",[t._v("UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生出一个结果表。")]),t._v(" "),a("p",[t._v("当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派生表的每一行不是来自 TABLE1 就是来自 TABLE2。")]),t._v(" "),a("p",[t._v("注意：使用UNION时，两张表查询的结果有相同数量的列、列类型相似。")]),t._v(" "),a("p",[t._v("学生表信息（Students）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("Age")])]),t._v(" "),a("th",[a("strong",[t._v("City")])]),t._v(" "),a("th",[a("strong",[t._v("MajorID")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("20")]),t._v(" "),a("td",[t._v("BeiJing")]),t._v(" "),a("td",[t._v("10")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("18")]),t._v(" "),a("td",[t._v("ShangHai")]),t._v(" "),a("td",[t._v("11")])])])]),t._v(" "),a("p",[t._v("教师表信息（Teachers）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Mrs Lee")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")])])])]),t._v(" "),a("p",[t._v("预置脚本：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MajorID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BeiJing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MajorID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ShangHai'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Teachers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mrs Lee'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Teachers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("1）基本UNION查询，查询学校教师、学生的总的信息表，包括ID和姓名")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Teachers\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Mrs Lee")])]),t._v(" "),a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")])])])]),t._v(" "),a("p",[t._v("2)带条件的UNION查询，也可以查询同一张表，查询年龄为18，23岁的学生信息")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Student "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("\n")])])]),a("p",[t._v("当然，这可以使用IN或者OR很容易实现，这里只是点到，以后遇到复杂查询，相信你会用到。")]),t._v(" "),a("p",[t._v("3）查询教师学生全部姓名")]),t._v(" "),a("p",[t._v("因为UNION只会选择不同的值，如果学生中和教师中有重名的情况，这就需要UNION ALL")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Teachers\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")])]),t._v(" "),a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Mrs Lee")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")])])])]),t._v(" "),a("h2",{attrs:{id:"_2、inner-join-内连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、inner-join-内连接"}},[t._v("#")]),t._v(" 2、INNER JOIN（内连接）")]),t._v(" "),a("p",[t._v("INNER JOIN（内连接），也成为自然连接")]),t._v(" "),a("p",[t._v("作用：根据两个或多个表中的列之间的关系，从这些表中查询数据。")]),t._v(" "),a("p",[t._v("注意: 内连接是从结果中删除其他被连接表中没有匹配行的所有行，所以内连接可能会丢失信息。")]),t._v(" "),a("p",[t._v("重点：内连接，只查匹配行。")]),t._v(" "),a("p",[t._v("语法：(INNER可省略)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" fieldlist\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" table1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" table2\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" table1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("table2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v("\n")])])]),a("p",[t._v("学生表信息（Students）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("Age")])]),t._v(" "),a("th",[a("strong",[t._v("City")])]),t._v(" "),a("th",[a("strong",[t._v("MajorID")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("20")]),t._v(" "),a("td",[t._v("BeiJing")]),t._v(" "),a("td",[t._v("10")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("18")]),t._v(" "),a("td",[t._v("ShangHai")]),t._v(" "),a("td",[t._v("11")])])])]),t._v(" "),a("p",[t._v("专业信息表（Majors）：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("10")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("12")]),t._v(" "),a("td",[t._v("Computer")])])])]),t._v(" "),a("p",[t._v("预置脚本：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MajorID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BeiJing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MajorID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ShangHai'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'English'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Computer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("实例：查询学生信息，包括ID,姓名、专业名称")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])])])]),t._v(" "),a("p",[t._v("根据结果可以清晰看到，确实只有匹配的行。学生Lucy的信息丢失了。")]),t._v(" "),a("p",[a("strong",[t._v("但是，inner join也会产生重复数据")]),t._v("。如果将Majors表的主键约束去掉，可以插入重复的ID，如：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'English'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Computer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("继续执行上面的关联语句，结果为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("Computer")])])])]),t._v(" "),a("p",[t._v("如果是LEFT JOIN也会有重复记录，其结果为：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("Computer")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("NULL")])])])]),t._v(" "),a("p",[t._v("RIGHT JOIN 结果与INNER JOIN一样。")]),t._v(" "),a("p",[t._v("后续我们会深入研究JOIN的具体原理。")]),t._v(" "),a("h2",{attrs:{id:"_3、外连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、外连接"}},[t._v("#")]),t._v(" 3、外连接")]),t._v(" "),a("p",[t._v("与内连接相比，即使没有匹配行，也会返回一个表的全集。")]),t._v(" "),a("p",[t._v("外连接分为三种：左外连接，右外连接，全外连接。对应SQL：LEFT/RIGHT/FULL OUTER JOIN。通常我们省略outer 这个关键字。写成：LEFT/RIGHT/FULL JOIN。")]),t._v(" "),a("p",[t._v("重点：至少有一方保留全集，没有匹配行用NULL代替。")]),t._v(" "),a("p",[t._v("1）LEFT OUTER JOIN，简称LEFT JOIN，左外连接（左连接）")]),t._v(" "),a("p",[t._v("结果集保留左表的所有行，但只包含第二个表与第一表匹配的行。第二个表相应的空行被放入NULL值。")]),t._v(" "),a("p",[a("strong",[t._v("依然沿用内链接的例子")])]),t._v(" "),a("p",[t._v("（1）使用左连接查询学生的信息，其中包括学生ID，学生姓名和专业名称。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorNameFROM Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" MajorsON Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("p",[a("strong",[t._v("结果：")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("NULL")])])])]),t._v(" "),a("p",[a("strong",[t._v("结论：")])]),t._v(" "),a("p",[t._v("通过结果，我们可以看到左连接包含了第一张表的所有信息，在第二张表中如果没有匹配项，则用NULL代替。")]),t._v(" "),a("p",[t._v("2）RIGHT JOIN(right outer join)右外连接(右连接)")]),t._v(" "),a("p",[t._v("右外连接保留了第二个表的所有行，但只包含第一个表与第二个表匹配的行。第一个表相应空行被入NULL值。")]),t._v(" "),a("p",[t._v("右连接与左连接思想类似。只是第二张保留全集，如果第一张表中没有匹配项，用NULL代替")]),t._v(" "),a("p",[t._v("依然沿用内链接的例子，只是改为右连接")]),t._v(" "),a("p",[t._v("（1）使用右连接查询学生的信息，其中包括学生ID，学生姓名和专业名称。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorNameFROM Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RIGHT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" MajorsON Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("Computer")])])])]),t._v(" "),a("p",[t._v("通过结果可以看到，包含了第二张表Majors的全集，Computer在Students表中没有匹配项，就用NULL代替。")]),t._v(" "),a("p",[t._v("3）FULL JOIN (FULL OUTER JOIN，全外连接）")]),t._v(" "),a("p",[t._v("全外连接，简称：全连接。会把两个表所有的行都显示在结果表中")]),t._v(" "),a("p",[t._v("1)使用全连接查询学生的信息，其中包括学生ID，学生姓名和专业名称。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorNameFROM Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" MajorsON Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("NULL")])]),t._v(" "),a("tr",[a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("NULL")]),t._v(" "),a("td",[t._v("Computer")])])])]),t._v(" "),a("p",[t._v("包含了两张表的所有记录，没有记录丢失，没有匹配的行用NULL代替。")]),t._v(" "),a("h2",{attrs:{id:"_4、cross-join-交叉连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、cross-join-交叉连接"}},[t._v("#")]),t._v(" 4、CROSS JOIN（交叉连接）")]),t._v(" "),a("p",[t._v("交叉连接。交叉连接返回左表中的所有行，左表中的每一行与右表中的所有行组合。交叉连接也称作笛卡尔积。")]),t._v(" "),a("p",[t._v("简单查询两张表组合，这是求笛卡儿积，效率最低。")]),t._v(" "),a("p",[t._v("笛卡儿积：笛卡尔乘积，也叫直积。假设集合A={a,b}，集合B={0,1,2}，则两个集合的笛卡尔积为{(a,0),(a,1),(a,2),(b,0),(b,1), (b,2)}。可以扩展到多个集合的情况。类似的例子有，如果A表示某学校学生的集合，B表示该学校所有课程的集合，则A与B的笛卡尔积表示所有可能的选课情况。")]),t._v(" "),a("p",[t._v("1）交叉连接查询学生的信息，其中包括学生ID，学生姓名和专业名称。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorNameFROM Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CROSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("English")])]),t._v(" "),a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("Computer")])]),t._v(" "),a("tr",[a("td",[t._v("102")]),t._v(" "),a("td",[t._v("Lucy")]),t._v(" "),a("td",[t._v("Computer")])])])]),t._v(" "),a("p",[t._v("2）查询多表，其实也是笛卡儿积，与CROSS JOIN等价，以下查询同上述结果一样。")]),t._v(" "),a("p",[t._v("这个可能很常见，但是大家一定要注意了，这样就查询了两张表中所有组合的全集。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorNameFROM Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors\n")])])]),a("p",[t._v("3）加了查询条件")]),t._v(" "),a("p",[t._v("注意:在使用CROSS JOIN关键字交叉连接表时，因为生成的是两个表的笛卡尔积，因而不能使用ON关键字，只能在WHERE子句中定义搜索条件。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorNameFROM Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CROSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" MajorsWHERE Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n")])])]),a("p",[t._v("查询结果：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("ID")])]),t._v(" "),a("th",[a("strong",[t._v("Name")])]),t._v(" "),a("th",[a("strong",[t._v("MajorName")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("101")]),t._v(" "),a("td",[t._v("Tom")]),t._v(" "),a("td",[t._v("English")])])])]),t._v(" "),a("p",[t._v("查询结果与INNER JOIN一样，但是其效率就慢很多了。")]),t._v(" "),a("h2",{attrs:{id:"_5、全部实例脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、全部实例脚本"}},[t._v("#")]),t._v(" 5、全部实例脚本")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DATABASE")]),t._v(" TestDB\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" TestDB\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--创建相关表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" OBJECT_ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Students'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'U'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--学生信息表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nName nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nAge "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nCity nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nMajorID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--专业信息表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" OBJECT_ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Majors'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'U'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Majors\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\nID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nName nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--教师信息表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" OBJECT_ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Teachers'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'U'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Teachers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Teachers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    ID "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Name nvarchar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--预置数据")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MajorID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Tom'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BeiJing'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("City"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("MajorID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ShangHai'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'English'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Computer'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Teachers\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Teachers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("101")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Mrs Lee'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Teachers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lucy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Teachers\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UNION")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ALL")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Teachers\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--内连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INNER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--左连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--右连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--全连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FULL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--交叉连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CROSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--交叉连接")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CROSS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" Majors\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MajorID "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--一次查询多表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ID"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" MajorName\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" Students"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Majors\n")])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("https://www.cnblogs.com/yank/p/3726491.html")])])])}),[],!1,null,null,null);s.default=e.exports}}]);