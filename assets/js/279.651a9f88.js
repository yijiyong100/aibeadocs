(window.webpackJsonp=window.webpackJsonp||[]).push([[279],{794:function(_,v,t){"use strict";t.r(v);var e=t(53),a=Object(e.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),t("p",[_._v("本文主要是介绍 关系数据库 。")])]),_._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_1、关系数据结构"}},[_._v("1、关系数据结构")]),t("ul",[t("li",[t("a",{attrs:{href:"#_1-1、-关系"}},[_._v("1.1、 关系")])]),t("li",[t("a",{attrs:{href:"#_1-2、关系模式"}},[_._v("1.2、关系模式")])]),t("li",[t("a",{attrs:{href:"#_1-3、关系数据库"}},[_._v("1.3、关系数据库")])])])]),t("li",[t("a",{attrs:{href:"#_2、关系操作"}},[_._v("2、关系操作")]),t("ul",[t("li",[t("a",{attrs:{href:"#_2-1、基本的关系操作"}},[_._v("2.1、基本的关系操作")])]),t("li",[t("a",{attrs:{href:"#_2-2、关系的语言分类"}},[_._v("2.2、关系的语言分类")])])])]),t("li",[t("a",{attrs:{href:"#_3、关系完整性约束"}},[_._v("3、关系完整性约束")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1、实体完整性-entity-integrity"}},[_._v("3.1、实体完整性（Entity Integrity）")])]),t("li",[t("a",{attrs:{href:"#_3-2、参照完整性"}},[_._v("3.2、参照完整性")])]),t("li",[t("a",{attrs:{href:"#_3-3、用户定义的完整性"}},[_._v("3.3、用户定义的完整性")])])])]),t("li",[t("a",{attrs:{href:"#参考文章"}},[_._v("参考文章")])])])]),t("p"),_._v(" "),t("p",[_._v("本节要点：")]),_._v(" "),t("ul",[t("li",[_._v("关系数据结构\n"),t("ul",[t("li",[_._v("关系")]),_._v(" "),t("li",[_._v("关系模式")]),_._v(" "),t("li",[_._v("关系数据库")])])]),_._v(" "),t("li",[_._v("关系操作")]),_._v(" "),t("li",[_._v("关系的完整性约束")])]),_._v(" "),t("p",[_._v("关系数据库系统是支持关系模型的数据库系统，关系数据库应用数学方法来处理数据库中的数据。按照数据模型的3个要素，关系模型由关系数据结构、关系操作集合和关系完整性约束3个部分组成。")]),_._v(" "),t("h2",{attrs:{id:"_1、关系数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、关系数据结构"}},[_._v("#")]),_._v(" 1、关系数据结构")]),_._v(" "),t("h3",{attrs:{id:"_1-1、-关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、-关系"}},[_._v("#")]),_._v(" 1.1、 关系")]),_._v(" "),t("p",[_._v("关系模型是建立在集合代数的基础上的，这里从集合论角度给出关系数据结构的形式化定义。")]),_._v(" "),t("h4",{attrs:{id:"_1-域-domain"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-域-domain"}},[_._v("#")]),_._v(" 1) 域（Domain）")]),_._v(" "),t("p",[_._v("域是一组具有相同数据类型的值的集合。例:整数、实数、介于某个取值范围的整数、指定长度的字符串集合、{‘男’，‘女’}、介于某个取值范围的日期等，都可以是域。")]),_._v(" "),t("h4",{attrs:{id:"_2-笛卡尔积-cartesian-product"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-笛卡尔积-cartesian-product"}},[_._v("#")]),_._v(" 2) 笛卡尔积（Cartesian Product）")]),_._v(" "),t("p",[_._v("给定一组域"),t("em",[_._v("D")]),_._v("1，"),t("em",[_._v("D")]),_._v("2，…，"),t("em",[_._v("Dn")]),_._v("，这些域中可以有相同的域。"),t("em",[_._v("D")]),_._v("1，"),t("em",[_._v("D")]),_._v("2，"),t("em",[_._v("…")]),_._v("，"),t("em",[_._v("Dn")]),_._v("的笛卡尔积为：")]),_._v(" "),t("p",[t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×…×"),t("em",[_._v("Dn")]),_._v("＝｛（"),t("em",[_._v("d")]),_._v("1，"),t("em",[_._v("d")]),_._v("2，…，"),t("em",[_._v("dn")]),_._v("）｜"),t("em",[_._v("di")]),_._v("Î"),t("em",[_._v("Di")]),_._v("，"),t("em",[_._v("i")]),_._v("＝1，2，…，"),t("em",[_._v("n")]),_._v("｝")]),_._v(" "),t("p",[_._v("元素中每一个元素（"),t("em",[_._v("d")]),_._v("1，"),t("em",[_._v("d")]),_._v("2，…，"),t("em",[_._v("dn")]),_._v("）叫作一个"),t("em",[_._v("n")]),_._v("元组（n-tuple）或简称元组（tuple）。")]),_._v(" "),t("p",[_._v("笛卡尔积元素（"),t("em",[_._v("d")]),_._v("1，"),t("em",[_._v("d")]),_._v("2，…，"),t("em",[_._v("dn")]),_._v("）中的每一个值"),t("em",[_._v("di")]),_._v("叫作一个分量。")]),_._v(" "),t("p",[_._v("若"),t("em",[_._v("Di")]),_._v("（"),t("em",[_._v("i")]),_._v("＝1，2，…，"),t("em",[_._v("n")]),_._v("）为有限集，其基数（Cardinal number）为"),t("em",[_._v("mi")]),_._v("（"),t("em",[_._v("i")]),_._v("＝1，2，…，"),t("em",[_._v("n")]),_._v("），则"),t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×…×"),t("em",[_._v("Dn")]),_._v("的基数"),t("em",[_._v("M")]),_._v("为：")]),_._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:_.$withBase("/assets/img/db/intro/relationdb-1.png"),alt:"wxmp"}}),_._v(" "),t("p",[_._v("示例：给出三个域：")]),_._v(" "),t("p",[t("em",[_._v("D")]),_._v("1=SUPERVISOR ={ 张清玫，刘逸 }")]),_._v(" "),t("p",[t("em",[_._v("D")]),_._v("2=SPECIALITY={计算机专业，信息专业}")]),_._v(" "),t("p",[t("em",[_._v("D")]),_._v("3=POSTGRADUATE={李勇，刘晨，王敏}")]),_._v(" "),t("p",[_._v("则"),t("em",[_._v("D")]),_._v("1，"),t("em",[_._v("D")]),_._v("2，"),t("em",[_._v("D")]),_._v("3的笛卡尔积为：")]),_._v(" "),t("p",[t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×"),t("em",[_._v("D")]),_._v("3 ＝{(张清玫,计算机专业,李勇)，(张清玫,计算机专业,刘晨)，(张清玫,计算机专业,王敏)，(张清玫，信息专业，李勇)，(张清玫，信息专业，刘晨)，(张清玫，信息专业，王敏)， (刘逸，计算机专业，李勇)，(刘逸，计算机专业，刘晨)，(刘逸，计算机专业，王敏)，(刘逸，信息专业，李勇)，(刘逸，信息专业，刘晨)，(刘逸，信息专业，王敏)｝")]),_._v(" "),t("p",[_._v("(张清玫,计算机专业,李勇)叫做一个元组；")]),_._v(" "),t("p",[_._v("张清玫叫做一个分量；")]),_._v(" "),t("p",[_._v("基数为2×2×3＝12，即"),t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×"),t("em",[_._v("D")]),_._v("3共有2×2×3＝12个元组。基数可以理解为里面有多少个元素。")]),_._v(" "),t("p",[_._v("笛卡尔积可表示为一个二维表。表中的每行对应一个元组，表中的每列对应一个域。如"),t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×"),t("em",[_._v("D")]),_._v("3的笛卡尔积：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("SUPERVISOR")]),_._v(" "),t("th",[_._v("SPECIALITY")]),_._v(" "),t("th",[_._v("POSTGRADUATE")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("张清玫")]),_._v(" "),t("td",[_._v("计算机专业")]),_._v(" "),t("td",[_._v("李勇")])]),_._v(" "),t("tr",[t("td",[_._v("张清玫")]),_._v(" "),t("td",[_._v("计算机专业")]),_._v(" "),t("td",[_._v("刘晨")])]),_._v(" "),t("tr",[t("td",[_._v("张清玫")]),_._v(" "),t("td",[_._v("计算机专业")]),_._v(" "),t("td",[_._v("王敏")])]),_._v(" "),t("tr",[t("td",[_._v("张清玫")]),_._v(" "),t("td",[_._v("信息专业")]),_._v(" "),t("td",[_._v("李勇")])]),_._v(" "),t("tr",[t("td",[_._v("张清玫")]),_._v(" "),t("td",[_._v("信息专业")]),_._v(" "),t("td",[_._v("刘晨")])]),_._v(" "),t("tr",[t("td",[_._v("张清玫")]),_._v(" "),t("td",[_._v("信息专业")]),_._v(" "),t("td",[_._v("王敏")])]),_._v(" "),t("tr",[t("td",[_._v("刘逸")]),_._v(" "),t("td",[_._v("计算机专业")]),_._v(" "),t("td",[_._v("李勇")])]),_._v(" "),t("tr",[t("td",[_._v("刘逸")]),_._v(" "),t("td",[_._v("计算机专业")]),_._v(" "),t("td",[_._v("刘晨")])]),_._v(" "),t("tr",[t("td",[_._v("刘逸")]),_._v(" "),t("td",[_._v("计算机专业")]),_._v(" "),t("td",[_._v("王敏")])]),_._v(" "),t("tr",[t("td",[_._v("刘逸")]),_._v(" "),t("td",[_._v("信息专业")]),_._v(" "),t("td",[_._v("李勇")])]),_._v(" "),t("tr",[t("td",[_._v("刘逸")]),_._v(" "),t("td",[_._v("信息专业")]),_._v(" "),t("td",[_._v("刘晨")])]),_._v(" "),t("tr",[t("td",[_._v("刘逸")]),_._v(" "),t("td",[_._v("信息专业")]),_._v(" "),t("td",[_._v("王敏")])])])]),_._v(" "),t("h4",{attrs:{id:"_3-关系-relation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-关系-relation"}},[_._v("#")]),_._v(" 3) 关系（Relation）")]),_._v(" "),t("p",[t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×…×"),t("em",[_._v("Dn")]),_._v("的子集叫作在域"),t("em",[_._v("D")]),_._v("1，"),t("em",[_._v("D")]),_._v("2，…，"),t("em",[_._v("Dn")]),_._v("上的关系，表示为"),t("em",[_._v("R")]),_._v("（"),t("em",[_._v("D")]),_._v("1，"),t("em",[_._v("D")]),_._v("2，…，"),t("em",[_._v("Dn")]),_._v("）")]),_._v(" "),t("p",[_._v("​     *R：*关系名")]),_._v(" "),t("p",[_._v("​     *n：*关系的目或度（Degree）")]),_._v(" "),t("p",[_._v("关系中的每个元素是关系中的元组，通常用"),t("em",[_._v("t")]),_._v("表示。")]),_._v(" "),t("p",[_._v("当"),t("em",[_._v("n")]),_._v("=1时，称该关系为单元关系（Unary relation）。")]),_._v(" "),t("p",[_._v("当"),t("em",[_._v("n")]),_._v("=2时，称该关系为二元关系（Binary relation）。")]),_._v(" "),t("p",[_._v("关系是笛卡尔积的有限子集，所以关系也是一个二维表，表的每行对应一个元组，表的每列对应一个域。关系中不同列可以对应相同的域，为了加以区分，必须对每列起一个名字，称为属性（Attribute）。"),t("em",[_._v("n")]),_._v("目关系必有"),t("em",[_._v("n")]),_._v("个属性。")]),_._v(" "),t("p",[_._v("若关系中的某一属性组的值能唯一地标识一个元组，则称该属性组为候选码（Candidate key）。")]),_._v(" "),t("p",[_._v("若一个关系由多个候选码，则选定其中一个为主码（Primary key）。")]),_._v(" "),t("p",[_._v("候选码的诸属性称为主属性（Prime attribute）。不包含在任何候选码中的属性称为非主属性（Non-prime attribute）或非码属性（Non-key attribute）。")]),_._v(" "),t("p",[_._v("在最简单的情况下，候选码只包含一个属性。在最极端的情况下，关系模式的所有属性组是这个关系模式的候选码，称为全码（All-key）。")]),_._v(" "),t("p",[_._v("一般来说"),t("em",[_._v("D")]),_._v("1×"),t("em",[_._v("D")]),_._v("2×…×"),t("em",[_._v("Dn")]),_._v("的笛卡尔积是没有实际语义的，只有她的某个子集才有实际含义。")]),_._v(" "),t("p",[_._v("基本关系应具有以下6条性质：")]),_._v(" "),t("ul",[t("li",[_._v("列是同质的")]),_._v(" "),t("li",[_._v("每个列对应一个属性名，属性名不重复，多个列可对应一个域")]),_._v(" "),t("li",[_._v("列的顺序无所谓")]),_._v(" "),t("li",[_._v("任意两个元组的候选码不能相同")]),_._v(" "),t("li",[_._v("行的顺序无所谓")]),_._v(" "),t("li",[_._v("分量必须是原子值（不能再有分量）")])]),_._v(" "),t("h3",{attrs:{id:"_1-2、关系模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、关系模式"}},[_._v("#")]),_._v(" 1.2、关系模式")]),_._v(" "),t("p",[_._v("在数据库中药区分型和值。关系数据库中，关系模式是型，关系是值。关系模式是对关系的描述。")]),_._v(" "),t("p",[_._v("关系的描述称为关系模式（Relation Schema）关系模式可以形式化地表示为：")]),_._v(" "),t("p",[_._v("​       "),t("em",[_._v("R")]),_._v("（"),t("em",[_._v("U")]),_._v("，"),t("em",[_._v("D")]),_._v("，dom，"),t("em",[_._v("F")]),_._v("）")]),_._v(" "),t("p",[_._v("​          "),t("em",[_._v("R")]),_._v("   关系名")]),_._v(" "),t("p",[_._v("​          "),t("em",[_._v("U")]),_._v("   组成该关系的属性名集合")]),_._v(" "),t("p",[_._v("​          "),t("em",[_._v("D")]),_._v("   属性组"),t("em",[_._v("U")]),_._v("中属性所来自的域")]),_._v(" "),t("p",[_._v("​          dom  属性向域的映象集合")]),_._v(" "),t("p",[_._v("​          "),t("em",[_._v("F")]),_._v("   属性间的数据依赖关系集合")]),_._v(" "),t("p",[_._v("关系模式通常可以简记为"),t("em",[_._v("R")]),_._v(" ("),t("em",[_._v("U")]),_._v(")或 "),t("em",[_._v("R")]),_._v(" ("),t("em",[_._v("A")]),_._v("1，"),t("em",[_._v("A")]),_._v("2，…，"),t("em",[_._v("An")]),_._v(")")]),_._v(" "),t("p",[t("em",[_._v("R")]),_._v("  关系名")]),_._v(" "),t("p",[t("em",[_._v("A")]),_._v("1，"),t("em",[_._v("A")]),_._v("2，…，"),t("em",[_._v("An")]),_._v("   属性名")]),_._v(" "),t("p",[_._v("如：学生（学号，姓名，性别，年龄，班级）")]),_._v(" "),t("h3",{attrs:{id:"_1-3、关系数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、关系数据库"}},[_._v("#")]),_._v(" 1.3、关系数据库")]),_._v(" "),t("p",[_._v("在关系模型中，实体以及实体间的联系都是用关系来表示的。在一个给定的应用领域中，所有实体及实体之间联系的关系的集合构成一个关系数据库。")]),_._v(" "),t("p",[_._v("关系数据库也有型和值之分。关系数据库的型也称为关系数据库模式，是对关系数据库的描述。关系数据库的值是这些关系模式在某一时刻对应的关系的集合。")]),_._v(" "),t("h2",{attrs:{id:"_2、关系操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、关系操作"}},[_._v("#")]),_._v(" 2、关系操作")]),_._v(" "),t("p",[_._v("关系模式由关系数据结构、关系操作集合和关系完整性约束三部分组成。下面关系操作的一些基本操作和分类。")]),_._v(" "),t("p",[_._v("关系模型给出了关系操作的能力的说明，但不对RDBMS语言给出具体的语法要求，也就是说不同的RDBMS可以定义和开发不同的语言来实现这些操作。")]),_._v(" "),t("h3",{attrs:{id:"_2-1、基本的关系操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、基本的关系操作"}},[_._v("#")]),_._v(" 2.1、基本的关系操作")]),_._v(" "),t("p",[_._v("关系模型中常用的关系操作包括查询（Query）操作和插入（insert）、删除（Delete）、修改（Update）操作两大部分。")]),_._v(" "),t("p",[_._v("关系的查询表达能力很强，是关系操作中最主要的部分。查询操作又可以分为：选择（Select）、投影（Project）、连接（Join）、除（Divide）、并（Union）、差（Except）、交（Intersection）、笛卡尔积等。")]),_._v(" "),t("p",[_._v("关系操作的特点是集合操作方式，即操作的对象和结果都是集合。")]),_._v(" "),t("h3",{attrs:{id:"_2-2、关系的语言分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、关系的语言分类"}},[_._v("#")]),_._v(" 2.2、关系的语言分类")]),_._v(" "),t("ul",[t("li",[_._v("l 关系代数语言 例如ISBL")]),_._v(" "),t("li",[_._v("l 关系演算语言\n"),t("ul",[t("li",[_._v("元组关系演算语言 例如APLHA，QUEL")]),_._v(" "),t("li",[_._v("域关系演算语言 例如QBE")])])]),_._v(" "),t("li",[_._v("l 具有关系代数和关系演算双重特点的语言 例如SQL")])]),_._v(" "),t("p",[_._v("关系代数是用对关系的运算来表达查询要求的。关系演算是用谓词来表达查询要求的。关系演算又可按谓词变元的基本对象是元组变量还是域变量分为元组关系演算和域关系演算。SQL是介于关系代数和关系演算之间的结构化语言，SQL不仅具有丰富的查询功能，而且具有数据定义和数据控制功能，是集查询、DDL、DML和DCL于一体的关系数据语言，它充分体现了关系数据语言的特点和优点，是关系数据库的标准语言。")]),_._v(" "),t("h2",{attrs:{id:"_3、关系完整性约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、关系完整性约束"}},[_._v("#")]),_._v(" 3、关系完整性约束")]),_._v(" "),t("p",[_._v("关系模型的完整性规则是对关系的某种约束条件，这些约束条件实际上是现实世界的要求，用来满足数据的正确性、有效性和相容性。关系模型中有三类完整性约束：实体完整性、参照完整性和用户定义的完整性。")]),_._v(" "),t("h3",{attrs:{id:"_3-1、实体完整性-entity-integrity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、实体完整性-entity-integrity"}},[_._v("#")]),_._v(" 3.1、实体完整性（Entity Integrity）")]),_._v(" "),t("p",[_._v("若属性"),t("em",[_._v("A")]),_._v("是基本关系"),t("em",[_._v("R")]),_._v("的主码中的属性，则属性"),t("em",[_._v("A")]),_._v("不能取空值。空值就是“不知道”或“不存在”的值。空值一般用null表示，不同于0或空串")]),_._v(" "),t("p",[_._v("关系模型必须遵守实体完整性规则的原因：一个基本表通常对应现实世界的一个实体集。现实世界中的实体和实体间的联系都是可区分的，即它们具有某种唯一性标识。相应地，关系模型中以主码作为唯一性标识。主码中的属性即主属性不能取空值。")]),_._v(" "),t("h3",{attrs:{id:"_3-2、参照完整性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、参照完整性"}},[_._v("#")]),_._v(" 3.2、参照完整性")]),_._v(" "),t("p",[_._v("在关系模型中实体及实体间的联系都是用关系来描述的，因此可能存在着关系与关系间的引用。")]),_._v(" "),t("p",[_._v("例1 学生实体、专业实体以及专业与学生间的一对多联系")]),_._v(" "),t("p",[_._v("​    学生（学号，姓名，性别，专业号，年龄）")]),_._v(" "),t("p",[_._v("专业（专业号，专业名）")]),_._v(" "),t("p",[_._v("这两个关系之间存在着属性的引用，即学生关系引用了专业关系的主码“专业号”。显然，学生关系中的“专业号”值必须是确实存在的专业的专业号，即专业关系中有该专业的记录。也就是说，学生关系中的某个属性的取值需要参照专业关系的属性取值。")]),_._v(" "),t("p",[_._v("例2 学生、课程、学生与课程之间的多对多联系")]),_._v(" "),t("p",[_._v("学生（学号，姓名，性别，年龄，系）")]),_._v(" "),t("p",[_._v("课程（课程号，课程名，学分，先行课）")]),_._v(" "),t("p",[_._v("选修（学号，课程号，成绩）")]),_._v(" "),t("p",[_._v("这3个关系之间也存在着属性的引用，即选修关系引用了学生关系的主码“学号”和课程关系的主码“课程号”。")]),_._v(" "),t("p",[_._v("不仅两个或两个以上的关系间可以存在引用关系，同一关系内部属性间也可能存在引用关系。")]),_._v(" "),t("p",[_._v("例3 在学生（学号，姓名，性别，专业号，年龄，班长）关系中，“学号”属性是主码，“班长”属性表示该学生所在班级的班长的学号，它引用了本关系“学号”属性，即“班长”必须是确实存在的学生的学号。")]),_._v(" "),t("p",[_._v("这三个例子说明关系与关系之间存在着相互引用，相互约束的情况。")]),_._v(" "),t("p",[_._v("引用分析：")]),_._v(" "),t("ul",[t("li",[_._v("引用发生在两个表之间或一个表内部")]),_._v(" "),t("li",[_._v("分别称为被引用表和引用表")]),_._v(" "),t("li",[_._v("被引用列和引用列是同质的（一般同名）")]),_._v(" "),t("li",[_._v("被引用列是主码")]),_._v(" "),t("li",[_._v("引用列称为外码")])]),_._v(" "),t("p",[_._v("​")]),_._v(" "),t("p",[_._v("设"),t("em",[_._v("F")]),_._v("是关系"),t("em",[_._v("R")]),_._v("的一个或一组属性，但不是关系"),t("em",[_._v("R")]),_._v("的码。如果F与关系"),t("em",[_._v("S")]),_._v("的主码Ks相对应，则称F是关系"),t("em",[_._v("R")]),_._v("的外码，关系"),t("em",[_._v("R称")]),_._v("为参照关系（Referencing Relation）关系，"),t("em",[_._v("S称")]),_._v("为被参照关系（Referenced Relation）或目标关系（Target Relation）。")]),_._v(" "),t("ul",[t("li",[_._v("关系"),t("em",[_._v("R")]),_._v("和"),t("em",[_._v("S")]),_._v("不一定是不同的关系")]),_._v(" "),t("li",[_._v("目标关系"),t("em",[_._v("S")]),_._v("的主码Ks 和参照关系的外码F必须定义在同一个（或一组）域上")]),_._v(" "),t("li",[_._v("外码并不一定要与相应的主码同名，当外码与相应的主码属于不同关系时，往往取相同的名字，以便于识别")])]),_._v(" "),t("p",[_._v("若属性（或属性组）"),t("em",[_._v("F")]),_._v("是关系"),t("em",[_._v("R")]),_._v("的外码它与关系"),t("em",[_._v("S")]),_._v("的主码Ks相对应（关系"),t("em",[_._v("R")]),_._v("和"),t("em",[_._v("S可是一个")]),_._v("关系），则对于"),t("em",[_._v("R")]),_._v("中每个元组在"),t("em",[_._v("F")]),_._v("上的值必须为：")]),_._v(" "),t("ul",[t("li",[_._v("· 或者取空值（"),t("em",[_._v("F")]),_._v("的每个属性值均为空值）")]),_._v(" "),t("li",[_._v("· 或者等于"),t("em",[_._v("S")]),_._v("中某个元组的主码值。")])]),_._v(" "),t("p",[_._v("例1：学生关系中每个元组的“专业号”属性只取下面两类值：")]),_._v(" "),t("p",[_._v("（1）空值，表示尚未给该学生分配专业")]),_._v(" "),t("p",[_._v("（2）非空值，这时该值必须是专业关系中某个元组的“专业号”值，表示该学生不可能分配到一个不存在的专业中")]),_._v(" "),t("p",[_._v("例2 ：选修（学号，课程号，成绩）")]),_._v(" "),t("p",[_._v("“学号”和“课程号”是选修关系中的主属性，按照实体完整性和参照完整性规则，它们")]),_._v(" "),t("p",[_._v("只能取相应被参照关系中已经存在的主码值")]),_._v(" "),t("p",[_._v("例3 ：学生（学号，姓名，性别，专业号，年龄，班长）")]),_._v(" "),t("p",[_._v("“班长”属性值可以取两类值：")]),_._v(" "),t("p",[_._v("（1）空值，表示该学生所在班级尚未选出班长，或该学生本人即是班长；")]),_._v(" "),t("p",[_._v("（2）非空值，这时该值必须是本关系中某个元组的学号值")]),_._v(" "),t("h3",{attrs:{id:"_3-3、用户定义的完整性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、用户定义的完整性"}},[_._v("#")]),_._v(" 3.3、用户定义的完整性")]),_._v(" "),t("p",[_._v("用户定义的完整性是针对某一具体关系数据库的约束条件，反映某一具体应用所涉及的数据必须满足的语义要求。")]),_._v(" "),t("p",[_._v("例:课程(课程号，课程名，学分)")]),_._v(" "),t("ul",[t("li",[_._v("“课程名”属性必须取唯一值")]),_._v(" "),t("li",[_._v("非主属性“课程名”也不能取空值")]),_._v(" "),t("li",[_._v("“学分”属性只能取值{1，2，3，4}")])]),_._v(" "),t("p",[_._v("关系模型应提供定义和检验这类完整性的机制，以便用统一的系统的方法处理它们，而不要由应用程序承担这一功能。")]),_._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[_._v("#")]),_._v(" 参考文章")]),_._v(" "),t("ul",[t("li",[_._v("https://www.cnblogs.com/zhouyeqin/p/7296240.html")])])])}),[],!1,null,null,null);v.default=a.exports}}]);