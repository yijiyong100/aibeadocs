(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{796:function(_,v,t){"use strict";t.r(v);var S=t(53),p=Object(S.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[_._v("TIP")]),_._v(" "),t("p",[_._v("本文主要是介绍 关系数据库语言SQL 。")])]),_._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#_1、sql概述"}},[_._v("1、SQL概述")])]),t("li",[t("a",{attrs:{href:"#_2、学生-课程关系"}},[_._v("2、学生-课程关系")])]),t("li",[t("a",{attrs:{href:"#_3、数据定义"}},[_._v("3、数据定义")]),t("ul",[t("li",[t("a",{attrs:{href:"#_3-1、基本表的定义、删除与修改"}},[_._v("3.1、基本表的定义、删除与修改")])]),t("li",[t("a",{attrs:{href:"#_3-1-1、-定义基本表"}},[_._v("3.1.1、 定义基本表")])]),t("li",[t("a",{attrs:{href:"#_3-1-2、-数据类型"}},[_._v("3.1.2、 数据类型")])]),t("li",[t("a",{attrs:{href:"#_3-1-3、删除基本表"}},[_._v("3.1.3、删除基本表")])]),t("li",[t("a",{attrs:{href:"#_3-1-4、修改基本表"}},[_._v("3.1.4、修改基本表")])]),t("li",[t("a",{attrs:{href:"#_3-2、索引的建立与删除"}},[_._v("3.2、索引的建立与删除")])]),t("li",[t("a",{attrs:{href:"#_3-2-1、建立索引"}},[_._v("3.2.1、建立索引")])]),t("li",[t("a",{attrs:{href:"#_3-2-2、-删除索引"}},[_._v("3.2.2、 删除索引")])])])]),t("li",[t("a",{attrs:{href:"#_4、查询"}},[_._v("4、查询")]),t("ul",[t("li",[t("a",{attrs:{href:"#_4-1、单表查询"}},[_._v("4.1、单表查询")])]),t("li",[t("a",{attrs:{href:"#_4-1-1、查询指定列"}},[_._v("4.1.1、查询指定列")])]),t("li",[t("a",{attrs:{href:"#_4-1-2、查询全部列"}},[_._v("4.1.2、查询全部列")])]),t("li",[t("a",{attrs:{href:"#_4-1-3、-查询经过计算的值"}},[_._v("4.1.3、 查询经过计算的值")])]),t("li",[t("a",{attrs:{href:"#_4-1-4、使用列别名-可选-改变查询结果的列标题"}},[_._v("4.1.4、使用列别名(可选)改变查询结果的列标题")])]),t("li",[t("a",{attrs:{href:"#_4-1-5、-消除取值重复的行"}},[_._v("4.1.5、 消除取值重复的行")])]),t("li",[t("a",{attrs:{href:"#_4-1-6、查询满足条件的元组"}},[_._v("4.1.6、查询满足条件的元组")])]),t("li",[t("a",{attrs:{href:"#_4-1-7、对查询结果排序"}},[_._v("4.1.7、对查询结果排序")])]),t("li",[t("a",{attrs:{href:"#_4-1-8、-使用集函数"}},[_._v("4.1.8、 使用集函数")])]),t("li",[t("a",{attrs:{href:"#_4-1-9、对查询结果分组"}},[_._v("4.1.9、对查询结果分组")])]),t("li",[t("a",{attrs:{href:"#_4-2、连接查询"}},[_._v("4.2、连接查询")])]),t("li",[t("a",{attrs:{href:"#_4-2-1、等值与非等值连接查询"}},[_._v("4.2.1、等值与非等值连接查询")])]),t("li",[t("a",{attrs:{href:"#_4-2-2、-自身连接"}},[_._v("4.2.2、 自身连接")])]),t("li",[t("a",{attrs:{href:"#_4-2-3、外连接-outer-join"}},[_._v("4.2.3、外连接（Outer Join）")])]),t("li",[t("a",{attrs:{href:"#_4-3、嵌套查询"}},[_._v("4.3、嵌套查询")])]),t("li",[t("a",{attrs:{href:"#_4-3-1、嵌套查询概述"}},[_._v("4.3.1、嵌套查询概述")])]),t("li",[t("a",{attrs:{href:"#_4-3-2、嵌套查询分类"}},[_._v("4.3.2、嵌套查询分类")])]),t("li",[t("a",{attrs:{href:"#_4-3-3、引出子查询的谓词"}},[_._v("4.3.3、引出子查询的谓词")])]),t("li",[t("a",{attrs:{href:"#_4-4、集合查询"}},[_._v("4.4、集合查询")])]),t("li",[t("a",{attrs:{href:"#_4-4-1、并操作"}},[_._v("4.4.1、并操作")])]),t("li",[t("a",{attrs:{href:"#_4-4-2、交操作"}},[_._v("4.4.2、交操作")])]),t("li",[t("a",{attrs:{href:"#_4-4-3、-差操作"}},[_._v("4.4.3、 差操作")])]),t("li",[t("a",{attrs:{href:"#_4-5、select语句的一般格式"}},[_._v("4.5、SELECT语句的一般格式")])])])]),t("li",[t("a",{attrs:{href:"#_5、数据更新"}},[_._v("5、数据更新")]),t("ul",[t("li",[t("a",{attrs:{href:"#_5-1、插入数据"}},[_._v("5.1、插入数据")])]),t("li",[t("a",{attrs:{href:"#_5-1-1、插入单个元组"}},[_._v("5.1.1、插入单个元组")])]),t("li",[t("a",{attrs:{href:"#_5-1-2、插入子查询结果"}},[_._v("5.1.2、插入子查询结果")])]),t("li",[t("a",{attrs:{href:"#_5-2、修改数据"}},[_._v("5.2、修改数据")])]),t("li",[t("a",{attrs:{href:"#_5-2-1、修改某一个元组的值"}},[_._v("5.2.1、修改某一个元组的值")])]),t("li",[t("a",{attrs:{href:"#_5-2-2、-修改多个元组的值"}},[_._v("5.2.2、 修改多个元组的值")])]),t("li",[t("a",{attrs:{href:"#_5-2-3、带子查询的修改语句"}},[_._v("5.2.3、带子查询的修改语句")])]),t("li",[t("a",{attrs:{href:"#_5-3、删除数据"}},[_._v("5.3、删除数据")])]),t("li",[t("a",{attrs:{href:"#_5-3-1、-删除某一个元组的值"}},[_._v("5.3.1、 删除某一个元组的值")])]),t("li",[t("a",{attrs:{href:"#_5-3-2、-删除多个元组的值"}},[_._v("5.3.2、 删除多个元组的值")])]),t("li",[t("a",{attrs:{href:"#_5-3-3、-带子查询的删除语句"}},[_._v("5.3.3、 带子查询的删除语句")])])])]),t("li",[t("a",{attrs:{href:"#_6、视图"}},[_._v("6、视图")]),t("ul",[t("li",[t("a",{attrs:{href:"#_6-1、定义视图"}},[_._v("6.1、定义视图")])]),t("li",[t("a",{attrs:{href:"#_6-1-1、建立视图"}},[_._v("6.1.1、建立视图")])]),t("li",[t("a",{attrs:{href:"#_6-1-2、删除视图"}},[_._v("6.1.2、删除视图")])]),t("li",[t("a",{attrs:{href:"#_6-2、查询视图"}},[_._v("6.2、查询视图")])]),t("li",[t("a",{attrs:{href:"#_6-3、更新视图"}},[_._v("6.3、更新视图")])]),t("li",[t("a",{attrs:{href:"#_6-4、视图的作用"}},[_._v("6.4、视图的作用")])])])]),t("li",[t("a",{attrs:{href:"#参考文章"}},[_._v("参考文章")])])])]),t("p"),_._v(" "),t("p",[_._v("本节要点：")]),_._v(" "),t("ul",[t("li",[_._v("l SQL概述")]),_._v(" "),t("li",[_._v("l 学生-课程关系")]),_._v(" "),t("li",[_._v("l 数据定义\n"),t("ul",[t("li",[_._v("基本表的定义、删除与修改")]),_._v(" "),t("li",[_._v("索引的建立与删除")])])]),_._v(" "),t("li",[_._v("l 查询\n"),t("ul",[t("li",[_._v("单表查询")]),_._v(" "),t("li",[_._v("连接查询")]),_._v(" "),t("li",[_._v("嵌套查询")]),_._v(" "),t("li",[_._v("集合查询")])])]),_._v(" "),t("li",[_._v("l 数据更新\n"),t("ul",[t("li",[_._v("插入数据")]),_._v(" "),t("li",[_._v("修改数据")]),_._v(" "),t("li",[_._v("删除数据")])])]),_._v(" "),t("li",[_._v("l 视图\n"),t("ul",[t("li",[_._v("定义视图")]),_._v(" "),t("li",[_._v("查询视图")]),_._v(" "),t("li",[_._v("更新视图")]),_._v(" "),t("li",[_._v("视图的作用")])])])]),_._v(" "),t("p",[_._v("SQL（Structured Query Language），即结构化查询语言，是关系数据库的标准语言，SQL是一个通用的、功能极强的关系数据库语言。当前，几乎所有的关系数据库管理系统软件都支持SQL。本节将主要介绍SQL。")]),_._v(" "),t("h2",{attrs:{id:"_1、sql概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1、sql概述"}},[_._v("#")]),_._v(" 1、SQL概述")]),_._v(" "),t("p",[_._v("SQL是在1974年由Boyce和Chamberlin提出的，并在IBM公司研制的关系数据库管理系统原型System R上实现。SQL之所以能够为用户和业界所接受，并成为国际标准，是因为它是一个综合的、功能极强同时又简介易学的语言。SQL集数据查询（Data Query）、数据操纵（Data Manipulation）、数据定义（Data Definition）和数据控制（Data Control）功能于一体。")]),_._v(" "),t("p",[_._v("SQL的特点：")]),_._v(" "),t("ul",[t("li",[_._v("l 综合统一")]),_._v(" "),t("li",[_._v("l 高度非过程化")]),_._v(" "),t("li",[_._v("l 面向集合的操作方式")]),_._v(" "),t("li",[_._v("l 以同一种语法结构提供两种使用方法(交互式, 嵌入式)")]),_._v(" "),t("li",[_._v("l 语言简洁，易学易用")])]),_._v(" "),t("p",[_._v("注：SQL完成核心功能只用了下面9个动词：")]),_._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:_.$withBase("/assets/img/db/intro/dbtheory-1.png"),alt:"wxmp"}}),_._v(" "),t("h2",{attrs:{id:"_2、学生-课程关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2、学生-课程关系"}},[_._v("#")]),_._v(" 2、学生-课程关系")]),_._v(" "),t("p",[_._v("接下来知识的学习需要用到学生-课程的关系作为例子来讲解，所以先给出3个表的关系：")]),_._v(" "),t("ul",[t("li",[_._v("l 学生表：Student（Sno，Sname，Ssex，Sage，Sdept）")]),_._v(" "),t("li",[_._v("l 课程表：Course（Cno，Cname，Cpno，Ccredit）")]),_._v(" "),t("li",[_._v("l 学生选课表：SC（Sno，Cno，Grade）")])]),_._v(" "),t("p",[_._v("注：加下划线的是关系中的主码。")]),_._v(" "),t("p",[_._v("各个表中的数据示例如下（表的具体定义后续会讲到，先看看表的结构和信息）：")]),_._v(" "),t("p",[_._v("Student")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("学号Sno")]),_._v(" "),t("th",[_._v("姓名Sname")]),_._v(" "),t("th",[_._v("性别Ssex")]),_._v(" "),t("th",[_._v("年龄Sage")]),_._v(" "),t("th",[_._v("所在系Sdept")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("200215121")]),_._v(" "),t("td",[_._v("李勇")]),_._v(" "),t("td",[_._v("男")]),_._v(" "),t("td",[_._v("20")]),_._v(" "),t("td",[_._v("CS")])]),_._v(" "),t("tr",[t("td",[_._v("200215122")]),_._v(" "),t("td",[_._v("刘晨")]),_._v(" "),t("td",[_._v("女")]),_._v(" "),t("td",[_._v("19")]),_._v(" "),t("td",[_._v("CS")])]),_._v(" "),t("tr",[t("td",[_._v("200215123")]),_._v(" "),t("td",[_._v("王敏")]),_._v(" "),t("td",[_._v("女")]),_._v(" "),t("td",[_._v("18")]),_._v(" "),t("td",[_._v("MA")])]),_._v(" "),t("tr",[t("td",[_._v("200215125")]),_._v(" "),t("td",[_._v("张立")]),_._v(" "),t("td",[_._v("男")]),_._v(" "),t("td",[_._v("19")]),_._v(" "),t("td",[_._v("IS")])])])]),_._v(" "),t("p",[_._v("Course")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("课程号Cno")]),_._v(" "),t("th",[_._v("课程名Cname")]),_._v(" "),t("th",[_._v("先行课Cpno")]),_._v(" "),t("th",[_._v("学分Ccredit")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("1")]),_._v(" "),t("td",[_._v("数据库")]),_._v(" "),t("td",[_._v("5")]),_._v(" "),t("td",[_._v("4")])]),_._v(" "),t("tr",[t("td",[_._v("2")]),_._v(" "),t("td",[_._v("数学")]),_._v(" "),t("td"),_._v(" "),t("td",[_._v("2")])]),_._v(" "),t("tr",[t("td",[_._v("3")]),_._v(" "),t("td",[_._v("信息系统")]),_._v(" "),t("td",[_._v("1")]),_._v(" "),t("td",[_._v("4")])]),_._v(" "),t("tr",[t("td",[_._v("4")]),_._v(" "),t("td",[_._v("操作系统")]),_._v(" "),t("td",[_._v("6")]),_._v(" "),t("td",[_._v("3")])]),_._v(" "),t("tr",[t("td",[_._v("5")]),_._v(" "),t("td",[_._v("数据结构")]),_._v(" "),t("td",[_._v("7")]),_._v(" "),t("td",[_._v("4")])]),_._v(" "),t("tr",[t("td",[_._v("6")]),_._v(" "),t("td",[_._v("数据处理")]),_._v(" "),t("td"),_._v(" "),t("td",[_._v("2")])]),_._v(" "),t("tr",[t("td",[_._v("7")]),_._v(" "),t("td",[_._v("PASCAL语言")]),_._v(" "),t("td",[_._v("6")]),_._v(" "),t("td",[_._v("4")])])])]),_._v(" "),t("p",[_._v("SC")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("学号Sno")]),_._v(" "),t("th",[_._v("课程号Cno")]),_._v(" "),t("th",[_._v("成绩Grade")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("200215121")]),_._v(" "),t("td",[_._v("1")]),_._v(" "),t("td",[_._v("92")])]),_._v(" "),t("tr",[t("td",[_._v("200215121")]),_._v(" "),t("td",[_._v("2")]),_._v(" "),t("td",[_._v("85")])]),_._v(" "),t("tr",[t("td",[_._v("200215121")]),_._v(" "),t("td",[_._v("3")]),_._v(" "),t("td",[_._v("88")])]),_._v(" "),t("tr",[t("td",[_._v("200215122")]),_._v(" "),t("td",[_._v("2")]),_._v(" "),t("td",[_._v("90")])]),_._v(" "),t("tr",[t("td",[_._v("200215122")]),_._v(" "),t("td",[_._v("3")]),_._v(" "),t("td",[_._v("80")])])])]),_._v(" "),t("h2",{attrs:{id:"_3、数据定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3、数据定义"}},[_._v("#")]),_._v(" 3、数据定义")]),_._v(" "),t("p",[_._v("关系数据库系统支持三级模式结构，其模式、外模式和内模式中的基本对象由表、视图和索引，因此SQL的数据定义功能包括表定义、视图和索引的定义，如下表是SQL的数据定义语句总结：")]),_._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:_.$withBase("/assets/img/db/intro/dbtheory-2.png"),alt:"wxmp"}}),_._v(" "),t("h3",{attrs:{id:"_3-1、基本表的定义、删除与修改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、基本表的定义、删除与修改"}},[_._v("#")]),_._v(" 3.1、基本表的定义、删除与修改")]),_._v(" "),t("h3",{attrs:{id:"_3-1-1、-定义基本表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1、-定义基本表"}},[_._v("#")]),_._v(" 3.1.1、 定义基本表")]),_._v(" "),t("p",[_._v("语法：")]),_._v(" "),t("p",[_._v("CREATE TABLE <表名>")]),_._v(" "),t("p",[_._v("（<列名> <数据类型>[ <列级完整性约束条件> ]")]),_._v(" "),t("p",[_._v("[，<列名> <数据类型>[ <列级完整性约束>] ] …")]),_._v(" "),t("p",[_._v("[，<表级完整性约束> ]")]),_._v(" "),t("p",[_._v("）；")]),_._v(" "),t("p",[_._v("<表名>：所要定义的基本表的名字")]),_._v(" "),t("p",[_._v("<列名>：组成该表的各个属性（列）")]),_._v(" "),t("p",[_._v("<列级完整性约束条件>：涉及相应属性列的完整性约束条件")]),_._v(" "),t("p",[_._v("<表级完整性约束条件>：涉及一个或多个属性列的完整性约束条件")]),_._v(" "),t("p",[_._v("示例：")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("建立学生表Student：")]),_._v(" "),t("p",[_._v("CREATE TABLE Student")])])]),_._v(" "),t("p",[_._v("​    (Sno    CHAR(5)PRIMARY KEY， /* PRIMARY KEY是完整性约束，以后讲到*/")]),_._v(" "),t("p",[_._v("​     Sname CHAR(20)NOT NULL，")]),_._v(" "),t("p",[_._v("​     Ssex   CHAR(1)，")]),_._v(" "),t("p",[_._v("​     Sage   INT，")]),_._v(" "),t("p",[_._v("​     Sdept  CHAR(15))；")]),_._v(" "),t("ul",[t("li",[_._v("建立一个“课程”表Course：")])]),_._v(" "),t("p",[_._v("​    CREATE TABLE Course")]),_._v(" "),t("p",[_._v("​    (Cno    CHAR(5)PRIMARY KEY，")]),_._v(" "),t("p",[_._v("​     Cname CHAR(20)NOT NULL，")]),_._v(" "),t("p",[_._v("​     Cpno   CHAR(5)，")]),_._v(" "),t("p",[_._v("​     Credit   INT，")]),_._v(" "),t("p",[_._v("​     FOREIGN KEY Cpno REFERENCES Course(Cno))；")]),_._v(" "),t("p",[_._v("注：说明参照表和被参照表可以是同一个。")]),_._v(" "),t("ul",[t("li",[_._v("建立一个“学生选课”表SC，它由学号Sno、课程号Cno，修课成绩Grade组成，其中(Sno, Cno)为主码:")])]),_._v(" "),t("p",[_._v("CREATE TABLE SC(")]),_._v(" "),t("p",[_._v("​      Sno CHAR(5),")]),_._v(" "),t("p",[_._v("​      Cno CHAR(3),")]),_._v(" "),t("p",[_._v("​      Grade  INT,")]),_._v(" "),t("p",[_._v("​      Primary key (Sno, Cno),")]),_._v(" "),t("p",[_._v("FOREIGN KEY (Sno)REFERENCES Student(Sno)")]),_._v(" "),t("p",[_._v("FOREIGN KEY (Cno)REFERENCES Course(Cno));")]),_._v(" "),t("h3",{attrs:{id:"_3-1-2、-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2、-数据类型"}},[_._v("#")]),_._v(" 3.1.2、 数据类型")]),_._v(" "),t("p",[_._v("关系模型中一个很重要的概念是域，每一个属性来自一个域，它的取值必须是域中的值。在SQL中域的概念用数据类型来实现，在定义表的各个属性时需要指明其数据类型及长度。SQL提供了一些主要数据类型如下（不同的RDBMS中支持的数据类型不尽相同）：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("数据类型")]),_._v(" "),t("th",[_._v("含义")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("CHAR(n)")]),_._v(" "),t("td",[_._v("长度为n的定长字符串")])]),_._v(" "),t("tr",[t("td",[_._v("VARCHAR(n)")]),_._v(" "),t("td",[_._v("最大长度为n的变长字符串")])]),_._v(" "),t("tr",[t("td",[_._v("INT")]),_._v(" "),t("td",[_._v("长整数（也可以写成INTEGER）")])]),_._v(" "),t("tr",[t("td",[_._v("SMALLINT")]),_._v(" "),t("td",[_._v("短整数")])]),_._v(" "),t("tr",[t("td",[_._v("NUMBERIC(p,d)")]),_._v(" "),t("td",[_._v("定点数，由p为数字（不包括符号、小数点）组成，小数后面有d位数字")])]),_._v(" "),t("tr",[t("td",[_._v("REAL")]),_._v(" "),t("td",[_._v("取决于机器精度的浮点数")])]),_._v(" "),t("tr",[t("td",[_._v("Double Percision")]),_._v(" "),t("td",[_._v("取决于机器精度的双精度浮点数")])]),_._v(" "),t("tr",[t("td",[_._v("FLOAT(n)")]),_._v(" "),t("td",[_._v("浮点数，精度至少为n位数字")])]),_._v(" "),t("tr",[t("td",[_._v("DATE、")]),_._v(" "),t("td",[_._v("日期，包含年月日，格式为YYYY-MM-DD")])]),_._v(" "),t("tr",[t("td",[_._v("TIME")]),_._v(" "),t("td",[_._v("时间，包含一日的时分秒，格式为HH：MM：SS")])])])]),_._v(" "),t("p",[_._v("注：VARCHAR、NUMBERIC和DATE较常用。")]),_._v(" "),t("h3",{attrs:{id:"_3-1-3、删除基本表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3、删除基本表"}},[_._v("#")]),_._v(" 3.1.3、删除基本表")]),_._v(" "),t("p",[_._v("语法：")]),_._v(" "),t("p",[_._v("DROP TABLE <表名> [RESTRICT|CASCADE];")]),_._v(" "),t("p",[_._v("RESTRICT：该表删除是有限制的，待删除的表不能被其他表的约束所引用，否则不能删除；")]),_._v(" "),t("p",[_._v("CASCADE：删除表的同时删除其他约束对象。")]),_._v(" "),t("p",[_._v("一般默认是RESTRICT。")]),_._v(" "),t("p",[_._v("示例：（慎用，一旦删除不可恢复）")]),_._v(" "),t("p",[_._v("删除Student表")]),_._v(" "),t("p",[_._v("DROP TABLE Student RESTRICT;")]),_._v(" "),t("h3",{attrs:{id:"_3-1-4、修改基本表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-4、修改基本表"}},[_._v("#")]),_._v(" 3.1.4、修改基本表")]),_._v(" "),t("p",[_._v("语法：")]),_._v(" "),t("p",[_._v("ALTER TABLE <表名>")]),_._v(" "),t("p",[_._v("[ ADD <新列名> <数据类型> [ 完整性约束 ] ]")]),_._v(" "),t("p",[_._v("[ DROP <原列名>|<完整性约束名> ]")]),_._v(" "),t("p",[_._v("[ALTER COLUMN <原列名> <数据类型> ]；")]),_._v(" "),t("ul",[t("li",[_._v("<表名>：要修改的基本表")]),_._v(" "),t("li",[_._v("ADD子句：增加新列和新的完整性约束条件")]),_._v(" "),t("li",[_._v("DROP子句：删除指定的列或完整性约束")]),_._v(" "),t("li",[_._v("ALTER COLUMN子句：用于修改指定列的数据类型")])]),_._v(" "),t("p",[_._v("示例：")]),_._v(" "),t("p",[_._v("向Student表增加“入学时间”列，其数据类型为日期型：")]),_._v(" "),t("p",[_._v("​    ALTER TABLE Student ADD Scome DATE；")]),_._v(" "),t("p",[_._v("将年龄的数据类型由字符型（假设原来的数据类型是字符型）改为整数：")]),_._v(" "),t("p",[_._v("​      ALTER TABLE Student ALTER COLUMN Sage INT；")]),_._v(" "),t("p",[_._v("​     删除列属性：")]),_._v(" "),t("p",[_._v("ALTER TABLE Student Drop Scome；")]),_._v(" "),t("h3",{attrs:{id:"_3-2、索引的建立与删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、索引的建立与删除"}},[_._v("#")]),_._v(" 3.2、索引的建立与删除")]),_._v(" "),t("p",[_._v("假设你负责一本学生记录表(2万学生要近千页). 经常有人来要求按学生名查询某某学生信息。你如何查才能提高查询速度?我们知道一般在文档操作的时候就有建立学生名目录(按拼音排序)。同样，运用到数据库上，可以在一列或者多列上建立索引，根据索引去查询。相比较对整个表进行查询，索引查询只是选取了一列或者几列，查询的范围小，查询时数据占用的内存小。")]),_._v(" "),t("h3",{attrs:{id:"_3-2-1、建立索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1、建立索引"}},[_._v("#")]),_._v(" 3.2.1、建立索引")]),_._v(" "),t("p",[_._v("建立索引是加快查询速度的有效手段")]),_._v(" "),t("p",[_._v("语法：")]),_._v(" "),t("p",[_._v("CREATE  INDEX <索引名>")]),_._v(" "),t("p",[_._v("ON <表名>(<列名 [,<列名> ]…)；")]),_._v(" "),t("p",[_._v("示例：")]),_._v(" "),t("p",[_._v("为Student的sname列建立索引：")]),_._v(" "),t("p",[_._v("CREATE INDEX StuName ON Student(Sname)；")]),_._v(" "),t("h3",{attrs:{id:"_3-2-2、-删除索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2、-删除索引"}},[_._v("#")]),_._v(" 3.2.2、 删除索引")]),_._v(" "),t("p",[_._v("语法：")]),_._v(" "),t("p",[_._v("DROP INDEX <索引名>；")]),_._v(" "),t("p",[_._v("示例：删除Student表的Stusname索引。")]),_._v(" "),t("p",[_._v("DROP INDEX Stusname；")]),_._v(" "),t("h2",{attrs:{id:"_4、查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4、查询"}},[_._v("#")]),_._v(" 4、查询")]),_._v(" "),t("p",[_._v("数据库查询时数据库的核心操作。SQL提供了SELECT语句进行数据库的操作，其一般格式如下：")]),_._v(" "),t("p",[_._v("SELECT [ALL|DISTINCT] <目标列表达式>   [，<目标列表达式>] …")]),_._v(" "),t("p",[_._v("FROM <表或视图名>[，<表或视图名> ] …")]),_._v(" "),t("p",[_._v("[ WHERE <条件表达式> ]")]),_._v(" "),t("p",[_._v("[ GROUP BY <列名1>")]),_._v(" "),t("p",[_._v("[ HAVING <条件表达式> ] ]")]),_._v(" "),t("p",[_._v("[ ORDER BY <列名2> [ ASC|DESC ] ]；")]),_._v(" "),t("ul",[t("li",[_._v("SELECT子句：指定要显示的属性列")]),_._v(" "),t("li",[_._v("FROM子句：指定查询对象(基本表或视图)")]),_._v(" "),t("li",[_._v("WHERE子句：指定查询条件")]),_._v(" "),t("li",[_._v("GROUP BY子句：对查询结果按指定列的值分组，该属性列值相等的元组为一个组。通常会在每组中作用集函数。")]),_._v(" "),t("li",[_._v("HAVING短语：筛选出只有满足指定条件的组")]),_._v(" "),t("li",[_._v("ORDER BY子句：对查询结果表按指定列值的升序或降序排序")])]),_._v(" "),t("h3",{attrs:{id:"_4-1、单表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、单表查询"}},[_._v("#")]),_._v(" 4.1、单表查询")]),_._v(" "),t("p",[_._v("单表查询表示查询仅涉及一个表，是一种最简单的查询操作：")]),_._v(" "),t("p",[_._v("一、选择表中的若干列")]),_._v(" "),t("p",[_._v("二、选择表中的若干元组")]),_._v(" "),t("p",[_._v("三、对查询结果排序")]),_._v(" "),t("p",[_._v("四、使用集函数")]),_._v(" "),t("p",[_._v("五、对查询结果分组")]),_._v(" "),t("h3",{attrs:{id:"_4-1-1、查询指定列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1、查询指定列"}},[_._v("#")]),_._v(" 4.1.1、查询指定列")]),_._v(" "),t("p",[_._v("示例：查询全体学生的学号与姓名。")]),_._v(" "),t("p",[_._v("SELECT Sno，Sname FROM Student；")]),_._v(" "),t("p",[_._v("示例： 查询全体学生的姓名、学号、所在系。")]),_._v(" "),t("p",[_._v("SELECT Sname，Sno，Sdept FROM Student；")]),_._v(" "),t("h3",{attrs:{id:"_4-1-2、查询全部列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2、查询全部列"}},[_._v("#")]),_._v(" 4.1.2、查询全部列")]),_._v(" "),t("p",[_._v("示例：查询全体学生的详细记录。")]),_._v(" "),t("p",[_._v("SELECT Sno，Sname，Ssex，Sage，Sdept FROM Student；")]),_._v(" "),t("p",[_._v("或")]),_._v(" "),t("p",[_._v("SELECT * FROM Student；")]),_._v(" "),t("h3",{attrs:{id:"_4-1-3、-查询经过计算的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-3、-查询经过计算的值"}},[_._v("#")]),_._v(" 4.1.3、 查询经过计算的值")]),_._v(" "),t("p",[_._v("SELECT子句的<目标列表达式>不仅可以是表中的属性列，也可以是表达式。")]),_._v(" "),t("p",[_._v("示例：查全体学生的姓名及其出生年份。")]),_._v(" "),t("p",[_._v("SELECT Sname，2012-SageFROM Student；")]),_._v(" "),t("p",[_._v("示例：查询全体学生的姓名、出生年份和所有系，要求用小写字母表示所有系名。")]),_._v(" "),t("p",[_._v("SELECT Sname，'Year of Birth: '，2012 Sage， ISLOWER(Sdept)FROM Student；")]),_._v(" "),t("h3",{attrs:{id:"_4-1-4、使用列别名-可选-改变查询结果的列标题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-4、使用列别名-可选-改变查询结果的列标题"}},[_._v("#")]),_._v(" 4.1.4、使用列别名(可选)改变查询结果的列标题")]),_._v(" "),t("p",[_._v("示例：SELECT Sname NAME，'Year of Birth: ' BIRTH，2012-Sage BIRTHDAY，ISLOWER(Sdept)DEPARTMENT FROM Student；")]),_._v(" "),t("p",[_._v("输出结果：")]),_._v(" "),t("p",[_._v("NAME  BIRTH    BIRTHDAY  DEPARTMENT")]),_._v(" "),t("hr"),_._v(" "),t("p",[_._v("李勇  Year of Birth:  1986    cs")]),_._v(" "),t("p",[_._v("刘晨  Year of Birth:  1987    is")]),_._v(" "),t("p",[_._v("王名  Year of Birth:  1988    ma")]),_._v(" "),t("p",[_._v("张立  Year of Birth:  1987    is")]),_._v(" "),t("h3",{attrs:{id:"_4-1-5、-消除取值重复的行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-5、-消除取值重复的行"}},[_._v("#")]),_._v(" 4.1.5、 消除取值重复的行")]),_._v(" "),t("ul",[t("li",[_._v("ALL查询满足条件的元组")])]),_._v(" "),t("p",[_._v("SELECT ALL Sno FROM SC;")]),_._v(" "),t("p",[_._v("等价于")]),_._v(" "),t("p",[_._v("SELECT Sno FROM SC;")]),_._v(" "),t("p",[_._v("结果：Sno")]),_._v(" "),t("p",[_._v("​     -------")]),_._v(" "),t("p",[_._v("​     95001")]),_._v(" "),t("p",[_._v("​     95001")]),_._v(" "),t("p",[_._v("​     95001")]),_._v(" "),t("p",[_._v("​     95002")]),_._v(" "),t("p",[_._v("​     95002")]),_._v(" "),t("ul",[t("li",[_._v("DISTINCT消除取值重复的行")])]),_._v(" "),t("p",[_._v("SELECT DISTINCT Sno FROM SC;")]),_._v(" "),t("p",[_._v("结果： Sno")]),_._v(" "),t("p",[_._v("-------")]),_._v(" "),t("p",[_._v("95001")]),_._v(" "),t("p",[_._v("95002")]),_._v(" "),t("p",[_._v("注意 DISTINCT短语的作用范围是所有目标列")]),_._v(" "),t("p",[_._v("例：查询选修课程的各种成绩")]),_._v(" "),t("p",[_._v("错误的写法：")]),_._v(" "),t("p",[_._v("SELECT DISTINCT Cno，DISTINCT Grade FROM SC;")]),_._v(" "),t("p",[_._v("正确的写法")]),_._v(" "),t("p",[_._v("SELECT DISTINCT Cno，Grade FROM SC;")]),_._v(" "),t("h3",{attrs:{id:"_4-1-6、查询满足条件的元组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-6、查询满足条件的元组"}},[_._v("#")]),_._v(" 4.1.6、查询满足条件的元组")]),_._v(" "),t("p",[_._v("查询满足指定条件的元组可以通过WHERE字句实现。WHERE字句常用的查询条件如下：")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",[_._v("查询条件")]),_._v(" "),t("th",[_._v("谓词")])])]),_._v(" "),t("tbody",[t("tr",[t("td",[_._v("比较")]),_._v(" "),t("td",[_._v("=,>,<,>=,<=,!=,<>,!>,!<;NOT+上述比较运算符")])]),_._v(" "),t("tr",[t("td",[_._v("确定范围")]),_._v(" "),t("td",[_._v("BETWEEN AND,NOT BETWEEN AND")])]),_._v(" "),t("tr",[t("td",[_._v("确定集合")]),_._v(" "),t("td",[_._v("IN,NOT IN")])]),_._v(" "),t("tr",[t("td",[_._v("字符匹配")]),_._v(" "),t("td",[_._v("LIKE,NOT LIKE")])]),_._v(" "),t("tr",[t("td",[_._v("空值")]),_._v(" "),t("td",[_._v("IS NULL,IS NOT NULL")])]),_._v(" "),t("tr",[t("td",[_._v("多重条件（逻辑运算）")]),_._v(" "),t("td",[_._v("AND,OR,NOT")])])])]),_._v(" "),t("ul",[t("li",[_._v("比较大小")])]),_._v(" "),t("p",[_._v("在WHERE子句的<比较条件>中使用比较运算符=，>，<，>=，<=，!= 或 <>，!>，!<，逻辑运算符NOT + 比较运算符")]),_._v(" "),t("p",[_._v("示例： 查询所有年龄在20岁以下的学生姓名及其年龄。")]),_._v(" "),t("p",[_._v("SELECT  Sname，Sage")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE  Sage < 20；")]),_._v(" "),t("p",[_._v("或")]),_._v(" "),t("p",[_._v("SELECT  Sname，Sage")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("WHERE  NOT  Sage >= 20；")]),_._v(" "),t("ul",[t("li",[_._v("确定范围")])]),_._v(" "),t("p",[_._v("使用谓词  BETWEEN … AND …")]),_._v(" "),t("p",[_._v("​      NOT BETWEEN … AND …")]),_._v(" "),t("p",[_._v("示例：查询年龄在20~23岁（包括20岁和23岁）之间的学生的姓名、系别和年龄。")]),_._v(" "),t("p",[_._v("SELECT  Sname，Sdept，Sage")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("WHERE  Sage BETWEEN 20 AND 23；")]),_._v(" "),t("p",[_._v("示例：查询年龄不在20~23岁之间的学生姓名、系别和年龄。")]),_._v(" "),t("p",[_._v("SELECT  Sname，Sdept，Sage")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sage NOT BETWEEN 20 AND 23；")]),_._v(" "),t("ul",[t("li",[_._v("确定集合")])]),_._v(" "),t("p",[_._v("使用谓词IN (值表)、NOT IN (值表)。值表：用逗号分隔的一组取值")]),_._v(" "),t("p",[_._v("示例：")]),_._v(" "),t("p",[_._v("查询信息系（IS）、数学系（MA）和计算机科学系（CS）学生的姓名和性别。")]),_._v(" "),t("p",[_._v("SELECT Sname，Ssex")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sdept IN ( 'IS'，'MA'，'CS' );")]),_._v(" "),t("p",[_._v("查询既不是信息系、数学系，也不是计算机科学系的学生的姓名和性别。")]),_._v(" "),t("p",[_._v("SELECT Sname，Ssex")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("​     WHERE Sdept NOT IN ( 'IS'，'MA'，'CS' );")]),_._v(" "),t("ul",[t("li",[_._v("字符串匹配")])]),_._v(" "),t("p",[_._v("谓词like可以用来进行字符串的匹配。其一般语法格式如下：")]),_._v(" "),t("p",[_._v("[NOT] LIKE ‘<匹配串>’ [ESCAPE ‘ <换码字符>’]")]),_._v(" "),t("p",[_._v("其中<匹配串>用来指定匹配模板，可以是一个完整的字符串，也可以含有通配符%和_。其中：")]),_._v(" "),t("ul",[t("li",[t("ul",[t("li",[_._v("% (百分号)代表任意长度（长度可以为0）的字符串。例：a%b表示以a开头，以b结尾的任意长度的字符串。如acb，addgb，ab 等都满足该匹配串")]),_._v(" "),t("li",[_._v("_ (下横线)代表任意单个字符。例：a_b表示以a开头，以b结尾的长度为3的任意字符串。如acb，afb等都满足该匹配串")])])])]),_._v(" "),t("p",[_._v("​    a  匹配模板为固定字符串")]),_._v(" "),t("p",[_._v("示例：查询学号为95001的学生的详细情况。")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sno LIKE '95001'；")]),_._v(" "),t("p",[_._v("等价于")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE  Sno = '95001'；")]),_._v(" "),t("p",[_._v("​    b  匹配模板为含通配符的字符串")]),_._v(" "),t("p",[_._v("示例： 查询所有姓刘学生的姓名、学号和性别。")]),_._v(" "),t("p",[_._v("SELECT Sname，Sno，Ssex")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sname LIKE ‘刘%’；")]),_._v(" "),t("p",[_._v('示例： 查询姓"欧阳"且全名为三个汉字的学生的姓名。')]),_._v(" "),t("p",[_._v("SELECT  Sname")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("WHERE Sname LIKE '欧阳__'；")]),_._v(" "),t("p",[_._v('示例： 查询名字中第2个字为"阳"字的学生的姓名和学号。')]),_._v(" "),t("p",[_._v("SELECT Sname，Sno")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sname LIKE '__阳%'；")]),_._v(" "),t("p",[_._v("示例： 查询所有不姓刘的学生姓名。")]),_._v(" "),t("p",[_._v("SELECT Sname，Sno，Ssex")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sname NOT LIKE '刘%'；")]),_._v(" "),t("p",[_._v("ESCAPE 短语：当用户要查询的字符串本身就含有 % 或 _ 时，要使用ESCAPE '<换码字符>' 短语对通配符进行转义。")]),_._v(" "),t("p",[_._v("使用换码字符将通配符转义为普通字符")]),_._v(" "),t("p",[_._v("示例：查询DB_Design课程的课程号和学分。")]),_._v(" "),t("p",[_._v("SELECT Cno，Ccredit")]),_._v(" "),t("p",[_._v("FROM Course")]),_._v(" "),t("p",[_._v("WHERE Cname LIKE 'DB_Design' ESCAPE ''")]),_._v(" "),t("p",[_._v('示例：查询以"DB_"开头，且倒数第3个字符为 i的课程的详细情况。')]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM  Course")]),_._v(" "),t("p",[_._v("WHERE Cname LIKE 'DB_%i_ _' ESCAPE ' \\ '；")]),_._v(" "),t("ul",[t("li",[_._v("涉及空值的查询")])]),_._v(" "),t("p",[_._v("使用谓词 IS NULL 或 IS NOT NULL。“IS NULL” 不能用 “= NULL” 代替。")]),_._v(" "),t("p",[_._v("示例：某些学生选修课程后没有参加考试，所以有选课记录，但没有考试成绩。查询缺少成绩的学生的学号和相应的课程号。")]),_._v(" "),t("p",[_._v("SELECT Sno，Cno")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Grade IS NULL；")]),_._v(" "),t("p",[_._v("示例：查所有有成绩的学生学号和课程号。")]),_._v(" "),t("p",[_._v("SELECT Sno，Cno")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Grade IS NOT NULL；")]),_._v(" "),t("ul",[t("li",[_._v("多重条件查询")])]),_._v(" "),t("p",[_._v("用逻辑运算符AND和 OR来联结多个查询条件。AND的优先级高于OR，可以用括号改变优先级。")]),_._v(" "),t("p",[_._v("可用来实现多种其他谓词[NOT] IN和 [NOT] BETWEEN …  AND …")]),_._v(" "),t("p",[_._v("示例：查询计算机系年龄在20岁以下的学生姓名。")]),_._v(" "),t("p",[_._v("SELECT Sname")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sdept= 'CS' AND Sage<20；")]),_._v(" "),t("p",[_._v("示例：查询信息系（IS）、数学系（MA）和计算机科学系（CS）学生的姓名和性别。")]),_._v(" "),t("p",[_._v("SELECT Sname，Ssex")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sdept IN ( 'IS'，'MA'，'CS' )")]),_._v(" "),t("p",[_._v("等价于：")]),_._v(" "),t("p",[_._v("SELECT Sname，Ssex")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("WHERE Sdept= ' IS ' OR Sdept= ' MA' OR Sdept= ' CS")]),_._v(" "),t("p",[_._v("示例：查询年龄在20~23岁（包括20岁和23岁）之间的学生的姓名、系别和年龄。\nSELECT Sname，Sdept，Sage")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sage BETWEEN 20 AND 23；")]),_._v(" "),t("p",[_._v("等价于：")]),_._v(" "),t("p",[_._v("SELECT Sname，Sdept，Sage")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sage>=20 AND Sage<=23；")]),_._v(" "),t("h3",{attrs:{id:"_4-1-7、对查询结果排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-7、对查询结果排序"}},[_._v("#")]),_._v(" 4.1.7、对查询结果排序")]),_._v(" "),t("p",[_._v("排序使用ORDER BY子句，可以按一个或多个属性列排序，升序关键字是ASC，降序关键字是DESC，缺省值为升序。当排序列含空值时，ASC：排序列为空值的元组最后显示；DESC：排序列为空值的元组最先显示 。")]),_._v(" "),t("p",[_._v("示例：查询选修了3号课程的学生的学号及其成绩，查询结果按分数降序排列。")]),_._v(" "),t("p",[_._v("SELECT Sno，Grade")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Cno= ' 3 '")]),_._v(" "),t("p",[_._v("ORDER BY Grade DESC；")]),_._v(" "),t("p",[_._v("示例：查询全体学生情况，查询结果按所在系的系号升序排列，同一系中的学生按年龄降序排列。")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("ORDER BY Sdept，Sage DESC；")]),_._v(" "),t("h3",{attrs:{id:"_4-1-8、-使用集函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-8、-使用集函数"}},[_._v("#")]),_._v(" 4.1.8、 使用集函数")]),_._v(" "),t("p",[_._v("1行计数")]),_._v(" "),t("p",[_._v("（1）COUNT（[DISTINCT|ALL] *）：对每行计数；DISTINCT短语表示在计算时要取消指定列中的重复值；ALL短语表示不取消重复值，ALL为缺省值")]),_._v(" "),t("p",[_._v("（2）COUNT（[DISTINCT|ALL] <列名>）：对<列名>非空的行计数")]),_._v(" "),t("p",[_._v("示例： 查询学生总人数。")]),_._v(" "),t("p",[_._v("SELECT COUNT(*)")]),_._v(" "),t("p",[_._v("FROM Student；")]),_._v(" "),t("p",[_._v("示例： 查询选修了课程的学生人数。")]),_._v(" "),t("p",[_._v("SELECT COUNT(DISTINCT Sno)")]),_._v(" "),t("p",[_._v("FROM SC；")]),_._v(" "),t("p",[_._v("注：对Sno非空的行，排除重复Sno计数。以避免重复计算学生人数")]),_._v(" "),t("p",[_._v("有什么区别？")]),_._v(" "),t("p",[_._v("SELECT COUNT(*)FROM SC；")]),_._v(" "),t("p",[_._v("SELECT COUNT(Grade)FROM SC；")]),_._v(" "),t("p",[_._v("有什么区别？")]),_._v(" "),t("p",[_._v("SELECT COUNT(SNO)FROM SC；")]),_._v(" "),t("p",[_._v("SELECT COUNT(DISTINCT SNO)FROM SC；")]),_._v(" "),t("p",[_._v("2.计算总和(对非空列)")]),_._v(" "),t("p",[_._v("SUM（[DISTINCT|ALL] <列名>）")]),_._v(" "),t("p",[_._v("3.计算平均值(对非空列)")]),_._v(" "),t("p",[_._v("AVG（[DISTINCT|ALL] <列名>）")]),_._v(" "),t("p",[_._v("示例：计算1号课程的学生平均成绩。")]),_._v(" "),t("p",[_._v("SELECT AVG(Grade)")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Cno= ' 1 '；")]),_._v(" "),t("p",[_._v("4.求最大值(对非空列)")]),_._v(" "),t("p",[_._v("MAX（[DISTINCT|ALL] <列名>）")]),_._v(" "),t("p",[_._v("示例：查询选修1号课程的学生最高分数。")]),_._v(" "),t("p",[_._v("SELECT MAX(Grade)")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHER Cno= ' 1 '；")]),_._v(" "),t("p",[_._v("5.求最小值(对非空列)")]),_._v(" "),t("p",[_._v("MIN（[DISTINCT|ALL] <列名>）")]),_._v(" "),t("h3",{attrs:{id:"_4-1-9、对查询结果分组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-9、对查询结果分组"}},[_._v("#")]),_._v(" 4.1.9、对查询结果分组")]),_._v(" "),t("p",[_._v("使用GROUP BY子句分组，用来细化集函数的作用对象")]),_._v(" "),t("ul",[t("li",[_._v("未对查询结果分组，集函数将作用于整个查询结果")]),_._v(" "),t("li",[_._v("对查询结果分组后，集函数将分别作用于每个组")])]),_._v(" "),t("p",[_._v("示例：求各个课程号及相应的选课人数。")]),_._v(" "),t("p",[_._v("SELECT Cno，COUNT(Sno)")]),_._v(" "),t("p",[_._v("FROM  SC")]),_._v(" "),t("p",[_._v("GROUP BY Cno；")]),_._v(" "),t("p",[_._v("易犯错误:")]),_._v(" "),t("p",[_._v("SELECT Sno, Cno, COUNT(Sno)")]),_._v(" "),t("p",[_._v("FROM  SC")]),_._v(" "),t("p",[_._v("GROUP BY Cno；")]),_._v(" "),t("p",[_._v("注意：使用GROUP BY子句后，SELECT子句的列名列表中只能出现分组属性和集函数")]),_._v(" "),t("p",[_._v("用多个列分组")]),_._v(" "),t("p",[_._v("示例：查询每个系男女生人数。")]),_._v(" "),t("p",[_._v("SELECT Sdept, Ssex, COUNT(*)")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("GROUP BY Sdept, Ssex；")]),_._v(" "),t("p",[_._v("使用HAVING短语筛选最终输出结果（having都是跟随group by对分组信息进行筛选）：")]),_._v(" "),t("p",[_._v("示例：查询选修了3门以上课程的学生学号。")]),_._v(" "),t("p",[_._v("SELECT Sno")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("GROUP BY Sno")]),_._v(" "),t("p",[_._v("​       HAVING COUNT(*)>=3；")]),_._v(" "),t("p",[_._v("示例：查询有3门以上课程是90分以上的学生的学号及（90分以上的）课程数")]),_._v(" "),t("p",[_._v("​    SELECT Sno, COUNT(*)")]),_._v(" "),t("p",[_._v("​    FROM  SC")]),_._v(" "),t("p",[_._v("​    WHERE Grade>=90")]),_._v(" "),t("p",[_._v("​    GROUP BY Sno")]),_._v(" "),t("p",[_._v("​    HAVING COUNT(*)>=3;")]),_._v(" "),t("p",[_._v("只有满足HAVING短语指定条件的组才输出，HAVING短语与WHERE子句的区别：作用对象不同：WHERE子句作用于基表或视图，从中选择满足条件的元组；HAVING短语作用于组，从中选择满足条件的组。")]),_._v(" "),t("h3",{attrs:{id:"_4-2、连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、连接查询"}},[_._v("#")]),_._v(" 4.2、连接查询")]),_._v(" "),t("p",[_._v("前面的查询都是针对一个表进行的。若一个查询同时涉及两个以上的表，则称之为连接查询。连接查询是关系数据库中最主要的查询，包括等值连接查询、自然连接查询、非等值连接查询、自身连接查询、外连接查询和复合条件连接查询等。")]),_._v(" "),t("p",[_._v("连接查询的WHERE字句中用来连接两个表的条件称为连接条件或连接谓词，其一般格式为：")]),_._v(" "),t("p",[_._v("[<表名1>.] <列名1> <比较运算符> [<表名2>.] <列名2>")]),_._v(" "),t("p",[_._v("其中比较运算符主要有：=、>、<、>=、<=、!=(或<>)等。")]),_._v(" "),t("p",[_._v("此外连接谓词还可以使用下面形式：")]),_._v(" "),t("p",[_._v("[<表名1>.] <列名1> between [<表名2>.] <列名2> and [<表名2>.] <列名3>")]),_._v(" "),t("h3",{attrs:{id:"_4-2-1、等值与非等值连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1、等值与非等值连接查询"}},[_._v("#")]),_._v(" 4.2.1、等值与非等值连接查询")]),_._v(" "),t("p",[_._v("当连接运算符为=时，称为等值连接。使用其他运算符称为非等值连接。")]),_._v(" "),t("p",[_._v("连接谓词中的列名称为连接字段。连接条件中的各连接字段类型必须是可比的，但名字不必相同。")]),_._v(" "),t("ul",[t("li",[_._v("等值连接")])]),_._v(" "),t("p",[_._v("等值连接的运算符是=。")]),_._v(" "),t("p",[_._v("示例：查询每个学生及其选修课程的情况。")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student，SC")]),_._v(" "),t("p",[_._v("WHERE Student.Sno = SC.Sno；")]),_._v(" "),t("p",[_._v("查询结果：")]),_._v(" "),t("p",[_._v("Student.Sno  Sname  Ssex Sage   Sdept  SC.Sno   Cno  Grade")]),_._v(" "),t("p",[_._v("95001   李勇 男  20   CS       95001    1   92")]),_._v(" "),t("p",[_._v("95001   李勇 男  20      CS         95001    2   85")]),_._v(" "),t("p",[_._v("95001   李勇 男  20      CS         95001    3   88")]),_._v(" "),t("p",[_._v("95002   刘晨 女  19      IS       95002    2   90")]),_._v(" "),t("p",[_._v("95002   刘晨 女  19      IS     95002    3   80")]),_._v(" "),t("p",[_._v("注：引用两表中同名属性时，必须加表名前缀区分。引用唯一属性名时可以加也可以省略表名前缀。")]),_._v(" "),t("p",[_._v("​     若在等值连接中把目标列中重复的属性列去掉则为自然连接。")]),_._v(" "),t("ul",[t("li",[_._v("非等值连接")])]),_._v(" "),t("p",[_._v("不是 = 的连接操作就是非等值连接。")]),_._v(" "),t("p",[_._v("示例：查询选课信息,并显示成绩级别")]),_._v(" "),t("p",[t("img",{staticClass:"zoom-custom-imgs",attrs:{src:_.$withBase("/assets/img/db/intro/dbtheory-3.png"),alt:"wxmp"}}),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:_.$withBase("/assets/img/db/intro/dbtheory-4.png"),alt:"wxmp"}})]),_._v(" "),t("p",[_._v("SELECT Sno,Cno,Grade,Stage")]),_._v(" "),t("p",[_._v("FROM  Sc, Gstage")]),_._v(" "),t("p",[_._v("WHERE Grade BETWEEN Low AND High;")]),_._v(" "),t("h3",{attrs:{id:"_4-2-2、-自身连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2、-自身连接"}},[_._v("#")]),_._v(" 4.2.2、 自身连接")]),_._v(" "),t("p",[_._v("一个表与其自己进行连接，称为表的自身连接。")]),_._v(" "),t("p",[_._v("示例：查询每一门课的先行课名")]),_._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:_.$withBase("/assets/img/db/intro/dbtheory-5.png"),alt:"wxmp"}}),_._v(" "),t("p",[_._v("SELECT First.Cname 课名, Second.Cname 先行课名")]),_._v(" "),t("p",[_._v("FROM Course First，course Second")]),_._v(" "),t("p",[_._v("WHERE First.Cpno = Second.Cno；")]),_._v(" "),t("p",[_._v("输出：")]),_._v(" "),t("p",[_._v("​     课名         先行课名")]),_._v(" "),t("p",[_._v("​     数据库       数据结构")]),_._v(" "),t("p",[_._v("​     信息系统     数据库")]),_._v(" "),t("p",[_._v("注：需要给表起别名以示区别如示例中的First和Second；由于所有属性名都是同名属性，因此必须使用别名前缀，如示例中的First.Cname和Second.Cname。")]),_._v(" "),t("h3",{attrs:{id:"_4-2-3、外连接-outer-join"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3、外连接-outer-join"}},[_._v("#")]),_._v(" 4.2.3、外连接（Outer Join）")]),_._v(" "),t("p",[_._v("普通连接操作只输出满足连接条件的元组。有时想保留不满足条件的元组，比如说以Student表为主体列出每个学生的基本情况及其选课情况，若某个学生没有选课，但是依旧想保留该学生的信息，这时需要使用到的就是外连接。实现方式就是以Student表为主体，对每一个学生如果没有选课信息则选课表的属性上填空值（Null）。")]),_._v(" "),t("p",[_._v("示例：查询每个学生及其选修课程的情况(包括没有选修课程的学生)")]),_._v(" "),t("p",[_._v("SELECT Student.Sno，Sname，Ssex，Sage，Sdept，Cno，Grade")]),_._v(" "),t("p",[_._v("FROM   Student，SC")]),_._v(" "),t("p",[_._v("WHERE Student.Sno *= SC.Sno；")]),_._v(" "),t("p",[_._v("或")]),_._v(" "),t("p",[_._v("SELECT Student.Sno，Sname，Ssex，Sage，Sdept，Cno，Grade")]),_._v(" "),t("p",[_._v("FROM Student  LEFT OUTER JOIN SC ON Student.Sno = SC.Sno；")]),_._v(" "),t("p",[_._v("查询结果：")]),_._v(" "),t("p",[_._v("Student.Sno Sname Ssex  Sage   Sdept  Cno  Grade")]),_._v(" "),t("p",[_._v("95001   李勇  男   20    CS   1    92")]),_._v(" "),t("p",[_._v("95001   李勇  男   20    CS   2   85")]),_._v(" "),t("p",[_._v("95001   李勇  男   20    CS   3   88")]),_._v(" "),t("p",[_._v("95002   刘晨  女   19    IS   2   90")]),_._v(" "),t("p",[_._v("95002   刘晨  女   19    IS   3   80")]),_._v(" "),t("p",[_._v("95003   王敏  女   18    MA  null  null")]),_._v(" "),t("p",[_._v("95004   张立  男   19    IS   null  null")]),_._v(" "),t("p",[_._v("外连接类型：")]),_._v(" "),t("ul",[t("li",[_._v("左外连接")])]),_._v(" "),t("p",[_._v("将左边关系的不满足连接条件的行输出")]),_._v(" "),t("p",[_._v("WHERE 子句方式(*出现在左边)：")]),_._v(" "),t("p",[_._v("WHERE R.A1 *= S.A1")]),_._v(" "),t("p",[_._v("FROM子句方式：")]),_._v(" "),t("p",[_._v("FROM R LEFT [OUTER] JOIN S ON R.A1=S.A1")]),_._v(" "),t("ul",[t("li",[_._v("右外连接")])]),_._v(" "),t("p",[_._v("将右边关系的不满足连接条件的行输出")]),_._v(" "),t("p",[_._v("WHERE 子句方式(*出现在右边)：")]),_._v(" "),t("p",[_._v("WHERE R.A1 =* S.A1")]),_._v(" "),t("p",[_._v("FROM子句方式：")]),_._v(" "),t("p",[_._v("FROM R RIGHT [OUTER] JOIN S ON R.A1=S.A1")]),_._v(" "),t("ul",[t("li",[_._v("全外连接")])]),_._v(" "),t("p",[_._v("将两边关系的不满足连接条件的行输出")]),_._v(" "),t("p",[_._v("WHERE 子句方式(*出现在两边)：")]),_._v(" "),t("p",[_._v("WHERE R.A1 "),t("em",[_._v("=")]),_._v(" S.A1")]),_._v(" "),t("p",[_._v("FROM子句方式：")]),_._v(" "),t("p",[_._v("FROM R FULL [OUTER] JOIN S ON R.A1=S.A1")]),_._v(" "),t("ol",[t("li",[_._v("复合条件连接")])]),_._v(" "),t("p",[_._v("​     上面各个连接查询中，WHERE字句中只有一个查询条件。WHERE字句中可以有多个连接条件，称为复合条件连接。")]),_._v(" "),t("p",[_._v("示例：查询选修2号课程且成绩在90分以上的所有学生")]),_._v(" "),t("p",[_._v("Select Student.sno, sname")]),_._v(" "),t("p",[_._v("From student, sc")]),_._v(" "),t("p",[_._v("Where student.sno = sc.sno")]),_._v(" "),t("p",[_._v("And sc.cno = ‘2’")]),_._v(" "),t("p",[_._v("And sc.grade > 90;")]),_._v(" "),t("h3",{attrs:{id:"_4-3、嵌套查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、嵌套查询"}},[_._v("#")]),_._v(" 4.3、嵌套查询")]),_._v(" "),t("h3",{attrs:{id:"_4-3-1、嵌套查询概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1、嵌套查询概述"}},[_._v("#")]),_._v(" 4.3.1、嵌套查询概述")]),_._v(" "),t("p",[_._v("一个SELECT-FROM-WHERE语句称为一个查询块。将一个查询块嵌套在另一个查询块的WHERE子句或HAVING短语的条件中的查询称为嵌套查询。")]),_._v(" "),t("p",[_._v("示例：嵌套查询")]),_._v(" "),t("p",[_._v("SELECT Sname     /"),t("em",[_._v("外层查询或父查询")]),_._v("/")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sno IN")]),_._v(" "),t("p",[_._v("（SELECT Sno   /"),t("em",[_._v("内层查询/子查询")]),_._v("/")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Cno= ' 2 '）；")]),_._v(" "),t("p",[_._v("注：子查询中不能使用Order by。")]),_._v(" "),t("h3",{attrs:{id:"_4-3-2、嵌套查询分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2、嵌套查询分类"}},[_._v("#")]),_._v(" 4.3.2、嵌套查询分类")]),_._v(" "),t("ul",[t("li",[t("p",[_._v("不相关子查询：子查询的查询条件不依赖于父查询")])]),_._v(" "),t("li",[t("p",[_._v("相关子查询：子查询的查询条件依赖于父查询")])])]),_._v(" "),t("h3",{attrs:{id:"_4-3-3、引出子查询的谓词"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3、引出子查询的谓词"}},[_._v("#")]),_._v(" 4.3.3、引出子查询的谓词")]),_._v(" "),t("ul",[t("li",[_._v("带有IN谓词的子查询")])]),_._v(" "),t("p",[_._v("在嵌套查询中，子查询的结果往往是一个集合，所以谓词IN是嵌套查询中最经常使用的谓词。")]),_._v(" "),t("p",[_._v("示例：查询与“刘晨”在同一个系学习的学生。")]),_._v(" "),t("p",[_._v("此查询要求可以分步来完成")]),_._v(" "),t("p",[_._v("① 确定“刘晨”所在系名")]),_._v(" "),t("p",[_._v("SELECT Sdept")]),_._v(" "),t("p",[_._v("FROM   Student")]),_._v(" "),t("p",[_._v("WHERE Sname= ' 刘晨 '；")]),_._v(" "),t("p",[_._v("结果为：")]),_._v(" "),t("p",[_._v("​     Sdept")]),_._v(" "),t("p",[_._v("​     IS")]),_._v(" "),t("p",[_._v("② 查找所有在IS系学习的学生。")]),_._v(" "),t("p",[_._v("​    SELECT  Sno，Sname，Sdept")]),_._v(" "),t("p",[_._v("​    FROM   Student")]),_._v(" "),t("p",[_._v("​    WHERE Sdept= ' IS '；")]),_._v(" "),t("p",[_._v("结果为：")]),_._v(" "),t("p",[_._v("Sno     Sname  Sdept")]),_._v(" "),t("p",[_._v("95001     刘晨    IS")]),_._v(" "),t("p",[_._v("95004     张立    IS")]),_._v(" "),t("p",[_._v("③ 将第一步查询嵌入到第二步查询的条件中")]),_._v(" "),t("p",[_._v("SELECT Sno，Sname，Sdept")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sdept IN")]),_._v(" "),t("p",[_._v("​     (SELECT Sdept")]),_._v(" "),t("p",[_._v("​      FROM Student")]),_._v(" "),t("p",[_._v("​      WHERE Sname= ‘ 刘晨 ’)；")]),_._v(" "),t("p",[_._v("注：本例中，子查询的查询条件不依赖于父查询，所以此查询为不相关子查询。")]),_._v(" "),t("p",[_._v("本例中的查询也可以用自身连接来完成：")]),_._v(" "),t("p",[_._v("SELECT S1.Sno，S1.Sname，S1.Sdept")]),_._v(" "),t("p",[_._v("FROM Student S1，Student S2")]),_._v(" "),t("p",[_._v("WHERE S1.Sdept = S2.Sdept")]),_._v(" "),t("p",[_._v("AND  S2.Sname = '刘晨'；")]),_._v(" "),t("p",[_._v("示例：查询选修了课程名为“信息系统”的学生学号和姓名")]),_._v(" "),t("p",[_._v("SELECT Sno，Sname      ③ 最后在Student关系中")]),_._v(" "),t("p",[_._v("FROM  Student         取出Sno和Sname")]),_._v(" "),t("p",[_._v("WHERE Sno IN")]),_._v(" "),t("p",[_._v("​    (SELECT Sno      ② 然后在SC关系中找出选")]),_._v(" "),t("p",[_._v("​     FROM  SC        修了3号课程的学生学号")]),_._v(" "),t("p",[_._v("​     WHERE Cno IN")]),_._v(" "),t("p",[_._v("​       (SELECT Cno   ① 首先在Course关系中找出“信")]),_._v(" "),t("p",[_._v("​       FROM Course   息系统”的课程号，结果为3号")]),_._v(" "),t("p",[_._v("​        WHERE Cname= ‘信息系统’));")]),_._v(" "),t("p",[_._v("或")]),_._v(" "),t("p",[_._v("SELECT Student.Sno，Sname")]),_._v(" "),t("p",[_._v("FROM Student，SC，Course")]),_._v(" "),t("p",[_._v("WHERE Student.Sno = SC.Sno AND")]),_._v(" "),t("p",[_._v("​      SC.Cno = Course.Cno AND")]),_._v(" "),t("p",[_._v("​      Course.Cname=‘信息系统’；")]),_._v(" "),t("ul",[t("li",[_._v("带有比较运算符的子查询")])]),_._v(" "),t("p",[_._v("指父查询与子查询之间用比较运算符进行连接，当能确切知道内层查询返回单值时，可用比较运算符（=，>，<，>=，<=，!=或< >）。")]),_._v(" "),t("p",[_._v("示例：假设只有一个学生刘晨,则对上例可以用 = 代替IN ：")]),_._v(" "),t("p",[_._v("SELECT Sno，Sname，Sdept")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("WHERE Sdept  =")]),_._v(" "),t("p",[_._v("​      (SELECT Sdept")]),_._v(" "),t("p",[_._v("​      FROM  Student")]),_._v(" "),t("p",[_._v("​      WHERE Sname= ‘刘晨’)；")]),_._v(" "),t("p",[_._v("示例：查询比刘晨年龄大的学生号,姓名 ：")]),_._v(" "),t("p",[_._v("SELECT Sno，Sname")]),_._v(" "),t("p",[_._v("FROM  Student")]),_._v(" "),t("p",[_._v("WHERE Sage >")]),_._v(" "),t("p",[_._v("​      (SELECT Sage")]),_._v(" "),t("p",[_._v("​      FROM  Student")]),_._v(" "),t("p",[_._v("​      WHERE Sname= ‘刘晨’)；")]),_._v(" "),t("ul",[t("li",[_._v("在HAVING中使用子查询")])]),_._v(" "),t("p",[_._v("示例： 查询平均分大于95002这个学生的平均分的学号")]),_._v(" "),t("p",[_._v("SELECT SNO FROM SC")]),_._v(" "),t("p",[_._v("GROUP BY SNO")]),_._v(" "),t("p",[_._v("HAVING AVG(GRADE)>")]),_._v(" "),t("p",[_._v("(SELECT AVG(GRADE)")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE SNO=95002")]),_._v(" "),t("p",[_._v(")")]),_._v(" "),t("ul",[t("li",[_._v("带有EXISTS谓词的子查询")])]),_._v(" "),t("p",[_._v("EXISTS谓词相当于存在量词$。带有EXISTS谓词的子查询不返回任何数据，只产生逻辑真值“TRUE”或逻辑假值“false”：")]),_._v(" "),t("ul",[t("li",[t("ul",[t("li",[_._v("若内层查询结果非空，则返回真值")]),_._v(" "),t("li",[_._v("若内层查询结果为空，则返回假值")])])])]),_._v(" "),t("p",[_._v("由EXISTS引出的子查询，其目标列表达式通常都用* ，因为带EXISTS的子查询只返回真值或假值，给出列名无实际意义。由EXISTS引出的子查询一般都是相关子查询。所有其他谓词的子查询都能用带EXISTS谓词的子查询等价替换；一些带EXISTS或NOT EXISTS谓词的子查询不能被其他形式的子查询等价替换。")]),_._v(" "),t("p",[_._v("示例：查询所有选修了1号课程的学生姓名")]),_._v(" "),t("ul",[t("li",[_._v("用IN子查询实现：")])]),_._v(" "),t("p",[_._v("SELECT Sname")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sno IN (Select Sno")]),_._v(" "),t("p",[_._v("​              FROM sc")]),_._v(" "),t("p",[_._v("​             WHERE Cno= ‘1’);")]),_._v(" "),t("ul",[t("li",[_._v("用连接运算实现：")])]),_._v(" "),t("p",[_._v("SELECT distinct Sname")]),_._v(" "),t("p",[_._v("FROM Student, SC")]),_._v(" "),t("p",[_._v("WHERE Student.Sno=SC.Sno")]),_._v(" "),t("p",[_._v("AND SC.Cno= '1';")]),_._v(" "),t("ul",[t("li",[_._v("用EXISTS语句实现：")])]),_._v(" "),t("p",[_._v("SELECT Sname FROM Student")]),_._v(" "),t("p",[_._v("WHERE EXISTS")]),_._v(" "),t("p",[_._v("(SELECT *")]),_._v(" "),t("p",[_._v("FROM SC     /"),t("em",[_._v("相关子查询")]),_._v("/")]),_._v(" "),t("p",[_._v("WHERE Sno=Student.Sno AND Cno= '1')；")]),_._v(" "),t("h3",{attrs:{id:"_4-4、集合查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、集合查询"}},[_._v("#")]),_._v(" 4.4、集合查询")]),_._v(" "),t("p",[_._v("Select语句的查询结果是元组的集合，所以多个select语句的结果可进行集合操作。集合操作主要包括并操作（union）、交操作（intersect）和差操作（except）。注意：参加集合操作的各查询结果的列数必须相同；对应项的数据类型也必须相同。")]),_._v(" "),t("h3",{attrs:{id:"_4-4-1、并操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1、并操作"}},[_._v("#")]),_._v(" 4.4.1、并操作")]),_._v(" "),t("p",[_._v("形式")]),_._v(" "),t("p",[_._v("​     <查询块>")]),_._v(" "),t("p",[_._v("​      UNION")]),_._v(" "),t("p",[_._v("​     <查询块>")]),_._v(" "),t("p",[_._v("示例：查询计算机科学系的学生与年龄不大于19岁的学生的并集。")]),_._v(" "),t("p",[_._v("方法一：并操作会自动去除相同记录，而union all则不会")]),_._v(" "),t("p",[_._v("​    SELECT *")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sdept= 'CS'")]),_._v(" "),t("p",[_._v("​    UNION")]),_._v(" "),t("p",[_._v("​    SELECT *")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sage<=19；")]),_._v(" "),t("p",[_._v("方法二：")]),_._v(" "),t("p",[_._v("​    SELECT  DISTINCT *")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sdept= 'CS' OR Sage<=19；")]),_._v(" "),t("h3",{attrs:{id:"_4-4-2、交操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2、交操作"}},[_._v("#")]),_._v(" 4.4.2、交操作")]),_._v(" "),t("p",[_._v("示例：查询计算机科学系的学生与年龄不大于19岁的学生的交集")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sdept='CS'")]),_._v(" "),t("p",[_._v("INTERSECT")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sage<=19")]),_._v(" "),t("p",[_._v("实际上就是查询计算机科学系中年龄不大于19岁的学生：")]),_._v(" "),t("p",[_._v("​          SELECT *")]),_._v(" "),t("p",[_._v("​         FROM Student")]),_._v(" "),t("p",[_._v("​         WHERE Sdept= 'CS' AND Sage<=19；")]),_._v(" "),t("h3",{attrs:{id:"_4-4-3、-差操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-3、-差操作"}},[_._v("#")]),_._v(" 4.4.3、 差操作")]),_._v(" "),t("p",[_._v("示例1：查询计算机科学系的学生与年龄不大于19岁的学生的差集。")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sdept='CS'")]),_._v(" "),t("p",[_._v("MINUS")]),_._v(" "),t("p",[_._v("SELECT *")]),_._v(" "),t("p",[_._v("FROM Student")]),_._v(" "),t("p",[_._v("WHERE Sage <=19;")]),_._v(" "),t("p",[_._v("实际上是查询计算机科学系中年龄大于19岁的学生：")]),_._v(" "),t("p",[_._v("​    SELECT *")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sdept= 'CS' AND Sage>19；")]),_._v(" "),t("p",[_._v("示例2：查询未选课的学号(所有学号与选过课的学号的差集)")]),_._v(" "),t("p",[_._v("​    SELECT Sno")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    EXCEPT")]),_._v(" "),t("p",[_._v("​    SELECT Sno")]),_._v(" "),t("p",[_._v("​    FROM SC;")]),_._v(" "),t("p",[_._v("NOT IN实现:")]),_._v(" "),t("p",[_._v("​    SELECT Sno")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sno NOT IN")]),_._v(" "),t("p",[_._v("​          (SELECT Sno")]),_._v(" "),t("p",[_._v("​            FROM SC);")]),_._v(" "),t("p",[_._v("NOT EXISTS实现:")]),_._v(" "),t("p",[_._v("SELECT Sno")]),_._v(" "),t("p",[_._v("FROM Student S")]),_._v(" "),t("p",[_._v("WHERE NOT EXISTS")]),_._v(" "),t("p",[_._v("​        (SELECT *")]),_._v(" "),t("p",[_._v("​         FROM SC WHERE SC.SNO=S.SNO);")]),_._v(" "),t("p",[_._v("实际应用中交操作和差操作应用较少，并操作使用较多。")]),_._v(" "),t("h3",{attrs:{id:"_4-5、select语句的一般格式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5、select语句的一般格式"}},[_._v("#")]),_._v(" 4.5、SELECT语句的一般格式")]),_._v(" "),t("p",[_._v("SELECT [ALL|DISTINCT] <目标列表达式> [别名] [ ，<目标列表达式> [别名]] …")]),_._v(" "),t("p",[_._v("FROM <表名或视图名> [别名] [，<表名或视图名> [别名]] …")]),_._v(" "),t("p",[_._v("[WHERE <条件表达式>]")]),_._v(" "),t("p",[_._v("[GROUP BY <列名1>[，<列名1’>] ...[HAVING <条件表达式>] ]")]),_._v(" "),t("p",[_._v("[ORDER BY <列名2> [ASC|DESC] [，<列名2’> [ASC|DESC] ] … ]；")]),_._v(" "),t("h2",{attrs:{id:"_5、数据更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5、数据更新"}},[_._v("#")]),_._v(" 5、数据更新")]),_._v(" "),t("p",[_._v("数据更新操作有3种：向表中添加若干行数据、修改表中的数据和删除表中的若干行数据。在SQL中有相应的三类语句。")]),_._v(" "),t("h3",{attrs:{id:"_5-1、插入数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、插入数据"}},[_._v("#")]),_._v(" 5.1、插入数据")]),_._v(" "),t("p",[_._v("SQL的数据插入语句INSERT通常有两种形式。一种是插入一个元组，另一种是插入子查询结果。后者可以一次插入多个元组。")]),_._v(" "),t("h3",{attrs:{id:"_5-1-1、插入单个元组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1、插入单个元组"}},[_._v("#")]),_._v(" 5.1.1、插入单个元组")]),_._v(" "),t("p",[_._v("语句格式：")]),_._v(" "),t("p",[_._v("INSERT")]),_._v(" "),t("p",[_._v("INTO <表名> [(<属性列1>[，<属性列2 >…)]")]),_._v(" "),t("p",[_._v("VALUES (<常量1> [，<常量2>] …)")]),_._v(" "),t("p",[_._v("其功能是将新元组插入指定表中。其中新元组的属性列1的值为常量1，属性列2的值为常量2，…。INTO子句中没有出现的属性列，新元组在这些列上将取空值。但必须注意的是，在表定义时说明了not null的属性列不能取空值，否则会出错。")]),_._v(" "),t("p",[_._v("示例：插入一条选课记录( '95020'，'1 ')，新插入的记录在Grade列上取空值")]),_._v(" "),t("p",[_._v("INSERT")]),_._v(" "),t("p",[_._v("INTO SC(Sno，Cno)")]),_._v(" "),t("p",[_._v("VALUES (' 95020 '，' 1 ')；")]),_._v(" "),t("p",[_._v("示例：将一个新学生记录（学号：95020；姓名：陈冬；性别：男；所在系：IS；年龄：18岁）插入到Student表中。")]),_._v(" "),t("p",[_._v("INSERT")]),_._v(" "),t("p",[_._v("INTO Student(sno,sname,ssex,sdept,sage)")]),_._v(" "),t("p",[_._v("VALUES ('95020'，'陈冬'，'男'，'IS'，18)；")]),_._v(" "),t("p",[_._v("或")]),_._v(" "),t("p",[_._v("INSERT INTO Student VALUES ('95020'，'陈冬'，'男'，'IS'，18)；")]),_._v(" "),t("p",[_._v("注：当新元组在所有属性列上都指定了值，并且顺序一致，则可以省略属性名")]),_._v(" "),t("p",[_._v("INTO子句：")]),_._v(" "),t("ul",[t("li",[_._v("指定要插入数据的表名及属性列")]),_._v(" "),t("li",[_._v("属性列的顺序可与表定义中的顺序不一致")]),_._v(" "),t("li",[_._v("没有指定属性列：表示要插入的是一条完整的元组，且属性列属性与表定义中的顺序一致")]),_._v(" "),t("li",[_._v("指定部分属性列：插入的元组在其余属性列上取空值")])]),_._v(" "),t("p",[_._v("VALUES子句 ：")]),_._v(" "),t("ul",[t("li",[_._v("提供的值必须在值的个数和值的类型与INTO子句匹配")])]),_._v(" "),t("h3",{attrs:{id:"_5-1-2、插入子查询结果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2、插入子查询结果"}},[_._v("#")]),_._v(" 5.1.2、插入子查询结果")]),_._v(" "),t("p",[_._v("子查询不仅可以嵌套在select语句中，用以构造父查询的条件，也可以嵌套在insert语句中，用以生成要插入的批量数据。")]),_._v(" "),t("p",[_._v("语句格式：")]),_._v(" "),t("p",[_._v("INSERT")]),_._v(" "),t("p",[_._v("INTO <表名> [(<属性列1> [，<属性列2>… )]")]),_._v(" "),t("p",[_._v("子查询；")]),_._v(" "),t("p",[_._v("示例：对每一个系，求学生的平均年龄，并把结果存入数据库。")]),_._v(" "),t("p",[_._v("第一步：建表")]),_._v(" "),t("p",[_._v("CREATE TABLE Deptage")]),_._v(" "),t("p",[_._v("​     (Sdept CHAR(15)  /* 系名*/")]),_._v(" "),t("p",[_._v("​     Avgage INT)； /"),t("em",[_._v("学生平均年龄")]),_._v("/")]),_._v(" "),t("p",[_._v("第二步：插入数据")]),_._v(" "),t("p",[_._v("​    INSERT")]),_._v(" "),t("p",[_._v("​    INTO Deptage(Sdept，Avgage)")]),_._v(" "),t("p",[_._v("​       SELECT Sdept，AVG(Sage)")]),_._v(" "),t("p",[_._v("​       FROM Student")]),_._v(" "),t("p",[_._v("​       GROUP BY Sdept；")]),_._v(" "),t("h3",{attrs:{id:"_5-2、修改数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、修改数据"}},[_._v("#")]),_._v(" 5.2、修改数据")]),_._v(" "),t("p",[_._v("修改操作又称为更新操作，其一般语句格式：")]),_._v(" "),t("p",[_._v("UPDATE <表名>")]),_._v(" "),t("p",[_._v("​    SET <列名>=<表达式>[，<列名>=<表达式>]…")]),_._v(" "),t("p",[_._v("[WHERE <条件>]；")]),_._v(" "),t("p",[_._v("其功能是修改指定表中满足WHERE子句条件的元组。其中set子句给出<表达式>[的值用于取代相应的属性值。如果省略WHERE子句，则表示要修改表中的所有元组。")]),_._v(" "),t("p",[_._v("修改指定表中满足WHERE子句条件的元组。")]),_._v(" "),t("h3",{attrs:{id:"_5-2-1、修改某一个元组的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1、修改某一个元组的值"}},[_._v("#")]),_._v(" 5.2.1、修改某一个元组的值")]),_._v(" "),t("p",[_._v("示例：将学生95001的年龄改为22岁。")]),_._v(" "),t("p",[_._v("​     UPDATE Student")]),_._v(" "),t("p",[_._v("​     SET Sage=22")]),_._v(" "),t("p",[_._v("​     WHERE Sno=' 95001 '；")]),_._v(" "),t("h3",{attrs:{id:"_5-2-2、-修改多个元组的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2、-修改多个元组的值"}},[_._v("#")]),_._v(" 5.2.2、 修改多个元组的值")]),_._v(" "),t("p",[_._v("示例1：将所有学生的年龄增加1岁。")]),_._v(" "),t("p",[_._v("​     UPDATE Student")]),_._v(" "),t("p",[_._v("​     SET Sage= Sage+1；")]),_._v(" "),t("p",[_._v("示例2：将信息系所有学生的年龄增加1岁。")]),_._v(" "),t("p",[_._v("​     UPDATE Student")]),_._v(" "),t("p",[_._v("​     SET Sage= Sage+1")]),_._v(" "),t("p",[_._v("​     WHERE Sdept=' IS '；")]),_._v(" "),t("h3",{attrs:{id:"_5-2-3、带子查询的修改语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3、带子查询的修改语句"}},[_._v("#")]),_._v(" 5.2.3、带子查询的修改语句")]),_._v(" "),t("p",[_._v("示例：将计算机科学系全体学生的成绩置零。")]),_._v(" "),t("p",[_._v("​    UPDATE SC")]),_._v(" "),t("p",[_._v("​    SET Grade=0")]),_._v(" "),t("p",[_._v("​    WHERE SNO IN")]),_._v(" "),t("p",[_._v("​       (SELETE SNO")]),_._v(" "),t("p",[_._v("​        FROM Student")]),_._v(" "),t("p",[_._v("​        WHERE SDEPT=‘CS’)；")]),_._v(" "),t("h3",{attrs:{id:"_5-3、删除数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3、删除数据"}},[_._v("#")]),_._v(" 5.3、删除数据")]),_._v(" "),t("p",[_._v("删除语句的一般格式为：")]),_._v(" "),t("p",[_._v("DELETE")]),_._v(" "),t("p",[_._v("​     FROM   <表名>")]),_._v(" "),t("p",[_._v("​     [WHERE <条件>]；")]),_._v(" "),t("p",[_._v("DELETE语句的功能是删除指定表中满足WHERE子句条件的所有元组。如果省略WHERE子句表示要删除表中所有元组，但是表的定义仍在字典中。")]),_._v(" "),t("h3",{attrs:{id:"_5-3-1、-删除某一个元组的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1、-删除某一个元组的值"}},[_._v("#")]),_._v(" 5.3.1、 删除某一个元组的值")]),_._v(" "),t("p",[_._v("示例：删除学号为95019的学生记录。")]),_._v(" "),t("p",[_._v("​    DELETE")]),_._v(" "),t("p",[_._v("​    FROM Student")]),_._v(" "),t("p",[_._v("​    WHERE Sno='95019'；")]),_._v(" "),t("h3",{attrs:{id:"_5-3-2、-删除多个元组的值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2、-删除多个元组的值"}},[_._v("#")]),_._v(" 5.3.2、 删除多个元组的值")]),_._v(" "),t("p",[_._v("示例：删除2号课程的所有选课记录。")]),_._v(" "),t("p",[_._v("​    DELETE")]),_._v(" "),t("p",[_._v("​    FROM SC；")]),_._v(" "),t("p",[_._v("​    WHERE Cno='2'；")]),_._v(" "),t("p",[_._v("示例：删除所有的学生选课记录。")]),_._v(" "),t("p",[_._v("​    DELETE")]),_._v(" "),t("p",[_._v("​    FROM SC；")]),_._v(" "),t("h3",{attrs:{id:"_5-3-3、-带子查询的删除语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-3、-带子查询的删除语句"}},[_._v("#")]),_._v(" 5.3.3、 带子查询的删除语句")]),_._v(" "),t("p",[_._v("示例：删除计算机科学系所有学生的选课记录。")]),_._v(" "),t("p",[_._v("​    DELETE")]),_._v(" "),t("p",[_._v("​    FROM SC")]),_._v(" "),t("p",[_._v("​    WHERE SNO IN")]),_._v(" "),t("p",[_._v("​      (SELETE SNO")]),_._v(" "),t("p",[_._v("​       FROM Student")]),_._v(" "),t("p",[_._v("​       WHERE SDEPT='CS')；")]),_._v(" "),t("h2",{attrs:{id:"_6、视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6、视图"}},[_._v("#")]),_._v(" 6、视图")]),_._v(" "),t("p",[_._v("视图是从一个或几个基本表（或视图）导出的表。它与基本表不同，是一个虚表。数据库中只存放视图的定义，而不存放视图对应的数据，这些数据仍存放在原来的基本表中，不会出现数据冗余。所以基表中的数据发生变化，从视图中查询出的数据也随之改变。")]),_._v(" "),t("p",[_._v("视图一经定义，就可以和基本表一样被查询、被删除。也可以在一个视图之上再定义新的视图，但对视图的更新（增、删、改）操作则有一定的限制。")]),_._v(" "),t("h3",{attrs:{id:"_6-1、定义视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、定义视图"}},[_._v("#")]),_._v(" 6.1、定义视图")]),_._v(" "),t("p",[_._v("语句格式：")]),_._v(" "),t("p",[_._v("​    CREATE VIEW  <视图名> [(<列名> [，<列名>]…)]")]),_._v(" "),t("p",[_._v("​      AS <子查询>")]),_._v(" "),t("p",[_._v("​    [WITH CHECK OPTION]；")]),_._v(" "),t("p",[_._v("其中，子查询可以是任意复杂的select语句，但通常不允许含有order by子句和distinct短语。WITH CHECK OPTION表示对视图进行update，insert和delete操作时要保证更新、插入或删除的行满足视图定义中的谓词条件（即子查询中的条件表达式）。")]),_._v(" "),t("h3",{attrs:{id:"_6-1-1、建立视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-1、建立视图"}},[_._v("#")]),_._v(" 6.1.1、建立视图")]),_._v(" "),t("p",[_._v("示例1：建立信息系学生的视图。")]),_._v(" "),t("p",[_._v("​    CREATE VIEW IS_Student(No,Name,Age)AS")]),_._v(" "),t("p",[_._v("​        SELECT Sno, Sname, Sage")]),_._v(" "),t("p",[_._v("​        FROM  Student")]),_._v(" "),t("p",[_._v("​        WHERE Sdept= 'IS'")]),_._v(" "),t("p",[_._v("WITH CHECK OPTION；")]),_._v(" "),t("p",[_._v("注：由于在定义视图时加上了WITH  CHECK OPTION子句，以后对该视图进行增删改操作时，RDBMS会自动加上Sdept=‘IS’的条件。")]),_._v(" "),t("p",[_._v("示例2： 建立1号课程的选课视图，并要求透过该视图进行的更新操作只涉及1号课程，同时对该视图的任何操作只能在工作时间进行。")]),_._v(" "),t("p",[_._v("CREATE VIEW IS_SC AS")]),_._v(" "),t("p",[_._v("SELECT Sno，Cno，Grade")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Cno= '1'")]),_._v(" "),t("p",[_._v("AND TO_CHAR(SYSDATE,'HH24')BETWEEN 9 AND 17")]),_._v(" "),t("p",[_._v("AND TO_CHAR(SYSDATE,'D')BETWEEN 2 AND 6")]),_._v(" "),t("p",[_._v("WITH CHECK OPTION;")]),_._v(" "),t("p",[_._v("视图不仅可以建立在单个基本表上，也可以建立在多个基本表上；不仅可以建立在一个或多个基本表上，也可以建立在一个或多个已定义好的视图上；或者建立在基本表与视图上。")]),_._v(" "),t("p",[_._v("示例3：建立新型系统选修了1号课程的学生的视图")]),_._v(" "),t("p",[_._v("CREATE VIEW IS_SI(Sno,Sname,Sgrade)AS")]),_._v(" "),t("p",[_._v("​        SELECT Student.Sno, Sname, Grade")]),_._v(" "),t("p",[_._v("​         FROM  Student,SC")]),_._v(" "),t("p",[_._v("​        WHERE Sdept= 'IS'")]),_._v(" "),t("p",[_._v("AND  Student.Sno = SC.Sno")]),_._v(" "),t("p",[_._v("AND  SC.Cno = ‘1’；")]),_._v(" "),t("p",[_._v("视图的定义也可以包含分组计算的值，如下例。")]),_._v(" "),t("p",[_._v("​     示例4：实现查询每个同学的平均成绩")]),_._v(" "),t("p",[_._v("​         CREAT VIEW S_G(Sno ,Gavg)")]),_._v(" "),t("p",[_._v("​          AS")]),_._v(" "),t("p",[_._v("​          SELECT Sno,AVG(Grade)")]),_._v(" "),t("p",[_._v("​          FROM SC")]),_._v(" "),t("p",[_._v("​          GROUP BY Sno;")]),_._v(" "),t("h3",{attrs:{id:"_6-1-2、删除视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-2、删除视图"}},[_._v("#")]),_._v(" 6.1.2、删除视图")]),_._v(" "),t("p",[_._v("格式：")]),_._v(" "),t("p",[_._v("​     DROP VIEW <视图名> [CASCADE];")]),_._v(" "),t("p",[_._v("视图删除后视图的定义将从数据字典中删除。如果该视图上还导出了其他视图，则使用CASCADE级联删除语句，把该视图和由它导出的所有视图一起删除。")]),_._v(" "),t("p",[_._v("基本表删除后，由该基本表导出的所有视图没有删除，但均已无法使用了。")]),_._v(" "),t("p",[_._v("示例：删除视图IS_SI")]),_._v(" "),t("p",[_._v("​     DROP VIEW IS_SI;")]),_._v(" "),t("h3",{attrs:{id:"_6-2、查询视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-2、查询视图"}},[_._v("#")]),_._v(" 6.2、查询视图")]),_._v(" "),t("p",[_._v("示例：视图建立后, 可对视图查询, 如同基本表:")]),_._v(" "),t("p",[_._v("​     SELECT Name")]),_._v(" "),t("p",[_._v("​     FROM  IS_Student")]),_._v(" "),t("p",[_._v("DBMS执行CREATE VIEW语句时只是把视图的定义存入数据字典，并不执行其中的SELECT语句。在对视图查询时，按视图的定义从基本表中将数据查出。")]),_._v(" "),t("h3",{attrs:{id:"_6-3、更新视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-3、更新视图"}},[_._v("#")]),_._v(" 6.3、更新视图")]),_._v(" "),t("p",[_._v("更新视图是指通过视图来插入、删除和修改数据。由于视是不实际存储数据的虚表，因此对视图的操作，最终要转换为对基本表的操作。")]),_._v(" "),t("p",[_._v("为了防止用户通过视图对数据进行增删改时，有意无意地对不属于视图范围内的基本表数据进行操作，可在定义视图时加上WITH CHECK OPTION子句。这样在视图上增删改数据时，RDBMS会检查视图定义中的条件，若不满足条件，则拒绝执行该操作。")]),_._v(" "),t("p",[_._v("​     示例：将信息系学生视图IS_Student中学号为200215122的学生姓名改为“刘晨”。")]),_._v(" "),t("p",[_._v("UPDATE IS_Student")]),_._v(" "),t("p",[_._v("SET Sname = ‘刘晨’")]),_._v(" "),t("p",[_._v("WHERE Sno = ‘200215122’;")]),_._v(" "),t("p",[_._v("转换后的更新语句为：")]),_._v(" "),t("p",[_._v("​           UPDATE Student")]),_._v(" "),t("p",[_._v("SET Sname = ‘刘晨’")]),_._v(" "),t("p",[_._v("WHERE Sno = ‘200215122’ AND Sdept = ‘IS’;")]),_._v(" "),t("p",[_._v("注：如果IS_Student视图定义的时候含有WITH CHECK OPTION子句，则对视图IS_Student的更新范围只能是信息系学生信息。")]),_._v(" "),t("p",[_._v("​     在关系数据库中，并不是所有的视图都是可以更新的，因为有些视图的更新不能唯一地有意义地转换成对相应基本表的更新。例如，建立视图中定义的S_G视图，如果想把视图S_G中学号为200215121的学生的平均成绩改成90分，SQL语句如下：")]),_._v(" "),t("p",[_._v("​     UPDATE S_G")]),_._v(" "),t("p",[_._v("​     SET Gavg = 90")]),_._v(" "),t("p",[_._v("​     WHERE Sno = ‘200215121’;")]),_._v(" "),t("p",[_._v("注：对这个视图的更新是无法转换成对基本表SC的更新的，因为系统无法修改各科成绩，以使平均成绩为90。所以S_G视图是不可更新的。")]),_._v(" "),t("p",[_._v("​     目前各个关系数据库系统一般都只允许对行列子集视图进行更新，而且各个系统对视图的更新还有更进一步的规定，由于各系统实现方法上的差异，这些规定也不尽相同。")]),_._v(" "),t("p",[_._v("​     例如DB2规定：")]),_._v(" "),t("ol",[t("li",[t("p",[_._v("若视图是由两个以上基本表导出的，则此视图不允许更新。")])]),_._v(" "),t("li",[t("p",[_._v("若视图的字段来自字段表达式或常数，则不允许对此视图执行INSERT和UPDATE操作，但允许执行delete操作。")])]),_._v(" "),t("li",[t("p",[_._v("若视图的字段来自聚集函数，则此视图不允许更新")])]),_._v(" "),t("li",[t("p",[_._v("若视图定义中含有Group By子句，则此视图不允许更新")])]),_._v(" "),t("li",[t("p",[_._v("若视图定义中含有DISTINGCT短语，则此视图不允许更新")])]),_._v(" "),t("li",[t("p",[_._v("若视图定义中有嵌套查询，并且内层查询的from子句中设计的表也是导出该视图的基本表，则此视图不允许更新。例如，将SC中成绩在平均成绩之上的元组定义成一个视图GOOD_SC：")])])]),_._v(" "),t("p",[_._v("CREATE VIEW GOOD_SC")]),_._v(" "),t("p",[_._v("AS")]),_._v(" "),t("p",[_._v("SELECT Sno,Cno,Grade")]),_._v(" "),t("p",[_._v("FROM SC")]),_._v(" "),t("p",[_._v("WHERE Grade > ( SELECT AVG(Grade)FROM SC )；")]),_._v(" "),t("p",[_._v("导出视图GOOD_SC的基本表是SC，内层查询中涉及的表也是SC，所以视图GOOD_SC是不允许更新的")]),_._v(" "),t("ol",[t("li",[_._v("一个不允许更新的视图也是不允许更新。")])]),_._v(" "),t("h3",{attrs:{id:"_6-4、视图的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-4、视图的作用"}},[_._v("#")]),_._v(" 6.4、视图的作用")]),_._v(" "),t("p",[_._v("视图最终是定义在基本表之上的，对视图的一切操作最终也要转换为对基本表的操作。而且对于非行列子集视图进行更新时还有可能出现问题。既然如此，为什么还要定义视图呢？这是因为合理使用视图能够带来许多好处。")]),_._v(" "),t("ol",[t("li",[_._v("简化用户的操作")])]),_._v(" "),t("p",[_._v("视图机制是用户可以将注意力集中在所关心的数据上，是数据库看起来结构清晰、简单。并且可以简化用户的数据查询操作。例如，那些定义了若干张表连接的视图，就将表与表之间的连接操作对用户隐蔽起来了。换句话说，用户所做的只是对一个虚表的简单查询，而这个虚表是怎样得来的，用户无需了解。")]),_._v(" "),t("ol",[t("li",[_._v("使用户能以多种角度看待同一数据")])]),_._v(" "),t("p",[_._v("视图机制能使不同用户以不同方式看待同一数据，当许多不同种类的用户共享同一个数据库时，这种灵活性非常重要。")]),_._v(" "),t("ol",[t("li",[_._v("提供了一定程度的逻辑独立性")])]),_._v(" "),t("p",[_._v("数据的物理独立性是指用户的应用程序不依赖于数据的物理结构；数据的逻辑独立性是指当数据库重构造时，如增加新的关系或对原有关系增加新的字段等，用户的应用程序不会受影响。")]),_._v(" "),t("p",[_._v("例：数据库逻辑结构发生改变学生关系Student(Sno， Sname， Ssex，Sage，Sdept)“垂直”地分成两个基本表：")]),_._v(" "),t("p",[_._v("​    SX(Sno，Sname，Sage)")]),_._v(" "),t("p",[_._v("​    SY(Sno，Ssex，Sdept)")]),_._v(" "),t("p",[_._v("通过建立一个视图Student：")]),_._v(" "),t("p",[_._v("CREATE VIEW Student(Sno，Sname，Ssex，Sage，Sdept)")]),_._v(" "),t("p",[_._v("AS")]),_._v(" "),t("p",[_._v("SELECT SX.Sno，SX.Sname，SY.Ssex，SX.Sage，SY.Sdept")]),_._v(" "),t("p",[_._v("FROM SX，SY")]),_._v(" "),t("p",[_._v("WHERE SX.Sno=SY.Sno；")]),_._v(" "),t("p",[_._v("使用户的外模式保持不变，从而对原Student表的查询程序不必修改。")]),_._v(" "),t("ol",[t("li",[_._v("能够对机密数据提供安全保护")])]),_._v(" "),t("p",[_._v("对不同用户定义不同视图，使每个用户只能看到他有权看到的数据；通过WITH CHECK OPTION对关键数据定义操作限制，限制操作的范围和时间等。")]),_._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[_._v("#")]),_._v(" 参考文章")]),_._v(" "),t("ul",[t("li",[_._v("https://www.cnblogs.com/zhouyeqin/p/7395037.html")])])])}),[],!1,null,null,null);v.default=p.exports}}]);