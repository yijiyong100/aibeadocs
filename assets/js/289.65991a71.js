(window.webpackJsonp=window.webpackJsonp||[]).push([[289],{804:function(t,s,a){"use strict";a.r(s);var e=a(53),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("本文主要是介绍 Mysql-常用函数 。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#概要"}},[t._v("概要")])]),a("li",[a("a",{attrs:{href:"#数学函数"}},[t._v("数学函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-abs-x"}},[t._v("（1）ABS(x)")])]),a("li",[a("a",{attrs:{href:"#_2-pi"}},[t._v("（2）PI()")])]),a("li",[a("a",{attrs:{href:"#_3-sqrt-x"}},[t._v("（3）SQRT(x)")])]),a("li",[a("a",{attrs:{href:"#_4-mod-x-y"}},[t._v("（4）MOD(x,y)")])]),a("li",[a("a",{attrs:{href:"#_5-ceil-x-、ceiling-x"}},[t._v("（5）CEIL(x)、CEILING(x)")])]),a("li",[a("a",{attrs:{href:"#_6-floor-x"}},[t._v("（6）FLOOR(x)")])]),a("li",[a("a",{attrs:{href:"#_7-round-x-、round-x-y-精度计算"}},[t._v("（7）ROUND(x)、ROUND(x,y) 精度计算")])]),a("li",[a("a",{attrs:{href:"#_8-sign-x"}},[t._v("（8）SIGN(x)")])]),a("li",[a("a",{attrs:{href:"#_9-pow-x-y-和、power-x-y"}},[t._v("（9）POW(x,y)和、POWER(x,y)")])]),a("li",[a("a",{attrs:{href:"#_10-exp-x"}},[t._v("（10）EXP(x)")])]),a("li",[a("a",{attrs:{href:"#_11-log-x"}},[t._v("（11）LOG(x)")])]),a("li",[a("a",{attrs:{href:"#_12-log10-x"}},[t._v("（12）LOG10(x)")])]),a("li",[a("a",{attrs:{href:"#_13-radians-x"}},[t._v("（13）RADIANS(x)")])]),a("li",[a("a",{attrs:{href:"#_14-degrees-x"}},[t._v("（14）DEGREES(x)")])]),a("li",[a("a",{attrs:{href:"#_15-sin-x-、asin-x"}},[t._v("（15）SIN(x)、ASIN(x)")])]),a("li",[a("a",{attrs:{href:"#_16-cos-x-、acos-x"}},[t._v("（16）COS(x)、ACOS(x)")])]),a("li",[a("a",{attrs:{href:"#_17-tan-x-、atan-x"}},[t._v("（17）TAN(x)、ATAN(x)")])]),a("li",[a("a",{attrs:{href:"#_18-cot-x"}},[t._v("（18）COT(x)")])])])]),a("li",[a("a",{attrs:{href:"#字符串函数"}},[t._v("字符串函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-char-length-str"}},[t._v("（1）CHAR_LENGTH(str)")])]),a("li",[a("a",{attrs:{href:"#_2-concat-s1-s2"}},[t._v("（2）CONCAT(s1,s2，...)")])]),a("li",[a("a",{attrs:{href:"#_3-concat-ws-x-s1-s2"}},[t._v("（3）CONCAT_WS(x,s1,s2,...)")])]),a("li",[a("a",{attrs:{href:"#_4-insert-s1-x-len-s2"}},[t._v("（4）INSERT(s1,x,len,s2)")])]),a("li",[a("a",{attrs:{href:"#_5-lower-str-和lcase-str-、upper-str-和ucase-str"}},[t._v("（5）LOWER(str)和LCASE(str)、UPPER(str)和UCASE(str)")])]),a("li",[a("a",{attrs:{href:"#_6-left-s-n-、right-s-n"}},[t._v("（6）LEFT(s,n)、RIGHT(s,n)")])]),a("li",[a("a",{attrs:{href:"#_7-lpad-s1-len-s2-、rpad-s1-len-s2"}},[t._v("（7）LPAD(s1,len,s2)、RPAD(s1,len,s2)")])]),a("li",[a("a",{attrs:{href:"#_8-ltrim-s-、rtrim-s"}},[t._v("（8）LTRIM(s)、RTRIM(s)")])]),a("li",[a("a",{attrs:{href:"#_9-trim-s"}},[t._v("（9）TRIM(s)")])]),a("li",[a("a",{attrs:{href:"#_10-trim-s1-from-s"}},[t._v("（10）TRIM(s1 FROM s)")])]),a("li",[a("a",{attrs:{href:"#_11-repeat-s-n"}},[t._v("（11）REPEAT(s,n)")])]),a("li",[a("a",{attrs:{href:"#_12-space-n"}},[t._v("（12）SPACE(n)")])]),a("li",[a("a",{attrs:{href:"#_13-replace-s-s1-s2"}},[t._v("（13）REPLACE(s,s1,s2)")])]),a("li",[a("a",{attrs:{href:"#_14-strcmp-s1-s2"}},[t._v("（14）STRCMP(s1,s2)")])]),a("li",[a("a",{attrs:{href:"#_15-substring-s-n-len-、mid-s-n-len"}},[t._v("（15）SUBSTRING(s,n,len)、MID(s,n,len)")])]),a("li",[a("a",{attrs:{href:"#_16-locate-str1-str-、position-str1-in-str-、instr-str-str1"}},[t._v("（16）LOCATE(str1,str)、POSITION(str1 IN str)、INSTR(str,str1)")])]),a("li",[a("a",{attrs:{href:"#_17-reverse-s"}},[t._v("（17）REVERSE(s)")])]),a("li",[a("a",{attrs:{href:"#_18-elt-n-str1-str2-str3-str4"}},[t._v("（18）ELT(N,str1,str2,str3,str4,...)")])])])]),a("li",[a("a",{attrs:{href:"#日期和时间函数"}},[t._v("日期和时间函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-curdate-、current-date"}},[t._v("（1）CURDATE()、CURRENT_DATE()")])]),a("li",[a("a",{attrs:{href:"#_2-current-timestamp-、localtime-、now-、sysdate"}},[t._v("（2）CURRENT_TIMESTAMP()、LOCALTIME()、NOW()、SYSDATE()")])]),a("li",[a("a",{attrs:{href:"#_3-unix-timestamp-、unix-timestamp-date"}},[t._v("（3）UNIXTIMESTAMP()、UNIXTIMESTAMP(date)")])]),a("li",[a("a",{attrs:{href:"#_4-from-unixtime-date"}},[t._v("（4）FROM_UNIXTIME(date)")])]),a("li",[a("a",{attrs:{href:"#_5-utc-date-和utc-time"}},[t._v("（5）UTCDATE()和UTCTIME()")])]),a("li",[a("a",{attrs:{href:"#_6-month-date-和monthname-date"}},[t._v("（6）MONTH(date)和MONTHNAME(date)")])]),a("li",[a("a",{attrs:{href:"#_7-dayname-d-、dayofweek-d-、weekday-d"}},[t._v("（7）DAYNAME(d)、DAYOFWEEK(d)、WEEKDAY(d)")])]),a("li",[a("a",{attrs:{href:"#_8-week-d-、weekofyead-d"}},[t._v("（8）WEEK(d)、WEEKOFYEAD(d)")])]),a("li",[a("a",{attrs:{href:"#_9-dayofyear-d-、dayofmonth-d"}},[t._v("（9）DAYOFYEAR(d)、DAYOFMONTH(d)")])]),a("li",[a("a",{attrs:{href:"#_10-year-date-、quarter-date-、minute-time-、second-time"}},[t._v("（10）YEAR(date)、QUARTER(date)、MINUTE(time)、SECOND(time)")])]),a("li",[a("a",{attrs:{href:"#_11-extrace-type-from-date"}},[t._v("（11）EXTRACE(type FROM date)")])]),a("li",[a("a",{attrs:{href:"#_12-time-to-sec-time"}},[t._v("（12）TIMETOSEC(time)")])]),a("li",[a("a",{attrs:{href:"#_13-sec-to-time"}},[t._v("（13）SECTOTIME()")])]),a("li",[a("a",{attrs:{href:"#_14-date-add-date-interval-expr-type-、add-date-date-interval-expr-type"}},[t._v("（14）DATEADD(date,INTERVAL expr type)、ADDDATE(date,INTERVAL expr type)")])]),a("li",[a("a",{attrs:{href:"#_15-date-sub-date-interval-expr-type-、subdate-date-interval-expr-type"}},[t._v("（15）DATE_SUB(date,INTERVAL expr type)、SUBDATE(date,INTERVAL expr type)")])]),a("li",[a("a",{attrs:{href:"#_16-addtime-date-expr-、subtime-date-expr"}},[t._v("（16）ADDTIME(date,expr)、SUBTIME(date,expr)")])])])]),a("li",[a("a",{attrs:{href:"#条件判断函数"}},[t._v("条件判断函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-if-expr-v1-v2"}},[t._v("（1）IF(expr,v1,v2)")])]),a("li",[a("a",{attrs:{href:"#_2-ifnull-v1-v2"}},[t._v("（2）IFNULL(v1,v2)")])]),a("li",[a("a",{attrs:{href:"#_3-case-expr-when-v1-then-r1-when-v2-then-v2-else-rn-end"}},[t._v("（3）CASE expr WHEN v1 THEN r1 [WHEN v2 THEN v2] [ELSE rn] END")])])])]),a("li",[a("a",{attrs:{href:"#系统信息函数"}},[t._v("系统信息函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-version"}},[t._v("（1）VERSION()")])]),a("li",[a("a",{attrs:{href:"#_2-connection-id"}},[t._v("（2）CONNECTION_ID()")])]),a("li",[a("a",{attrs:{href:"#_3-user-、current-user-、system-user-、session-user"}},[t._v("（3）USER()、CURRENTUSER()、SYSTEMUSER()、SESSION_USER()")])]),a("li",[a("a",{attrs:{href:"#_4-charset-str"}},[t._v("（4）CHARSET(str)")])]),a("li",[a("a",{attrs:{href:"#_5-collation"}},[t._v("（5）COLLATION()")])]),a("li",[a("a",{attrs:{href:"#_1-password-str"}},[t._v("（1）PASSWORD(str)")])]),a("li",[a("a",{attrs:{href:"#_2-md5-str"}},[t._v("（2）MD5(str)")])]),a("li",[a("a",{attrs:{href:"#_3-encode-str-pswd-str"}},[t._v("（3）ENCODE(str, pswd_str)")])]),a("li",[a("a",{attrs:{href:"#_4-decode-crypt-str-pswd-str"}},[t._v("（4）DECODE(cryptstr,pswdstr)")])]),a("li",[a("a",{attrs:{href:"#_1-format-x-n-精度计算四舍五入"}},[t._v("（1）FORMAT(x,n) 精度计算四舍五入")])]),a("li",[a("a",{attrs:{href:"#_2-conv-n-from-base-to-base"}},[t._v("（2）CONV(N,frombase,tobase)")])]),a("li",[a("a",{attrs:{href:"#_3-inet-aton-expr"}},[t._v("（3）INET_ATON(expr)")])]),a("li",[a("a",{attrs:{href:"#_4-inet-ntoa-expr"}},[t._v("（4）INET_NTOA(expr)")])]),a("li",[a("a",{attrs:{href:"#_5-benchmark-count-expr"}},[t._v("（5）BENCHMARK(count,expr)")])]),a("li",[a("a",{attrs:{href:"#_6-convert-str-using-charset"}},[t._v("（6）CONVERT(str USING charset)")])])])]),a("li",[a("a",{attrs:{href:"#【-】"}},[t._v("【----------------------------】")])]),a("li",[a("a",{attrs:{href:"#mysql-if语句、if-else语句、case语句-使用方法解析"}},[t._v("MySQL：if语句、if...else语句、case语句，使用方法解析！")])]),a("li",[a("a",{attrs:{href:"#【-】"}},[t._v("【----------------------------】")])]),a("li",[a("a",{attrs:{href:"#mysql-日期函数、时间函数总结"}},[t._v("MySQL：日期函数、时间函数总结")])]),a("li",[a("a",{attrs:{href:"#mysql-获得当前日期时间-函数"}},[t._v("MySQL 获得当前日期时间 函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#获得当前日期-时间-date-time-函数-now"}},[t._v("获得当前日期+时间（date + time）函数：now()")])]),a("li",[a("a",{attrs:{href:"#获得当前日期-时间-date-time-函数-sysdate"}},[t._v("获得当前日期+时间（date + time）函数：sysdate()")])]),a("li",[a("a",{attrs:{href:"#mysql-获得当前时间戳函数-current-timestamp-current-timestamp"}},[t._v("MySQL 获得当前时间戳函数：currenttimestamp, currenttimestamp()")])])])]),a("li",[a("a",{attrs:{href:"#mysql-日期转换函数、时间转换函数-date-format"}},[t._v("MySQL 日期转换函数、时间转换函数 date_format")]),a("ul",[a("li",[a("a",{attrs:{href:"#mysql-date-time-to-str-日期-时间转换为字符串"}},[t._v("MySQL Date/Time to Str（日期/时间转换为字符串）")])]),a("li",[a("a",{attrs:{href:"#mysql-日期、时间转换函数-date-format-date-format-time-format-time-format"}},[t._v("MySQL 日期、时间转换函数：dateformat(date,format), timeformat(time,format)")])]),a("li",[a("a",{attrs:{href:"#mysql-日期、天数-转换函数-to-days-date-from-days-days"}},[t._v("MySQL （日期、天数）转换函数：todays(date), fromdays(days)")])]),a("li",[a("a",{attrs:{href:"#mysql-时间、秒-转换函数-time-to-sec-time-sec-to-time-seconds"}},[t._v("MySQL （时间、秒）转换函数：timetosec(time), sectotime(seconds)")])]),a("li",[a("a",{attrs:{href:"#mysql-拼凑日期、时间函数-makdedate-year-dayofyear-maketime-hour-minute-second"}},[t._v("MySQL 拼凑日期、时间函数：makdedate(year,dayofyear), maketime(hour,minute,second)")])]),a("li",[a("a",{attrs:{href:"#mysql-unix-时间戳、日期-转换函数"}},[t._v("MySQL （Unix 时间戳、日期）转换函数")])])])]),a("li",[a("a",{attrs:{href:"#mysql-日期时间计算函数"}},[t._v("MySQL 日期时间计算函数")]),a("ul",[a("li",[a("a",{attrs:{href:"#mysql-为日期增加一个时间间隔-date-add"}},[t._v("MySQL 为日期增加一个时间间隔：date_add()")])]),a("li",[a("a",{attrs:{href:"#mysql-adddate-addtime-函数"}},[t._v("MySQL adddate(), addtime()函数，")])]),a("li",[a("a",{attrs:{href:"#mysql-为日期减去一个时间间隔-date-sub"}},[t._v("MySQL 为日期减去一个时间间隔：date_sub()")])]),a("li",[a("a",{attrs:{href:"#mysql-日期、时间相减函数-datediff-date1-date2-timediff-time1-time2"}},[t._v("MySQL 日期、时间相减函数：datediff(date1,date2), timediff(time1,time2)")])]),a("li",[a("a",{attrs:{href:"#mysql-时间戳-timestamp-转换、增、减函数"}},[t._v("MySQL 时间戳（timestamp）转换、增、减函数：")])])])]),a("li",[a("a",{attrs:{href:"#mysql-时区-timezone-转换函数"}},[t._v("MySQL 时区（timezone）转换函数")])]),a("li",[a("a",{attrs:{href:"#【-】"}},[t._v("【----------------------------】")])]),a("li",[a("a",{attrs:{href:"#mysql-数据类型转换"}},[t._v("MySQL 数据类型转换")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-cast-value-as-type"}},[t._v("(1) cast(value as type);")])]),a("li",[a("a",{attrs:{href:"#_2-convert-value-type"}},[t._v("(2) convert(value,type);")])]),a("li",[a("a",{attrs:{href:"#语法"}},[t._v("语法")])])])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"概要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概要"}},[t._v("#")]),t._v(" 概要")]),t._v(" "),a("p",[t._v("MySQL数据库中提供了很丰富的函数。MySQL函数包括数学函数、字符串函数、日期和时间函数、条件判断函数、系统信息函数、加密函数、格式化函数等。通过这些函数，可以简化用户的操作。例如，字符串连接函数可以很方便的将多个字符串连接在一起。在这一讲中将讲解的内容包括：")]),t._v(" "),a("p",[t._v("数学函数\n字符串函数\n日期和时间函数\n条件判断函数\n系统信息函数\n加密函数\n格式化函数")]),t._v(" "),a("p",[t._v("MySQL提供了众多功能强大、方便易用的函数，使用这些函数，可以极大地提高用户对于数据库的管理效率，从而更加灵活地满足不同用户的需求。本文将MySQL的函数分类并汇总，以便以后用到的时候可以随时查看。")]),t._v(" "),a("h2",{attrs:{id:"数学函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[t._v("#")]),t._v(" 数学函数")]),t._v(" "),a("h3",{attrs:{id:"_1-abs-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-abs-x"}},[t._v("#")]),t._v(" （1）ABS(x)")]),t._v(" "),a("p",[t._v("返回x的绝对值")]),t._v(" "),a("h3",{attrs:{id:"_2-pi"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-pi"}},[t._v("#")]),t._v(" （2）PI()")]),t._v(" "),a("p",[t._v("返回圆周率π，默认显示6位小数")]),t._v(" "),a("h3",{attrs:{id:"_3-sqrt-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-sqrt-x"}},[t._v("#")]),t._v(" （3）SQRT(x)")]),t._v(" "),a("p",[t._v("返回非负数的x的二次方根")]),t._v(" "),a("h3",{attrs:{id:"_4-mod-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mod-x-y"}},[t._v("#")]),t._v(" （4）MOD(x,y)")]),t._v(" "),a("p",[t._v("返回x被y除后的余数")]),t._v(" "),a("h3",{attrs:{id:"_5-ceil-x-、ceiling-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-ceil-x-、ceiling-x"}},[t._v("#")]),t._v(" （5）CEIL(x)、CEILING(x)")]),t._v(" "),a("p",[t._v("返回不小于x的最小整数")]),t._v(" "),a("h3",{attrs:{id:"_6-floor-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-floor-x"}},[t._v("#")]),t._v(" （6）FLOOR(x)")]),t._v(" "),a("p",[t._v("返回不大于x的最大整数")]),t._v(" "),a("h3",{attrs:{id:"_7-round-x-、round-x-y-精度计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-round-x-、round-x-y-精度计算"}},[t._v("#")]),t._v(" （7）ROUND(x)、ROUND(x,y) 精度计算")]),t._v(" "),a("p",[t._v("前者返回最接近于x的整数，即对x进行四舍五入；后者返回最接近x的数，其值保留到小数点后面y位，若y为负值，则将保留到x到小数点左边y位")]),t._v(" "),a("h3",{attrs:{id:"_8-sign-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-sign-x"}},[t._v("#")]),t._v(" （8）SIGN(x)")]),t._v(" "),a("p",[t._v("返回参数x的符号，-1表示负数，0表示0，1表示正数")]),t._v(" "),a("h3",{attrs:{id:"_9-pow-x-y-和、power-x-y"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-pow-x-y-和、power-x-y"}},[t._v("#")]),t._v(" （9）POW(x,y)和、POWER(x,y)")]),t._v(" "),a("p",[t._v("返回x的y次乘方的值")]),t._v(" "),a("h3",{attrs:{id:"_10-exp-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-exp-x"}},[t._v("#")]),t._v(" （10）EXP(x)")]),t._v(" "),a("p",[t._v("返回e的x乘方后的值")]),t._v(" "),a("h3",{attrs:{id:"_11-log-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-log-x"}},[t._v("#")]),t._v(" （11）LOG(x)")]),t._v(" "),a("p",[t._v("返回x的自然对数，x相对于基数e的对数")]),t._v(" "),a("h3",{attrs:{id:"_12-log10-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-log10-x"}},[t._v("#")]),t._v(" （12）LOG10(x)")]),t._v(" "),a("p",[t._v("返回x的基数为10的对数")]),t._v(" "),a("h3",{attrs:{id:"_13-radians-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-radians-x"}},[t._v("#")]),t._v(" （13）RADIANS(x)")]),t._v(" "),a("p",[t._v("返回x由角度转化为弧度的值")]),t._v(" "),a("h3",{attrs:{id:"_14-degrees-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-degrees-x"}},[t._v("#")]),t._v(" （14）DEGREES(x)")]),t._v(" "),a("p",[t._v("返回x由弧度转化为角度的值")]),t._v(" "),a("h3",{attrs:{id:"_15-sin-x-、asin-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-sin-x-、asin-x"}},[t._v("#")]),t._v(" （15）SIN(x)、ASIN(x)")]),t._v(" "),a("p",[t._v("前者返回x的正弦，其中x为给定的弧度值；后者返回x的反正弦值，x为正弦")]),t._v(" "),a("h3",{attrs:{id:"_16-cos-x-、acos-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-cos-x-、acos-x"}},[t._v("#")]),t._v(" （16）COS(x)、ACOS(x)")]),t._v(" "),a("p",[t._v("前者返回x的余弦，其中x为给定的弧度值；后者返回x的反余弦值，x为余弦")]),t._v(" "),a("h3",{attrs:{id:"_17-tan-x-、atan-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-tan-x-、atan-x"}},[t._v("#")]),t._v(" （17）TAN(x)、ATAN(x)")]),t._v(" "),a("p",[t._v("前者返回x的正切，其中x为给定的弧度值；后者返回x的反正切值，x为正切")]),t._v(" "),a("h3",{attrs:{id:"_18-cot-x"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-cot-x"}},[t._v("#")]),t._v(" （18）COT(x)")]),t._v(" "),a("p",[t._v("返回给定弧度值x的余切")]),t._v(" "),a("h2",{attrs:{id:"字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[t._v("#")]),t._v(" 字符串函数")]),t._v(" "),a("h3",{attrs:{id:"_1-char-length-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-char-length-str"}},[t._v("#")]),t._v(" （1）CHAR_LENGTH(str)")]),t._v(" "),a("p",[t._v("计算字符串字符个数")]),t._v(" "),a("h3",{attrs:{id:"_2-concat-s1-s2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-concat-s1-s2"}},[t._v("#")]),t._v(" （2）CONCAT(s1,s2，...)")]),t._v(" "),a("p",[t._v("返回连接参数产生的字符串，一个或多个待拼接的内容，任意一个为NULL则返回值为NULL")]),t._v(" "),a("h3",{attrs:{id:"_3-concat-ws-x-s1-s2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-concat-ws-x-s1-s2"}},[t._v("#")]),t._v(" （3）CONCAT_WS(x,s1,s2,...)")]),t._v(" "),a("p",[t._v("返回多个字符串拼接之后的字符串，每个字符串之间有一个x")]),t._v(" "),a("h3",{attrs:{id:"_4-insert-s1-x-len-s2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-insert-s1-x-len-s2"}},[t._v("#")]),t._v(" （4）INSERT(s1,x,len,s2)")]),t._v(" "),a("p",[t._v("返回字符串s1，其子字符串起始于位置x，被字符串s2取代len个字符")]),t._v(" "),a("h3",{attrs:{id:"_5-lower-str-和lcase-str-、upper-str-和ucase-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-lower-str-和lcase-str-、upper-str-和ucase-str"}},[t._v("#")]),t._v(" （5）LOWER(str)和LCASE(str)、UPPER(str)和UCASE(str)")]),t._v(" "),a("p",[t._v("前两者将str中的字母全部转换成小写，后两者将字符串中的字母全部转换成大写")]),t._v(" "),a("h3",{attrs:{id:"_6-left-s-n-、right-s-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-left-s-n-、right-s-n"}},[t._v("#")]),t._v(" （6）LEFT(s,n)、RIGHT(s,n)")]),t._v(" "),a("p",[t._v("前者返回字符串s从最左边开始的n个字符，后者返回字符串s从最右边开始的n个字符")]),t._v(" "),a("h3",{attrs:{id:"_7-lpad-s1-len-s2-、rpad-s1-len-s2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-lpad-s1-len-s2-、rpad-s1-len-s2"}},[t._v("#")]),t._v(" （7）LPAD(s1,len,s2)、RPAD(s1,len,s2)")]),t._v(" "),a("p",[t._v("前者返回s1，其左边由字符串s2填补到len字符长度，假如s1的长度大于len，则返回值被缩短至len字符；前者返回s1，其右边由字符串s2填补到len字符长度，假如s1的长度大于len，则返回值被缩短至len字符")]),t._v(" "),a("h3",{attrs:{id:"_8-ltrim-s-、rtrim-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-ltrim-s-、rtrim-s"}},[t._v("#")]),t._v(" （8）LTRIM(s)、RTRIM(s)")]),t._v(" "),a("p",[t._v("前者返回字符串s，其左边所有空格被删除；后者返回字符串s，其右边所有空格被删除")]),t._v(" "),a("h3",{attrs:{id:"_9-trim-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-trim-s"}},[t._v("#")]),t._v(" （9）TRIM(s)")]),t._v(" "),a("p",[t._v("返回字符串s删除了两边空格之后的字符串")]),t._v(" "),a("h3",{attrs:{id:"_10-trim-s1-from-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-trim-s1-from-s"}},[t._v("#")]),t._v(" （10）TRIM(s1 FROM s)")]),t._v(" "),a("p",[t._v("删除字符串s两端所有子字符串s1，未指定s1的情况下则默认删除空格")]),t._v(" "),a("h3",{attrs:{id:"_11-repeat-s-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-repeat-s-n"}},[t._v("#")]),t._v(" （11）REPEAT(s,n)")]),t._v(" "),a("p",[t._v("返回一个由重复字符串s组成的字符串，字符串s的数目等于n")]),t._v(" "),a("h3",{attrs:{id:"_12-space-n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-space-n"}},[t._v("#")]),t._v(" （12）SPACE(n)")]),t._v(" "),a("p",[t._v("返回一个由n个空格组成的字符串")]),t._v(" "),a("h3",{attrs:{id:"_13-replace-s-s1-s2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-replace-s-s1-s2"}},[t._v("#")]),t._v(" （13）REPLACE(s,s1,s2)")]),t._v(" "),a("p",[t._v("返回一个字符串，用字符串s2替代字符串s中所有的字符串s1")]),t._v(" "),a("h3",{attrs:{id:"_14-strcmp-s1-s2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-strcmp-s1-s2"}},[t._v("#")]),t._v(" （14）STRCMP(s1,s2)")]),t._v(" "),a("p",[t._v("若s1和s2中所有的字符串都相同，则返回0；根据当前分类次序，第一个参数小于第二个则返回-1，其他情况返回1")]),t._v(" "),a("h3",{attrs:{id:"_15-substring-s-n-len-、mid-s-n-len"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-substring-s-n-len-、mid-s-n-len"}},[t._v("#")]),t._v(" （15）SUBSTRING(s,n,len)、MID(s,n,len)")]),t._v(" "),a("p",[t._v("两个函数作用相同，从字符串s中返回一个第n个字符开始、长度为len的字符串")]),t._v(" "),a("h3",{attrs:{id:"_16-locate-str1-str-、position-str1-in-str-、instr-str-str1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-locate-str1-str-、position-str1-in-str-、instr-str-str1"}},[t._v("#")]),t._v(" （16）LOCATE(str1,str)、POSITION(str1 IN str)、INSTR(str,str1)")]),t._v(" "),a("p",[t._v("三个函数作用相同，返回子字符串str1在字符串str中的开始位置（从第几个字符开始）")]),t._v(" "),a("h3",{attrs:{id:"_17-reverse-s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17-reverse-s"}},[t._v("#")]),t._v(" （17）REVERSE(s)")]),t._v(" "),a("p",[t._v("将字符串s反转")]),t._v(" "),a("h3",{attrs:{id:"_18-elt-n-str1-str2-str3-str4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18-elt-n-str1-str2-str3-str4"}},[t._v("#")]),t._v(" （18）ELT(N,str1,str2,str3,str4,...)")]),t._v(" "),a("p",[t._v("返回第N个字符串")]),t._v(" "),a("h2",{attrs:{id:"日期和时间函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间函数"}},[t._v("#")]),t._v(" 日期和时间函数")]),t._v(" "),a("h3",{attrs:{id:"_1-curdate-、current-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-curdate-、current-date"}},[t._v("#")]),t._v(" （1）CURDATE()、CURRENT_DATE()")]),t._v(" "),a("p",[t._v('将当前日期按照"YYYY-MM-DD"或者"YYYYMMDD"格式的值返回，具体格式根据函数用在字符串或是数字语境中而定')]),t._v(" "),a("h3",{attrs:{id:"_2-current-timestamp-、localtime-、now-、sysdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-current-timestamp-、localtime-、now-、sysdate"}},[t._v("#")]),t._v(" （2）CURRENT_TIMESTAMP()、LOCALTIME()、NOW()、SYSDATE()")]),t._v(" "),a("p",[t._v('这四个函数作用相同，返回当前日期和时间值，格式为"YYYY_MM-DD HH:MM:SS"或"YYYYMMDDHHMMSS"，具体格式根据函数用在字符串或数字语境中而定')]),t._v(" "),a("h3",{attrs:{id:"_3-unix-timestamp-、unix-timestamp-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-unix-timestamp-、unix-timestamp-date"}},[t._v("#")]),t._v(" （3）UNIX_TIMESTAMP()、UNIX_TIMESTAMP(date)")]),t._v(" "),a("p",[t._v("前者返回一个格林尼治标准时间1970-01-01 00:00:00到现在的秒数，后者返回一个格林尼治标准时间1970-01-01 00:00:00到指定时间的秒数")]),t._v(" "),a("h3",{attrs:{id:"_4-from-unixtime-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-from-unixtime-date"}},[t._v("#")]),t._v(" （4）FROM_UNIXTIME(date)")]),t._v(" "),a("p",[t._v("和UNIX_TIMESTAMP互为反函数，把UNIX时间戳转换为普通格式的时间")]),t._v(" "),a("h3",{attrs:{id:"_5-utc-date-和utc-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-utc-date-和utc-time"}},[t._v("#")]),t._v(" （5）UTC_DATE()和UTC_TIME()")]),t._v(" "),a("p",[t._v('前者返回当前UTC（世界标准时间）日期值，其格式为"YYYY-MM-DD"或"YYYYMMDD"，后者返回当前UTC时间值，其格式为"YYYY-MM-DD"或"YYYYMMDD"。具体使用哪种取决于函数用在字符串还是数字语境中')]),t._v(" "),a("h3",{attrs:{id:"_6-month-date-和monthname-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-month-date-和monthname-date"}},[t._v("#")]),t._v(" （6）MONTH(date)和MONTHNAME(date)")]),t._v(" "),a("p",[t._v("前者返回指定日期中的月份，后者返回指定日期中的月份的名称")]),t._v(" "),a("h3",{attrs:{id:"_7-dayname-d-、dayofweek-d-、weekday-d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-dayname-d-、dayofweek-d-、weekday-d"}},[t._v("#")]),t._v(" （7）DAYNAME(d)、DAYOFWEEK(d)、WEEKDAY(d)")]),t._v(" "),a("p",[t._v("DAYNAME(d)返回d对应的工作日的英文名称，如Sunday、Monday等；DAYOFWEEK(d)返回的对应一周中的索引，1表示周日、2表示周一；WEEKDAY(d)表示d对应的工作日索引，0表示周一，1表示周二")]),t._v(" "),a("h3",{attrs:{id:"_8-week-d-、weekofyead-d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-week-d-、weekofyead-d"}},[t._v("#")]),t._v(" （8）WEEK(d)、WEEKOFYEAD(d)")]),t._v(" "),a("p",[t._v("前者计算日期d是一年中的第几周，后者计算某一天位于一年中的第几周")]),t._v(" "),a("h3",{attrs:{id:"_9-dayofyear-d-、dayofmonth-d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-dayofyear-d-、dayofmonth-d"}},[t._v("#")]),t._v(" （9）DAYOFYEAR(d)、DAYOFMONTH(d)")]),t._v(" "),a("p",[t._v("前者返回d是一年中的第几天，后者返回d是一月中的第几天")]),t._v(" "),a("h3",{attrs:{id:"_10-year-date-、quarter-date-、minute-time-、second-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-year-date-、quarter-date-、minute-time-、second-time"}},[t._v("#")]),t._v(" （10）YEAR(date)、QUARTER(date)、MINUTE(time)、SECOND(time)")]),t._v(" "),a("p",[t._v("YEAR(date)返回指定日期对应的年份，范围是1970~2069；QUARTER(date)返回date对应一年中的季度，范围是1~4；MINUTE(time)返回time对应的分钟数，范围是0~59；SECOND(time)返回制定时间的秒值")]),t._v(" "),a("h3",{attrs:{id:"_11-extrace-type-from-date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-extrace-type-from-date"}},[t._v("#")]),t._v(" （11）EXTRACE(type FROM date)")]),t._v(" "),a("p",[t._v("从日期中提取一部分，type可以是YEAR、YEAR_MONTH、DAY_HOUR、DAY_MICROSECOND、DAY_MINUTE、DAY_SECOND")]),t._v(" "),a("h3",{attrs:{id:"_12-time-to-sec-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-time-to-sec-time"}},[t._v("#")]),t._v(" （12）TIME_TO_SEC(time)")]),t._v(" "),a("p",[t._v('返回以转换为秒的time参数，转换公式为"3600'),a("em",[t._v("小时 + 60")]),t._v('分钟 + 秒"')]),t._v(" "),a("h3",{attrs:{id:"_13-sec-to-time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-sec-to-time"}},[t._v("#")]),t._v(" （13）SEC_TO_TIME()")]),t._v(" "),a("p",[t._v("和TIME_TO_SEC(time)互为反函数，将秒值转换为时间格式")]),t._v(" "),a("h3",{attrs:{id:"_14-date-add-date-interval-expr-type-、add-date-date-interval-expr-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-date-add-date-interval-expr-type-、add-date-date-interval-expr-type"}},[t._v("#")]),t._v(" （14）DATE_ADD(date,INTERVAL expr type)、ADD_DATE(date,INTERVAL expr type)")]),t._v(" "),a("p",[t._v("返回将起始时间加上expr type之后的时间，比如DATE_ADD('2010-12-31 23:59:59', INTERVAL 1 SECOND)表示的就是把第一个时间加1秒")]),t._v(" "),a("h3",{attrs:{id:"_15-date-sub-date-interval-expr-type-、subdate-date-interval-expr-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-date-sub-date-interval-expr-type-、subdate-date-interval-expr-type"}},[t._v("#")]),t._v(" （15）DATE_SUB(date,INTERVAL expr type)、SUBDATE(date,INTERVAL expr type)")]),t._v(" "),a("p",[t._v("返回将起始时间减去expr type之后的时间")]),t._v(" "),a("h3",{attrs:{id:"_16-addtime-date-expr-、subtime-date-expr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16-addtime-date-expr-、subtime-date-expr"}},[t._v("#")]),t._v(" （16）ADDTIME(date,expr)、SUBTIME(date,expr)")]),t._v(" "),a("p",[t._v("前者进行date的时间加操作，后者进行date的时间减操作")]),t._v(" "),a("h2",{attrs:{id:"条件判断函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件判断函数"}},[t._v("#")]),t._v(" 条件判断函数")]),t._v(" "),a("h3",{attrs:{id:"_1-if-expr-v1-v2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-if-expr-v1-v2"}},[t._v("#")]),t._v(" （1）IF(expr,v1,v2)")]),t._v(" "),a("p",[t._v("如果expr是TRUE则返回v1，否则返回v2")]),t._v(" "),a("h3",{attrs:{id:"_2-ifnull-v1-v2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-ifnull-v1-v2"}},[t._v("#")]),t._v(" （2）IFNULL(v1,v2)")]),t._v(" "),a("p",[t._v("如果v1不为NULL，则返回v1，否则返回v2")]),t._v(" "),a("h3",{attrs:{id:"_3-case-expr-when-v1-then-r1-when-v2-then-v2-else-rn-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-case-expr-when-v1-then-r1-when-v2-then-v2-else-rn-end"}},[t._v("#")]),t._v(" （3）CASE expr WHEN v1 THEN r1 [WHEN v2 THEN v2] [ELSE rn] END")]),t._v(" "),a("p",[t._v("如果expr等于某个vn，则返回对应位置THEN后面的结果，如果与所有值都不想等，则返回ELSE后面的rn")]),t._v(" "),a("h2",{attrs:{id:"系统信息函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统信息函数"}},[t._v("#")]),t._v(" 系统信息函数")]),t._v(" "),a("h3",{attrs:{id:"_1-version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-version"}},[t._v("#")]),t._v(" （1）VERSION()")]),t._v(" "),a("p",[t._v("查看MySQL版本号")]),t._v(" "),a("h3",{attrs:{id:"_2-connection-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-connection-id"}},[t._v("#")]),t._v(" （2）CONNECTION_ID()")]),t._v(" "),a("p",[t._v("查看当前用户的连接数")]),t._v(" "),a("h3",{attrs:{id:"_3-user-、current-user-、system-user-、session-user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-user-、current-user-、system-user-、session-user"}},[t._v("#")]),t._v(" （3）USER()、CURRENT_USER()、SYSTEM_USER()、SESSION_USER()")]),t._v(" "),a("p",[t._v("查看当前被MySQL服务器验证的用户名和主机的组合，一般这几个函数的返回值是相同的")]),t._v(" "),a("h3",{attrs:{id:"_4-charset-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-charset-str"}},[t._v("#")]),t._v(" （4）CHARSET(str)")]),t._v(" "),a("p",[t._v("查看字符串str使用的字符集")]),t._v(" "),a("h3",{attrs:{id:"_5-collation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-collation"}},[t._v("#")]),t._v(" （5）COLLATION()")]),t._v(" "),a("p",[t._v("查看字符串排列方式")]),t._v(" "),a("p",[t._v("加密函数")]),t._v(" "),a("h3",{attrs:{id:"_1-password-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-password-str"}},[t._v("#")]),t._v(" （1）PASSWORD(str)")]),t._v(" "),a("p",[t._v("从原明文密码str计算并返回加密后的字符串密码，注意这个函数的加密是单向的（不可逆），因此不应将它应用在个人的应用程序中而应该只在MySQL服务器的鉴定系统中使用")]),t._v(" "),a("h3",{attrs:{id:"_2-md5-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-md5-str"}},[t._v("#")]),t._v(" （2）MD5(str)")]),t._v(" "),a("p",[t._v("为字符串算出一个MD5 128比特校验和，改值以32位十六进制数字的二进制字符串形式返回")]),t._v(" "),a("h3",{attrs:{id:"_3-encode-str-pswd-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-encode-str-pswd-str"}},[t._v("#")]),t._v(" （3）ENCODE(str, pswd_str)")]),t._v(" "),a("p",[t._v("使用pswd_str作为密码，加密str")]),t._v(" "),a("h3",{attrs:{id:"_4-decode-crypt-str-pswd-str"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-decode-crypt-str-pswd-str"}},[t._v("#")]),t._v(" （4）DECODE(crypt_str,pswd_str)")]),t._v(" "),a("p",[t._v("使用pswd_str作为密码，解密加密字符串crypt_str，crypt_str是由ENCODE函数返回的字符串")]),t._v(" "),a("p",[t._v("其他函数")]),t._v(" "),a("h3",{attrs:{id:"_1-format-x-n-精度计算四舍五入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-format-x-n-精度计算四舍五入"}},[t._v("#")]),t._v(" （1）FORMAT(x,n) 精度计算四舍五入")]),t._v(" "),a("p",[t._v("将数字x格式化，并以四舍五入的方式保留小数点后n位，结果以字符串形式返回")]),t._v(" "),a("h3",{attrs:{id:"_2-conv-n-from-base-to-base"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-conv-n-from-base-to-base"}},[t._v("#")]),t._v(" （2）CONV(N,from_base,to_base)")]),t._v(" "),a("p",[t._v("不同进制数之间的转换，返回值为数值N的字符串表示，由from_base进制转换为to_base进制")]),t._v(" "),a("h3",{attrs:{id:"_3-inet-aton-expr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-inet-aton-expr"}},[t._v("#")]),t._v(" （3）INET_ATON(expr)")]),t._v(" "),a("p",[t._v("给出一个作为字符串的网络地址的点地址表示，返回一个代表该地址数值的整数，地址可以使4或8比特")]),t._v(" "),a("h3",{attrs:{id:"_4-inet-ntoa-expr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-inet-ntoa-expr"}},[t._v("#")]),t._v(" （4）INET_NTOA(expr)")]),t._v(" "),a("p",[t._v("给定一个数字网络地址（4或8比特），返回作为字符串的该地址的点地址表示")]),t._v(" "),a("h3",{attrs:{id:"_5-benchmark-count-expr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-benchmark-count-expr"}},[t._v("#")]),t._v(" （5）BENCHMARK(count,expr)")]),t._v(" "),a("p",[t._v("重复执行count次表达式expr，它可以用于计算MySQL处理表达式的速度，结果值通常是0（0只是表示很快，并不是没有速度）。另一个作用是用它在MySQL客户端内部报告语句执行的时间")]),t._v(" "),a("h3",{attrs:{id:"_6-convert-str-using-charset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-convert-str-using-charset"}},[t._v("#")]),t._v(" （6）CONVERT(str USING charset)")]),t._v(" "),a("p",[t._v("使用字符集charset表示字符串str")]),t._v(" "),a("h2",{attrs:{id:"【-】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【-】"}},[t._v("#")]),t._v(" 【----------------------------】")]),t._v(" "),a("h2",{attrs:{id:"mysql-if语句、if-else语句、case语句-使用方法解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-if语句、if-else语句、case语句-使用方法解析"}},[t._v("#")]),t._v(" MySQL：if语句、if...else语句、case语句，使用方法解析！")]),t._v(" "),a("p",[a("strong",[t._v("if语句做为表达式使用，语法格式如下：")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expr1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("expr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("expr3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("strong",[t._v("说明")]),t._v("：")]),t._v(" "),a("p",[t._v("如果 expr1 是TRUE (expr1 <> 0 and expr1 <> NULL)，则 IF()的返回值为expr2; 否则返回值则为 expr3。IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。")]),t._v(" "),a("p",[a("strong",[t._v("例子")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"女"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ages "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当然如果作为表达式的话，if也可以用CASE when来实现的：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 下面这个将输出：男 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未知'")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ages\n \n \n \n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 下面这个将输出：女 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未知'")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ages\n \n \n \n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 下面这个将输出：未知 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未知'")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ages\n \n \n \n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*   当然还有一种写法  输出：未知 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未知'")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ages\n \n \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CASE")]),t._v(" \n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'男'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'女'")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'未知'")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" ages\n")])])]),a("p",[t._v("从上面的例子我们可以看出得很明白了，case后面的值=when后台的值，然后就会输出when后面跟的then后的值。如果都不等行的话，就输出else后的值。")]),t._v(" "),a("p",[a("strong",[t._v("IF...ELSE...做为流程控制语句使用，语法格式如下：")])]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" search_condition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),t._v(" \n    statement_list  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSEIF")]),t._v(" search_condition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("THEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n    statement_list "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ELSE")]),t._v(" \n    statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("IF")]),t._v("\n")])])]),a("p",[a("strong",[t._v("说明")]),t._v("：")]),t._v(" "),a("p",[t._v("与PHP中的IF语句类似")]),t._v(" "),a("p",[t._v("当IF中条件search_condition成立时，执行THEN后的statement_list语句、")]),t._v(" "),a("p",[t._v("否则判断ELSEIF中的条件成立时，执行其后的statement_list语句、")]),t._v(" "),a("p",[t._v("否则继续判断其他分支。")]),t._v(" "),a("p",[t._v("当所有分支的条件均不成立时，执行ELSE分支。")]),t._v(" "),a("p",[t._v("search_condition是一个条件表达式，可以由“=、<、<=、>、>=、!=”等条件运算符组成，并且可以使用AND、OR、NOT对多个表达式进行组合。")]),t._v(" "),a("p",[a("strong",[t._v("例子")]),t._v("：")]),t._v(" "),a("p",[t._v("建立一个存储过程，该存储过程通过学生学号（student_no）和课程编号（course_no）查询其成绩（grade），")]),t._v(" "),a("p",[t._v("返回成绩和成绩的等级，成绩大于90分的为A级，小于90分大于等于80分的为B级，小于80分大于等于70分的为C级，依次到E级")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("procedure")]),t._v(" dbname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("proc_getGrade  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu_no "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("cour_no "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("declare")]),t._v(" stu_grade "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("float")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" grade "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" stu_grade "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" grade "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" student_no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("stu_no "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" course_no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cour_no"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elseif")]),t._v(" stu_grade70 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'D'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" stu_grade"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'E'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v("\n")])])]),a("p",[a("strong",[t._v("注意：IF作为一条语句，在END IF后需要加上分号“;”以表示语句结束，其他语句如CASE、LOOP等也是相同的。")])]),t._v(" "),a("h2",{attrs:{id:"【-】-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【-】-2"}},[t._v("#")]),t._v(" 【----------------------------】")]),t._v(" "),a("h2",{attrs:{id:"mysql-日期函数、时间函数总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-日期函数、时间函数总结"}},[t._v("#")]),t._v(" MySQL：日期函数、时间函数总结")]),t._v(" "),a("h2",{attrs:{id:"mysql-获得当前日期时间-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-获得当前日期时间-函数"}},[t._v("#")]),t._v(" MySQL 获得当前日期时间 函数")]),t._v(" "),a("h3",{attrs:{id:"获得当前日期-时间-date-time-函数-now"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获得当前日期-时间-date-time-函数-now"}},[t._v("#")]),t._v(" 获得当前日期+时间（date + time）函数：now()")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("46")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"获得当前日期-时间-date-time-函数-sysdate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获得当前日期-时间-date-time-函数-sysdate"}},[t._v("#")]),t._v(" 获得当前日期+时间（date + time）函数：sysdate()")]),t._v(" "),a("p",[t._v("sysdate() 日期时间函数跟 now() 类似，不同之处在于：now() 在执行开始时值就得到了， sysdate() 在函数执行时动态得到值。看下面的例子就明白了：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+----------+---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+----------+---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+----------+---------------------+")]),t._v("\n")])])]),a("p",[t._v("sysdate() 日期时间函数，一般情况下很少用到。")]),t._v(" "),a("h3",{attrs:{id:"mysql-获得当前时间戳函数-current-timestamp-current-timestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-获得当前时间戳函数-current-timestamp-current-timestamp"}},[t._v("#")]),t._v(" MySQL 获得当前时间戳函数：current_timestamp, current_timestamp()")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("current_timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("current_timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("current_timestamp")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("current_timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+---------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---------------------+---------------------+")]),t._v("\n")])])]),a("h2",{attrs:{id:"mysql-日期转换函数、时间转换函数-date-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-日期转换函数、时间转换函数-date-format"}},[t._v("#")]),t._v(" MySQL 日期转换函数、时间转换函数 date_format")]),t._v(" "),a("h3",{attrs:{id:"mysql-date-time-to-str-日期-时间转换为字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-date-time-to-str-日期-时间转换为字符串"}},[t._v("#")]),t._v(" MySQL Date/Time to Str（日期/时间转换为字符串）")]),t._v(" "),a("p",[t._v("函数：date_format(date,format), time_format(time,format)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 22:23:01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y-%m-%d %H:%i:%S'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 22:23:01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y%m%d%H%i%s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date_format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 22:23:01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y%m%d%H%i%s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20080808222301")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql-日期、时间转换函数-date-format-date-format-time-format-time-format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-日期、时间转换函数-date-format-date-format-time-format-time-format"}},[t._v("#")]),t._v(" MySQL 日期、时间转换函数：date_format(date,format), time_format(time,format)")]),t._v(" "),a("p",[t._v("能够把一个日期/时间转换成各种各样的字符串格式。它是 str_to_date(str,format) 函数的 一个逆转换。")]),t._v(" "),a("p",[t._v("MySQL Str to Date （字符串转换为日期）函数：str_to_date(str, format)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" str_to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'08/09/2008'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m/%d/%Y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-09")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" str_to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'08/09/08'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m/%d/%y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-09")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" str_to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'08.09.2008'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m.%d.%Y'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-09")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" str_to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'08:09:30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%h:%i:%s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 08:09:30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" str_to_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'08.09.2008 08:09:30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%m.%d.%Y %h:%i:%s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-09 08:09:30")]),t._v("\n")])])]),a("p",[t._v("可以看到，str_to_date(str,format) 转换函数，可以把一些杂乱无章的字符串转换为日期格式。另外，它也可以转换为时间。“format” 可以参看 MySQL 手册。")]),t._v(" "),a("h3",{attrs:{id:"mysql-日期、天数-转换函数-to-days-date-from-days-days"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-日期、天数-转换函数-to-days-date-from-days-days"}},[t._v("#")]),t._v(" MySQL （日期、天数）转换函数：to_days(date), from_days(days)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" to_days"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0000-00-00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" to_days"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 733627")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql-时间、秒-转换函数-time-to-sec-time-sec-to-time-seconds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-时间、秒-转换函数-time-to-sec-time-sec-to-time-seconds"}},[t._v("#")]),t._v(" MySQL （时间、秒）转换函数：time_to_sec(time), sec_to_time(seconds)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" time_to_sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01:00:05'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3605")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" sec_to_time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3605")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '01:00:05'")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql-拼凑日期、时间函数-makdedate-year-dayofyear-maketime-hour-minute-second"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-拼凑日期、时间函数-makdedate-year-dayofyear-maketime-hour-minute-second"}},[t._v("#")]),t._v(" MySQL 拼凑日期、时间函数：makdedate(year,dayofyear), maketime(hour,minute,second)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" makedate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '2001-01-31'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" makedate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '2001-02-01'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" maketime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '12:15:30'")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql-unix-时间戳、日期-转换函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-unix-时间戳、日期-转换函数"}},[t._v("#")]),t._v(" MySQL （Unix 时间戳、日期）转换函数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("unix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nunix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nfrom_unixtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nfrom_unixtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("format"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("下面是示例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" unix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1218290027")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" unix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1218124800")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" unix_timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:30:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1218169800")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" from_unixtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1218290027")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '2008-08-09 21:53:47'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" from_unixtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1218124800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '2008-08-08 00:00:00'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" from_unixtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1218169800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '2008-08-08 12:30:00'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" from_unixtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1218169800")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Y %D %M %h:%i:%s %x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- '2008 8th August 12:30:00 2008'")]),t._v("\n")])])]),a("h2",{attrs:{id:"mysql-日期时间计算函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-日期时间计算函数"}},[t._v("#")]),t._v(" MySQL 日期时间计算函数")]),t._v(" "),a("h3",{attrs:{id:"mysql-为日期增加一个时间间隔-date-add"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-为日期增加一个时间间隔-date-add"}},[t._v("#")]),t._v(" MySQL 为日期增加一个时间间隔：date_add()")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("now")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- add 1 day")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- add 1 hour")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("minute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("second")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" microsecond"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" week"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("month")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" quarter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- sub 1 day")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql-adddate-addtime-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-adddate-addtime-函数"}},[t._v("#")]),t._v(" MySQL adddate(), addtime()函数，")]),t._v(" "),a("p",[t._v("可以用 date_add() 来替代。下面是 date_add() 实现 addtime() 功能示例：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-09 12:12:33'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01:15:30'")]),t._v(" hour_second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01:15:30'")]),t._v(" hour_second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("09")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("------------------------------------------------+")]),t._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 01:15:30'")]),t._v(" day_second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("@dt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 01:15:30'")]),t._v(" day_second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2008")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("08")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-------------------------------------------------+")]),t._v("\n")])])]),a("h3",{attrs:{id:"mysql-为日期减去一个时间间隔-date-sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-为日期减去一个时间间隔-date-sub"}},[t._v("#")]),t._v(" MySQL 为日期减去一个时间间隔：date_sub()")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1998-01-01 00:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 1:1:1'")]),t._v(" day_second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" date_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1998-01-01 00:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 1:1:1'")]),t._v(" day_second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------------------------------+")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1997")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("58")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("----------------------------------------------------------------+")]),t._v("\n")])])]),a("p",[t._v("MySQL date_sub() 日期时间函数 和 date_add() 用法一致，不再赘述。")]),t._v(" "),a("h3",{attrs:{id:"mysql-日期、时间相减函数-datediff-date1-date2-timediff-time1-time2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-日期、时间相减函数-datediff-date1-date2-timediff-time1-time2"}},[t._v("#")]),t._v(" MySQL 日期、时间相减函数：datediff(date1,date2), timediff(time1,time2)")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("MySQL datediff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("date2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：两个日期相减 date1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" date2，返回天数。\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" datediff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" datediff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- -7")]),t._v("\n")])])]),a("p",[t._v("MySQL timediff(time1,time2)：两个日期相减 time1 - time2，返回 time 差值。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("select timediff('2008-08-08 08:08:08', '2008-08-08 00:00:00'); -- 08:08:08\nselect timediff('08:08:08', '00:00:00'); -- 08:08:08\n")])])]),a("p",[t._v("注意：timediff(time1,time2) 函数的两个参数类型必须相同。")]),t._v(" "),a("h3",{attrs:{id:"mysql-时间戳-timestamp-转换、增、减函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-时间戳-timestamp-转换、增、减函数"}},[t._v("#")]),t._v(" MySQL 时间戳（timestamp）转换、增、减函数：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("date")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- date to timestamp")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("time")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- dt + time")]),t._v("\ntimestampadd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("datetime_expr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--")]),t._v("\ntimestampdiff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("unit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("datetime_expr1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("datetime_expr2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--")]),t._v("\n")])])]),a("p",[t._v("请看示例部分：")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-08 00:00:00")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 08:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'01:01:01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-08 09:01:01")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 08:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10 01:01:01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-18 09:01:01")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" timestampadd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 08:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-09 08:00:00")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 08:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-09 08:00:00")]),t._v("\n\nMySQL timestampadd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 函数类似于 date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" timestampdiff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("year")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2002-05-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-01-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- -1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" timestampdiff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("day")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2002-05-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-01-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- -485")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" timestampdiff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 00:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- -12")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" datediff"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-01 00:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 7")]),t._v("\n")])])]),a("p",[t._v("MySQL timestampdiff() 函数就比 datediff() 功能强多了，datediff() 只能计算两个日期（date）之间相差的天数。")]),t._v(" "),a("h2",{attrs:{id:"mysql-时区-timezone-转换函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-时区-timezone-转换函数"}},[t._v("#")]),t._v(" MySQL 时区（timezone）转换函数")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[t._v("convert_tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("from_tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("to_tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" convert_tz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+08:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-08 04:00:00")]),t._v("\n")])])]),a("p",[t._v("时区转换也可以通过 date_add, date_sub, timestampadd 来实现。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-08 04:00:00")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" date_sub"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-08 04:00:00")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" timestampadd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("hour")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2008-08-08 12:00:00'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2008-08-08 04:00:00 ")]),t._v("\n")])])]),a("h2",{attrs:{id:"【-】-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【-】-3"}},[t._v("#")]),t._v(" 【----------------------------】")]),t._v(" "),a("h2",{attrs:{id:"mysql-数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-数据类型转换"}},[t._v("#")]),t._v(" MySQL 数据类型转换")]),t._v(" "),a("p",[t._v("Mysql中提供了两个内置函数提供我们使用分别为:CAST和CONVERT,Mysql 的CAST()和CONVERT() 函数可用来转换或者获取一个我们需要的类型。两者具体的语法如下：")]),t._v(" "),a("h3",{attrs:{id:"_1-cast-value-as-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-cast-value-as-type"}},[t._v("#")]),t._v(" (1) cast(value as type);")]),t._v(" "),a("h3",{attrs:{id:"_2-convert-value-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-convert-value-type"}},[t._v("#")]),t._v(" (2) convert(value,type);")]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("说明 value 为要转换原数据类型的值,type目的类型.但可以转换的类型是有限制的。类型可以是以下任何一个：")]),t._v(" "),a("ul",[a("li",[t._v("二进制，同带binary前缀的效果 : BINARY")]),t._v(" "),a("li",[t._v("字符型，可带参数 : CHAR()")]),t._v(" "),a("li",[t._v("日期 : DATE")]),t._v(" "),a("li",[t._v("时间: TIME")]),t._v(" "),a("li",[t._v("日期时间型 : DATETIME")]),t._v(" "),a("li",[t._v("浮点数 : DECIMAL")]),t._v(" "),a("li",[t._v("整数 : SIGNED")]),t._v(" "),a("li",[t._v("无符号整数 : UNSIGNED")])]),t._v(" "),a("p",[t._v("样例：\nselect cast(1.00 as SIGNED) from dual;\nselect convert(1.00,SIGNED) from dual;")]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("https://www.cnblogs.com/panchanggui/p/10652322.html")]),t._v(" "),a("li",[t._v("https://www.cnblogs.com/ggjucheng/p/3352280.html")]),t._v(" "),a("li",[t._v("https://www.cnblogs.com/northeastTycoon/p/5505523.html")])])])}),[],!1,null,null,null);s.default=r.exports}}]);