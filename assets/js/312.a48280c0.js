(window.webpackJsonp=window.webpackJsonp||[]).push([[312],{827:function(s,t,a){"use strict";a.r(t);var e=a(53),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("本文主要是介绍 MySQL-存储过程函数开发，包括变量、流程、条件控制等 。")])]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#mysql变量的定义和赋值"}},[s._v("MySQL变量的定义和赋值")])]),a("li",[a("a",{attrs:{href:"#_1-定义变量"}},[s._v("1. 定义变量")]),a("ul",[a("li",[a("a",{attrs:{href:"#变量定义样例"}},[s._v("变量定义样例")])])])]),a("li",[a("a",{attrs:{href:"#_2-为变量赋值"}},[s._v("2. 为变量赋值")]),a("ul",[a("li",[a("a",{attrs:{href:"#变量赋值样例"}},[s._v("变量赋值样例")])]),a("li",[a("a",{attrs:{href:"#查询结果赋值样例"}},[s._v("查询结果赋值样例")])])])]),a("li",[a("a",{attrs:{href:"#【-】"}},[s._v("【----------------------------】")])]),a("li",[a("a",{attrs:{href:"#mysql定义条件和处理程序"}},[s._v("MySQL定义条件和处理程序")])]),a("li",[a("a",{attrs:{href:"#_1-定义条件"}},[s._v("1. 定义条件")])]),a("li",[a("a",{attrs:{href:"#_2-定义处理程序"}},[s._v("2. 定义处理程序")]),a("ul",[a("li",[a("a",{attrs:{href:"#定义处理程序样例"}},[s._v("定义处理程序样例")])]),a("li",[a("a",{attrs:{href:"#条件和处理顺序样例"}},[s._v("条件和处理顺序样例")])])])]),a("li",[a("a",{attrs:{href:"#【-】"}},[s._v("【----------------------------】")])]),a("li",[a("a",{attrs:{href:"#mysql流程控制语句详解"}},[s._v("MySQL流程控制语句详解")])]),a("li",[a("a",{attrs:{href:"#_1-if语句"}},[s._v("1. IF语句")])]),a("li",[a("a",{attrs:{href:"#_2-case语句"}},[s._v("2. CASE语句")])]),a("li",[a("a",{attrs:{href:"#_3-loop-语句"}},[s._v("3. LOOP 语句")])]),a("li",[a("a",{attrs:{href:"#_4-leave-语句"}},[s._v("4. LEAVE 语句")])]),a("li",[a("a",{attrs:{href:"#_5-iterate-语句"}},[s._v("5. ITERATE 语句")])]),a("li",[a("a",{attrs:{href:"#_6-repeat-语句"}},[s._v("6. REPEAT 语句")])]),a("li",[a("a",{attrs:{href:"#_7-while-语句"}},[s._v("7. WHILE 语句")])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[s._v("参考文章")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"mysql变量的定义和赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql变量的定义和赋值"}},[s._v("#")]),s._v(" MySQL变量的定义和赋值")]),s._v(" "),a("p",[s._v("在 MySQL 中，除了支持标准的存储过程和函数外，还引入了表达式。表达式与其它高级语言的表达式一样，由变量、运算符和流程控制来构成。")]),s._v(" "),a("p",[s._v("变量是表达式语句中最基本的元素，可以用来临时存储数据。在存储过程和函数中都可以定义和使用变量。用户可以使用 DECLARE 关键字来定义变量，定义后可以为变量赋值。这些变量的作用范围是 BEGIN...END 程序段中。")]),s._v(" "),a("p",[s._v("下面将讲解如何定义变量和为变量赋值。")]),s._v(" "),a("h2",{attrs:{id:"_1-定义变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义变量"}},[s._v("#")]),s._v(" 1. 定义变量")]),s._v(" "),a("p",[s._v("MySQL 中可以使用 "),a("strong",[s._v("DECLARE")]),s._v(" 关键字来定义变量，其基本语法如下：")]),s._v(" "),a("p",[s._v("DECLARE var_name[,...] type [DEFAULT value]")]),s._v(" "),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("DECLARE 关键字是用来声明变量的；")]),s._v(" "),a("li",[s._v("var_name 参数是变量的名称，这里可以同时定义多个变量；")]),s._v(" "),a("li",[s._v("type 参数用来指定变量的类型；")]),s._v(" "),a("li",[s._v("DEFAULT value 子句将变量默认值设置为 value，没有使用 DEFAULT 子句时，默认值为 NULL。")])]),s._v(" "),a("h3",{attrs:{id:"变量定义样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量定义样例"}},[s._v("#")]),s._v(" 变量定义样例")]),s._v(" "),a("p",[s._v("下面定义变量 my_sql，数据类型为 INT 类型，默认值为 10。SQL 语句如下：")]),s._v(" "),a("p",[s._v("DECLARE my_sql INT DEFAULT 10;")]),s._v(" "),a("h2",{attrs:{id:"_2-为变量赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-为变量赋值"}},[s._v("#")]),s._v(" 2. 为变量赋值")]),s._v(" "),a("p",[s._v("MySQL 中可以使用 "),a("strong",[s._v("SET")]),s._v(" 关键字来为变量赋值，SET 语句的基本语法如下：")]),s._v(" "),a("p",[s._v("SET var_name = expr[,var_name = expr]...")]),s._v(" "),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("SET 关键字用来为变量赋值；")]),s._v(" "),a("li",[s._v("var_name 参数是变量的名称；")]),s._v(" "),a("li",[s._v("expr 参数是赋值表达式。")])]),s._v(" "),a("p",[s._v("注意：一个 SET 语句可以同时为多个变量赋值，各个变量的赋值语句之间用逗号隔开。")]),s._v(" "),a("h3",{attrs:{id:"变量赋值样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量赋值样例"}},[s._v("#")]),s._v(" 变量赋值样例")]),s._v(" "),a("p",[s._v("下面为变量 my_sql 赋值为 30。SQL 语句如下：")]),s._v(" "),a("p",[s._v("SET my_sql=30;")]),s._v(" "),a("p",[s._v("MySQL 中还可以使用 "),a("strong",[s._v("SELECT..INTO")]),s._v(" 语句为变量赋值。其基本语法如下：")]),s._v(" "),a("p",[s._v("SELECT col_name [...] INTO var_name[,...]\nFROM table_name WEHRE condition")]),s._v(" "),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("col_name 参数表示查询的字段名称；")]),s._v(" "),a("li",[s._v("var_name 参数是变量的名称；")]),s._v(" "),a("li",[s._v("table_name 参数指表的名称；")]),s._v(" "),a("li",[s._v("condition 参数指查询条件。")])]),s._v(" "),a("p",[s._v("注意：当将查询结果赋值给变量时，该查询语句的返回结果只能是单行。")]),s._v(" "),a("h3",{attrs:{id:"查询结果赋值样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询结果赋值样例"}},[s._v("#")]),s._v(" 查询结果赋值样例")]),s._v(" "),a("p",[s._v("下面从 tb_student 表中查询 id 为 2 的记录，将该记录的 id 值赋给变量 my_sql。SQL 语句如下：")]),s._v(" "),a("p",[s._v("SELECT id INTO my_sql FROM tb_student WEHRE id=2；")]),s._v(" "),a("h2",{attrs:{id:"【-】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【-】"}},[s._v("#")]),s._v(" 【----------------------------】")]),s._v(" "),a("h2",{attrs:{id:"mysql定义条件和处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql定义条件和处理程序"}},[s._v("#")]),s._v(" MySQL定义条件和处理程序")]),s._v(" "),a("p",[s._v("在程序的运行过程中可能会遇到问题，此时我们可以通过定义条件和处理程序来事先定义这些问题。")]),s._v(" "),a("p",[s._v("定义条件是指事先定义程序执行过程中遇到的问题，处理程序定义了在遇到这些问题时应当采取的处理方式和解决办法，保证存储过程和函数在遇到警告或错误时能继续执行，从而增强程序处理问题的能力，避免程序出现异常被停止执行。")]),s._v(" "),a("p",[s._v("下面将详细讲解如何定义条件和处理程序。")]),s._v(" "),a("h2",{attrs:{id:"_1-定义条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义条件"}},[s._v("#")]),s._v(" 1. 定义条件")]),s._v(" "),a("p",[s._v("MySQL 中可以使用 "),a("strong",[s._v("DECLARE")]),s._v(" 关键字来定义条件。其基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" condition_name CONDITION "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" condition_value\ncondition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),s._v(":\nSQLSTATE "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" sqlstate_value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" mysql_error_code\n")])])]),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("condition_name 参数表示条件的名称；")]),s._v(" "),a("li",[s._v("condition_value 参数表示条件的类型；")]),s._v(" "),a("li",[s._v("sqlstate_value 参数和 mysql_error_code 参数都可以表示 MySQL 的错误。sqlstate_value 表示长度为 5 的字符串类型错误代码，mysql_error_code 表示数值类型错误代码。例如 ERROR 1146(42S02) 中，sqlstate_value 值是 42S02，mysql_error_code 值是 1146。")])]),s._v(" "),a("p",[s._v("例子：")]),s._v(" "),a("p",[s._v("下面定义“ERROR 1146 (42S02)”这个错误，名称为 can_not_find。 可以用两种不同的方法来定义，代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法一：使用sqlstate_value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" can_not_find CONDITION "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" SQLSTATE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'42S02'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法二：使用 mysql_error_code")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" can_not_find CONDITION "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1146")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h2",{attrs:{id:"_2-定义处理程序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-定义处理程序"}},[s._v("#")]),s._v(" 2. 定义处理程序")]),s._v(" "),a("p",[s._v("MySQL 中可以使用 "),a("strong",[s._v("DECLARE")]),s._v(" 关键字来定义处理程序。其基本语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" handler_type "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" condition_value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" sp_statement\nhandler_type:\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONTINUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" UNDO\ncondition_value:\nSQLSTATE "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" sqlstate_value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" condition_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" SQLWARNING "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" FOUND "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" SQLEXCEPTION "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" mysql_error_code\n")])])]),a("p",[s._v("其中，handler_type 参数指明错误的处理方式，该参数有 3 个取值。这 3 个取值分别是 CONTINUE、EXIT 和 UNDO。")]),s._v(" "),a("ul",[a("li",[s._v("CONTINUE 表示遇到错误不进行处理，继续向下执行；")]),s._v(" "),a("li",[s._v("EXIT 表示遇到错误后马上退出；")]),s._v(" "),a("li",[s._v("UNDO 表示遇到错误后撤回之前的操作，MySQL 中暂时还不支持这种处理方式。")])]),s._v(" "),a("p",[s._v("注意：通常情况下，执行过程中遇到错误应该立刻停止执行下面的语句，并且撤回前面的操作。但是，MySQL 中现在还不能支持 UNDO 操作。因此，遇到错误时最好执行 EXIT 操作。如果事先能够预测错误类型，并且进行相应的处理，那么可以执行 CONTINUE 操作。")]),s._v(" "),a("p",[s._v("参数指明错误类型，该参数有 6 个取值：")]),s._v(" "),a("ul",[a("li",[s._v("sqlstate_value：包含 5 个字符的字符串错误值；")]),s._v(" "),a("li",[s._v("condition_name：表示 DECLARE 定义的错误条件名称；")]),s._v(" "),a("li",[s._v("SQLWARNING：匹配所有以 01 开头的 sqlstate_value 值；")]),s._v(" "),a("li",[s._v("NOT FOUND：匹配所有以 02 开头的 sqlstate_value 值；")]),s._v(" "),a("li",[s._v("SQLEXCEPTION：匹配所有没有被 SQLWARNING 或 NOT FOUND 捕获的 sqlstate_value 值；")]),s._v(" "),a("li",[s._v("mysql_error_code：匹配数值类型错误代码。")])]),s._v(" "),a("p",[s._v("sp_statement 参数为程序语句段，表示在遇到定义的错误时，需要执行的一些存储过程或函数。")]),s._v(" "),a("h3",{attrs:{id:"定义处理程序样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义处理程序样例"}},[s._v("#")]),s._v(" 定义处理程序样例")]),s._v(" "),a("p",[s._v("下面是定义处理程序的几种方式，代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法一：捕获 sqlstate_value")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONTINUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" SQLSTATE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'42S02'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@info")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CAN NOT FIND'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法二：捕获 mysql_error_code")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONTINUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1146")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@info")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CAN NOT FIND'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法三：先定义条件，然后调用")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" can_not_find CONDITION "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1146")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONTINUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" can_not_find "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@info")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CAN NOT FIND'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法四：使用 SQLWARNING")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" SQLWARNING "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@info")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ERROR'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法五：使用 NOT FOUND")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" FOUND "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@info")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CAN NOT FIND'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//方法六：使用 SQLEXCEPTION")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXIT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" SQLEXCEPTION "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@info")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ERROR'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("上述代码是 6 种定义处理程序的方法。")]),s._v(" "),a("ol",[a("li",[s._v("捕获 sqlstate_value 值。如果遇到 sqlstate_value 值为 42S02，执行 CONTINUE 操作，并且输出“CAN NOT FIND”信息。")]),s._v(" "),a("li",[s._v("捕获 mysql_error_code 值。如果遇到 mysql_error_code 值为 1146， 执行 CONTINUE 操作，并且输出“CAN NOT FIND”信息。")]),s._v(" "),a("li",[s._v("先定义条件，然后再调用条件。这里先定义 can_not_find 条件，遇到 1146 错误就执行 CONTINUE 操作。")]),s._v(" "),a("li",[s._v('使用 SQLWARNING。SQLWARNING 捕获所有以 01 开头的 sqlstate_value 值，然后执行 EXIT 操作，并且输出“ERROR"信息。')]),s._v(" "),a("li",[s._v("使用 NOT FOUND。NOT FOUND 捕获所有以 02 开头的 sqlstate_value 值，然后执行 EXIT 操作，并且输出“CAN NOT FIND”信息。")]),s._v(" "),a("li",[s._v("使用 SQLEXCEPTION。 SQLEXCEPTION 捕获所有没有被 SQLWARNING 或 NOT FOUND 捕获的 sqlstate_value 值，然后执行 EXIT 操作，并且输出“ERROR”信息。")])]),s._v(" "),a("h3",{attrs:{id:"条件和处理顺序样例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件和处理顺序样例"}},[s._v("#")]),s._v(" 条件和处理顺序样例")]),s._v(" "),a("p",[s._v("定义条件和处理顺序，具体的执行过程如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" t8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v(" affected "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.07")]),s._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELIMITER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PROCEDURE")]),s._v(" handlerdemo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BEGIN")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DECLARE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CONTINUE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("HANDLER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FOR")]),s._v(" SQLSTATE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'23000'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@X2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" t8 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" t8 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@X")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\nQuery OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v(" affected "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.02")]),s._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELIMITER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CALL")]),s._v(" handlerdemo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nQuery OK"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rows")]),s._v(" affected "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.01")]),s._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@X")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@X")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("row")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.00")]),s._v(" sec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("上述代码中，@X 是一个用户变量，执行结果 @X 等于 3，这表明 MySQL 执行到程序的末尾。")]),s._v(" "),a("p",[s._v("如果"),a("code",[s._v("DECLARE CONTINUE HANDLER FOR SQLSTATE '23000' SET @X2=1;")]),s._v("这一行不存在，第二个 INSERT 因 PRIMARY KEY 约束而失败之后，MySQL 可能已经采取 EXIT 策略，且 SELECT @X 可能已经返回 2。")]),s._v(" "),a("p",[s._v("注意：@X 表示用户变量，使用 SET 语句为其赋值，用户变量与连接有关，一个客户端定义的变量不能被其他客户端所使用，当客户端退出时，该客户端连接的所有变量将自动释放。")]),s._v(" "),a("h2",{attrs:{id:"【-】-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【-】-2"}},[s._v("#")]),s._v(" 【----------------------------】")]),s._v(" "),a("h2",{attrs:{id:"mysql流程控制语句详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql流程控制语句详解"}},[s._v("#")]),s._v(" MySQL流程控制语句详解")]),s._v(" "),a("p",[s._v("在存储过程和自定义函数中可以使用流程控制语句来控制程序的流程。MySQL 中流程控制语句有：IF 语句、CASE 语句、LOOP 语句、LEAVE 语句、ITERATE 语句、REPEAT 语句和 WHILE 语句等。")]),s._v(" "),a("p",[s._v("下面将详细讲解这些流程控制语句。")]),s._v(" "),a("h2",{attrs:{id:"_1-if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-if语句"}},[s._v("#")]),s._v(" 1. IF语句")]),s._v(" "),a("p",[s._v("IF 语句用来进行条件判断，根据是否满足条件（可包含多个条件），来执行不同的语句，是流程控制中最常用的判断语句。其语法的基本形式如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" search_condition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" statement_list\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSEIF")]),s._v(" search_condition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v("\n")])])]),a("p",[s._v("其中，search_condition 参数表示条件判断语句，如果返回值为 TRUE ，相应的 SQL 语句列表（statement_list）被执行；如果返回值为 FALSE，则 ELSE 子句的语句列表被执行。statement_list 可以包括一个或多个语句。")]),s._v(" "),a("p",[s._v("下面是一个使用 IF 语句的示例。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSEIF")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count3")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" lF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该示例根据 age 与 20 的大小关系来执行不同的 SET 语句。如果 age 值大于20，那么将 count1 的值加 1；如果 age 值等于 20，那么将 count2 的值加 1；其他情况将 count3 的值加 1。IF 语句都需要使用 END IF 来结束。")]),s._v(" "),a("h2",{attrs:{id:"_2-case语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-case语句"}},[s._v("#")]),s._v(" 2. CASE语句")]),s._v(" "),a("p",[s._v("CASE 语句也是用来进行条件判断的，它提供了多个条件进行选择，可以实现比 IF 语句更复杂的条件判断。CASE 语句的基本形式如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v(" case_value\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" when_value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" statement_list\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" when_value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v("\n")])])]),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("case_value 参数表示条件判断的变量，决定了哪一个 WHEN 子句会被执行；")]),s._v(" "),a("li",[s._v("when_value 参数表示变量的取值，如果某个 when_value 表达式与 case_value 变量的值相同，则执行对应的 THEN 关键字后的 statement_list 中的语句；")]),s._v(" "),a("li",[s._v("statement_list 参数表示 when_value 值没有与 case_value 相同值时的执行语句。")]),s._v(" "),a("li",[s._v("CASE 语句都要使用 END CASE 结束。")])]),s._v(" "),a("p",[s._v("CASE 语句还有另一种形式。该形式的语法如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" search_condition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" statement_list\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" search_condition "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" statement_list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v("\n")])])]),a("p",[s._v("其中，search_condition 参数表示条件判断语句；statement_list 参数表示不同条件的执行语句。")]),s._v(" "),a("p",[s._v("与上述语句不同的是，该语句中的 WHEN 语句将被逐个执行，直到某个 search_condition 表达式为真，则执行对应 THEN 关键字后面的 statement_list 语句。如果没有条件匹配，ELSE 子句里的语句被执行。")]),s._v(" "),a("blockquote",[a("p",[s._v("这里介绍的 CASE 语句与“控制流程函数”里描述的 SQL CASE 表达式的 "),a("a",{attrs:{href:"http://c.biancheng.net/mysql/case.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("CASE 语句"),a("OutboundLink")],1),s._v("有轻微的不同。这里的 CASE 语句不能有 ELSE NULL 语句，并且用 END CASE 替代 END 来终止。")])]),s._v(" "),a("p",[s._v("下面是一个使用 CASE 语句的示例。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v(" age\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("代码也可以是下面的形式：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHEN")]),s._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CASE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("本示例中，如果 age 值为 20，count1 的值加 1，否则 count2 的值加 1。")]),s._v(" "),a("h2",{attrs:{id:"_3-loop-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-loop-语句"}},[s._v("#")]),s._v(" 3. LOOP 语句")]),s._v(" "),a("p",[s._v("LOOP 语句可以使某些特定的语句重复执行。与 IF 和 CASE 语句相比，LOOP 只实现了一个简单的循环，并不进行条件判断。")]),s._v(" "),a("p",[s._v("LOOP 语句本身没有停止循环的语句，必须使用 LEAVE 语句等才能停止循环，跳出循环过程。LOOP 语句的基本形式如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("begin_label:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v("\n    statement_list\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("end_label"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),a("p",[s._v("其中，begin_label 参数和 end_label 参数分别表示循环开始和结束的标志，这两个标志必须相同，而且都可以省略；statement_list 参数表示需要循环执行的语句。")]),s._v(" "),a("p",[s._v("使用 LOOP 语句进行循环操作。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("add_num:"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v(" add_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该示例循环执行 count 加 1 的操作。因为没有跳出循环的语句，这个循环成了一个死循环。LOOP 循环都以 END LOOP 结束。")]),s._v(" "),a("h2",{attrs:{id:"_4-leave-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-leave-语句"}},[s._v("#")]),s._v(" 4. LEAVE 语句")]),s._v(" "),a("p",[s._v("LEAVE 语句主要用于跳出循环控制。其语法形式如下：")]),s._v(" "),a("p",[s._v("LEAVE label")]),s._v(" "),a("p",[s._v("其中，label 参数表示循环的标志，LEAVE 语句必须跟在循环标志前面。")]),s._v(" "),a("p",[s._v("下面是一个 LEAVE 语句的示例。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("add_num:"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEAVE")]),s._v(" add_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该示例循环执行 count 加 1 的操作。当 count 的值等于 100 时，跳出循环。")]),s._v(" "),a("h2",{attrs:{id:"_5-iterate-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-iterate-语句"}},[s._v("#")]),s._v(" 5. ITERATE 语句")]),s._v(" "),a("p",[s._v("ITERATE 是“再次循环”的意思，用来跳出本次循环，直接进入下一次循环。ITERATE 语句的基本语法形式如下：")]),s._v(" "),a("p",[s._v("ITERATE label")]),s._v(" "),a("p",[s._v("其中，label 参数表示循环的标志，ITERATE 语句必须跟在循环标志前面。")]),s._v(" "),a("p",[s._v("下面是一个 ITERATE 语句的示例。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("add_num:"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LEAVE")]),s._v(" add_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ELSE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MOD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("THEN")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ITERATE")]),s._v(" add_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LOOP")]),s._v(" add_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该示例循环执行 count 加 1 的操作，count 值为 100 时结束循环。如果 count 的值能够整除 3，则跳出本次循环，不再执行下面的 SELECT 语句。")]),s._v(" "),a("blockquote",[a("p",[s._v("说明：LEAVE 语句和 ITERATE 语句都用来跳出循环语句，但两者的功能是不一样的。LEAVE 语句是跳出整个循环，然后执行循环后面的程序。而 ITERATE 语句是跳出本次循环，然后进入下一次循环。使用这两个语句时一定要区分清楚。")])]),s._v(" "),a("h2",{attrs:{id:"_6-repeat-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-repeat-语句"}},[s._v("#")]),s._v(" 6. REPEAT 语句")]),s._v(" "),a("p",[s._v("REPEAT 语句是有条件控制的循环语句，每次语句执行完毕后，会对条件表达式进行判断，如果表达式返回值为 TRUE，则循环结束，否则重复执行循环中的语句。")]),s._v(" "),a("p",[s._v("REPEAT 语句的基本语法形式如下：")]),s._v(" "),a("p",[s._v("[begin_label:] REPEAT\nstatement_list\nUNTIL search_condition\nEND REPEAT [end_label]")]),s._v(" "),a("p",[s._v("其中：")]),s._v(" "),a("ul",[a("li",[s._v("begin_label 为 REPEAT 语句的标注名称，该参数可以省略；")]),s._v(" "),a("li",[s._v("REPEAT 语句内的语句被重复，直至 search_condition 返回值为 TRUE。")]),s._v(" "),a("li",[s._v("statement_list 参数表示循环的执行语句；")]),s._v(" "),a("li",[s._v("search_condition 参数表示结束循环的条件，满足该条件时循环结束。")]),s._v(" "),a("li",[s._v("REPEAT 循环都用 END REPEAT 结束。")])]),s._v(" "),a("p",[s._v("下面是一个使用 REPEAT 语句的示例。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPEAT")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    UNTIL "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("REPEAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该示例循环执行 count 加 1 的操作，count 值为 100 时结束循环。")]),s._v(" "),a("h2",{attrs:{id:"_7-while-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-while-语句"}},[s._v("#")]),s._v(" 7. WHILE 语句")]),s._v(" "),a("p",[s._v("WHILE 语句也是有条件控制的循环语句。WHILE 语句和 REPEAT 语句不同的是，WHILE 语句是当满足条件时，执行循环内的语句，否则退出循环。WHILE 语句的基本语法形式如下：")]),s._v(" "),a("p",[s._v("[begin_label:] WHILE search_condition DO\nstatement list\nEND WHILE [end label]")]),s._v(" "),a("p",[s._v("其中，search_condition 参数表示循环执行的条件，满足该条件时循环执行；statement_list 参数表示循环的执行语句。WHILE 循环需要使用 END WHILE 来结束。")]),s._v(" "),a("p",[s._v("下面是一个使用 WHILE 语句的示例。代码如下：")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHILE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DO")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@count")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("END")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("p",[s._v("该示例循环执行 count 加 1 的操作，count 值小于 100 时执行循环。如果 count 值等于 100 了，则跳出循环。")]),s._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("ul",[a("li",[s._v("http://c.biancheng.net/view/7840.html")]),s._v(" "),a("li",[s._v("http://c.biancheng.net/view/7849.html")]),s._v(" "),a("li",[s._v("http://c.biancheng.net/view/7853.html")]),s._v(" "),a("li",[s._v("https://blog.csdn.net/weixin_45743799/category_9547295.html")])])])}),[],!1,null,null,null);t.default=r.exports}}]);