(window.webpackJsonp=window.webpackJsonp||[]).push([[318],{833:function(e,s,t){"use strict";t.r(s);var v=t(53),a=Object(v.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("本文主要是介绍 Redis操作命令 。")])]),e._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#redis-登录"}},[e._v("Redis 登录")]),t("ul",[t("li",[t("a",{attrs:{href:"#查找redis命令的路径"}},[e._v("查找redis命令的路径")])])])]),t("li",[t("a",{attrs:{href:"#一、key-pattern-查询相应的key"}},[e._v("一、key pattern 查询相应的key")])]),t("li",[t("a",{attrs:{href:"#二、字符串类型的操作"}},[e._v("二、字符串类型的操作")])]),t("li",[t("a",{attrs:{href:"#三、链表操作"}},[e._v("三、链表操作")])]),t("li",[t("a",{attrs:{href:"#四、hashes类型及操作"}},[e._v("四、hashes类型及操作")])]),t("li",[t("a",{attrs:{href:"#五、集合结构操作"}},[e._v("五、集合结构操作")])]),t("li",[t("a",{attrs:{href:"#六、有序集合"}},[e._v("六、有序集合")])]),t("li",[t("a",{attrs:{href:"#七、服务器相关命令"}},[e._v("七、服务器相关命令")])]),t("li",[t("a",{attrs:{href:"#参考文章"}},[e._v("参考文章")])])])]),t("p"),e._v(" "),t("p",[e._v("Redis操作命令总结")]),e._v(" "),t("h2",{attrs:{id:"redis-登录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-登录"}},[e._v("#")]),e._v(" Redis 登录")]),e._v(" "),t("h3",{attrs:{id:"查找redis命令的路径"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查找redis命令的路径"}},[e._v("#")]),e._v(" 查找redis命令的路径")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("find")]),e._v(" / -name redis-cli\n")])])]),t("p",[e._v("[root@t-enter ~]# find / -name redis-cli\n/usr/local/bin/redis-cli\n/usr/local/redis-5.0.5/src/redis-cli")]),e._v(" "),t("p",[e._v("redis登录命令")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("redis-cli -p "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v(" -a root123 "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 使用密码端口登录命令")]),e._v("\nredis-cli         "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 无密码端口登录命令")]),e._v("\nredis-cli -h "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("host")]),e._v(" -p port -a password  "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在远程登录redis")]),e._v("\n")])])]),t("p",[e._v("示例")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("使用密码端口登录命令\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@localhost src"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# redis-cli -p 6379 -a root123")]),e._v("\nWarning: Using a password with "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'-a'")]),e._v(" option on the "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("command")]),e._v(" line interface may not be safe.\n"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("9")]),e._v(">")]),e._v(" \n无密码端口登录命令\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("root@t-enter ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# redis-cli")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("9")]),e._v(">")]),e._v(" \n")])])]),t("p",[e._v("远程登录redis命令")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v('#redis-cli -h 127.0.0.1 -p 6379 -a "mypassword"')]),e._v("\nredis "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1:637"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[e._v("9")]),e._v(">")]),e._v("\n")])])]),t("h2",{attrs:{id:"一、key-pattern-查询相应的key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、key-pattern-查询相应的key"}},[e._v("#")]),e._v(" 一、key pattern 查询相应的key")]),e._v(" "),t("p",[e._v("（1）redis允许模糊查询key　　有3个通配符 *、?、[]")]),e._v(" "),t("p",[e._v("（2）randomkey：返回随机key")]),e._v(" "),t("p",[e._v("（3）type key：返回key存储的类型")]),e._v(" "),t("p",[e._v("（4）exists key：判断某个key是否存在")]),e._v(" "),t("p",[e._v("（5）del key：删除key")]),e._v(" "),t("p",[e._v("（6）rename key newkey：改名")]),e._v(" "),t("p",[e._v("（7）renamenx key newkey：如果newkey不存在则修改成功")]),e._v(" "),t("p",[e._v("（8）move key 1：将key移动到1数据库")]),e._v(" "),t("p",[e._v("（9）ttl key：查询key的生命周期（秒）")]),e._v(" "),t("p",[e._v("（10）expire key 整数值：设置key的生命周期以秒为单位")]),e._v(" "),t("p",[e._v("（11）pexpire key 整数值：设置key的生命周期以毫秒为单位")]),e._v(" "),t("p",[e._v("（12）pttl key：查询key 的生命周期（毫秒）")]),e._v(" "),t("p",[e._v("（13）perisist key：把指定key设置为永久有效")]),e._v(" "),t("h2",{attrs:{id:"二、字符串类型的操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、字符串类型的操作"}},[e._v("#")]),e._v(" 二、字符串类型的操作")]),e._v(" "),t("p",[e._v("（1）set key value [ex 秒数] [px 毫秒数] [nx/xx]")]),e._v(" "),t("p",[e._v("如果ex和px同时写，则以后面的有效期为准")]),e._v(" "),t("p",[e._v("nx：如果key不存在则建立")]),e._v(" "),t("p",[e._v("xx：如果key存在则修改其值")]),e._v(" "),t("p",[e._v("（2）get key：取值")]),e._v(" "),t("p",[e._v("（3）mset key1 value1 key2 value2 一次设置多个值")]),e._v(" "),t("p",[e._v("（4）mget key1 key2 ：一次获取多个值")]),e._v(" "),t("p",[e._v("（5）setrange key offset value：把字符串的offset偏移字节改成value")]),e._v(" "),t("p",[e._v("如果偏移量 > 字符串长度，该字符自动补0x00")]),e._v(" "),t("p",[e._v("（6）append key value ：把value追加到key 的原值上")]),e._v(" "),t("p",[e._v("（7）getrange key start stop：获取字符串中[start, stop]范围的值")]),e._v(" "),t("p",[e._v("对于字符串的下标，左数从0开始，右数从-1开始")]),e._v(" "),t("p",[e._v("注意：当start>length，则返回空字符串")]),e._v(" "),t("p",[e._v("当stop>=length，则截取至字符串尾")]),e._v(" "),t("p",[e._v("如果start所处位置在stop右边，则返回空字符串")]),e._v(" "),t("p",[e._v("（8）getset key nrevalue：获取并返回旧值，在设置新值")]),e._v(" "),t("p",[e._v("（9）incr key：自增，返回新值，如果incr一个不是int的value则返回错误，incr一个不存在的key，则设置key为1")]),e._v(" "),t("p",[e._v("（10）incrby key 2：跳2自增")]),e._v(" "),t("p",[e._v("（11）incrbyfloat by 0.7： 自增浮点数")]),e._v(" "),t("p",[e._v("（12）setbit key offset value：设置offset对应二进制上的值，返回该位上的旧值")]),e._v(" "),t("p",[e._v("注意：如果offset过大，则会在中间填充0")]),e._v(" "),t("p",[e._v("offset最大到多少")]),e._v(" "),t("p",[e._v("2^32-1，即可推出最大的字符串为512M")]),e._v(" "),t("p",[e._v("（13）bitop operation destkey key1 [key2..]  对key1 key2做opecation并将结果保存在destkey上")]),e._v(" "),t("p",[e._v("opecation可以是AND OR NOT XOR")]),e._v(" "),t("p",[e._v("（14）strlen key：取指定key的value值的长度")]),e._v(" "),t("p",[e._v("（15）setex key time value：设置key对应的值value，并设置有效期为time秒")]),e._v(" "),t("h2",{attrs:{id:"三、链表操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、链表操作"}},[e._v("#")]),e._v(" 三、链表操作")]),e._v(" "),t("p",[e._v("Redis的list类型其实就是一个每个子元素都是string类型的双向链表，链表的最大长度是2^32。list既可以用做栈，也可以用做队列。")]),e._v(" "),t("p",[e._v("list的pop操作还有阻塞版本，主要是为了避免轮询")]),e._v(" "),t("p",[e._v("（1）lpush key value：把值插入到链表头部")]),e._v(" "),t("p",[e._v("（2）rpush key value：把值插入到链表尾部")]),e._v(" "),t("p",[e._v("（3）lpop key ：返回并删除链表头部元素")]),e._v(" "),t("p",[e._v("（4）rpop key： 返回并删除链表尾部元素")]),e._v(" "),t("p",[e._v("（5）lrange key start stop：返回链表中[start, stop]中的元素")]),e._v(" "),t("p",[e._v("（6）lrem key count value：从链表中删除value值，删除count的绝对值个value后结束")]),e._v(" "),t("p",[e._v("count > 0 从表头删除　　count < 0 从表尾删除　　count=0 全部删除")]),e._v(" "),t("p",[e._v("（7）ltrim key start stop：剪切key对应的链接，切[start, stop]一段并把改制重新赋给key")]),e._v(" "),t("p",[e._v("（8）lindex key index：返回index索引上的值")]),e._v(" "),t("p",[e._v("（9）llen key：计算链表的元素个数")]),e._v(" "),t("p",[e._v("（10）linsert key after|before search value：在key 链表中寻找search，并在search值之前|之后插入value")]),e._v(" "),t("p",[e._v("（11）rpoplpush source dest：把source 的末尾拿出，放到dest头部，并返回单元值")]),e._v(" "),t("p",[e._v("应用场景： task + bak 双链表完成安全队列")]),e._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:e.$withBase("/assets/img/db/redis/optcmd-1.png"),alt:"wxmp"}}),e._v(" "),t("p",[e._v("业务逻辑： rpoplpush task bak")]),e._v(" "),t("p",[e._v("接收返回值并做业务处理")]),e._v(" "),t("p",[e._v("如果成功则rpop bak清除任务，如果不成功，下次从bak表取任务")]),e._v(" "),t("p",[e._v("（12）brpop，blpop key timeout：等待弹出key的尾/头元素")]),e._v(" "),t("p",[e._v("timeout为等待超时时间，如果timeout为0则一直等待下去")]),e._v(" "),t("p",[e._v("应用场景：长轮询ajax，在线聊天时能用到")]),e._v(" "),t("h2",{attrs:{id:"四、hashes类型及操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、hashes类型及操作"}},[e._v("#")]),e._v(" 四、hashes类型及操作")]),e._v(" "),t("p",[e._v("Redis hash 是一个string类型的field和value的映射表，它的添加、删除操作都是O(1)（平均）。hash特别适用于存储对象，将一个对象存储在hash类型中会占用更少的内存，并且可以方便的存取整个对象。")]),e._v(" "),t("p",[e._v("配置： hash_max_zipmap_entries 64 #配置字段最多64个")]),e._v(" "),t("p",[e._v("hash_max_zipmap_value 512 #配置value最大为512字节")]),e._v(" "),t("p",[e._v("（1）hset myhash field value：设置myhash的field为value")]),e._v(" "),t("p",[e._v("（2）hsetnx myhash field value：不存在的情况下设置myhash的field为value")]),e._v(" "),t("p",[e._v("（3）hmset myhash field1 value1 field2 value2：同时设置多个field")]),e._v(" "),t("p",[e._v("（4）hget myhash field：获取指定的hash field")]),e._v(" "),t("p",[e._v("（5）hmget myhash field1 field2：一次获取多个field")]),e._v(" "),t("p",[e._v("（6）hincrby myhash field 5：指定的hash field加上给定的值")]),e._v(" "),t("p",[e._v("（7）hexists myhash field：测试指定的field是否存在")]),e._v(" "),t("p",[e._v("（8）hlen myhash：返回hash的field数量")]),e._v(" "),t("p",[e._v("（9）hdel myhash field：删除指定的field")]),e._v(" "),t("p",[e._v("（10）hkeys myhash：返回hash所有的field")]),e._v(" "),t("p",[e._v("（11）hvals myhash：返回hash所有的value")]),e._v(" "),t("p",[e._v("（12）hgetall myhash：获取某个hash中全部的field及value")]),e._v(" "),t("h2",{attrs:{id:"五、集合结构操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、集合结构操作"}},[e._v("#")]),e._v(" 五、集合结构操作")]),e._v(" "),t("p",[e._v("特点：无序性、确定性、唯一性")]),e._v(" "),t("p",[e._v("（1）sadd key value1 value2：往集合里面添加元素")]),e._v(" "),t("p",[e._v("（2）smembers key：获取集合所有的元素")]),e._v(" "),t("p",[e._v("（3）srem key value：删除集合某个元素")]),e._v(" "),t("p",[e._v("（4）spop key：返回并删除集合中1个随机元素（可以坐抽奖，不会重复抽到某人）")]),e._v(" "),t("p",[e._v("（5）srandmember key：随机取一个元素")]),e._v(" "),t("p",[e._v("（6）sismember key value：判断集合是否有某个值")]),e._v(" "),t("p",[e._v("（7）scard key：返回集合元素的个数")]),e._v(" "),t("p",[e._v("（8）smove source dest value：把source的value移动到dest集合中")]),e._v(" "),t("p",[e._v("（9）sinter key1 key2 key3：求key1 key2 key3的交集")]),e._v(" "),t("p",[e._v("（10）sunion key1 key2：求key1 key2 的并集")]),e._v(" "),t("p",[e._v("（11）sdiff key1 key2：求key1 key2的差集")]),e._v(" "),t("p",[e._v("（12）sinterstore res key1 key2：求key1 key2的交集并存在res里")]),e._v(" "),t("h2",{attrs:{id:"六、有序集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、有序集合"}},[e._v("#")]),e._v(" 六、有序集合")]),e._v(" "),t("p",[e._v("概念：它是在set的基础上增加了一个顺序属性，这一属性在添加修改元素的时候可以指定，每次指定后，zset会自动按新的值调整顺序。可以理解为有两列的mysql表，一列存储value，一列存储顺序，操作中key理解为zset的名字。")]),e._v(" "),t("p",[e._v("和set一样sorted，sets也是string类型元素的集合，不同的是每个元素都会关联一个double型的score。sorted set的实现是skip list和hash table的混合体。")]),e._v(" "),t("p",[e._v("当元素被添加到集合中时，一个元素到score的映射被添加到hash table中，所以给定一个元素获取score的开销是O(1)。另一个score到元素的映射被添加的skip list，并按照score排序，所以就可以有序地获取集合中的元素。添加、删除操作开销都是O(logN)和skip list的开销一致，redis的skip list 实现是双向链表，这样就可以逆序从尾部去元素。sorted set最经常使用方式应该就是作为索引来使用，我们可以把要排序的字段作为score存储，对象的ID当元素存储。")]),e._v(" "),t("p",[e._v("（1）zadd key score1 value1：添加元素")]),e._v(" "),t("p",[e._v("（2）zrange key start stop [withscore]：把集合排序后,返回名次[start,stop]的元素 默认是升续排列 withscores 是把score也打印出来")]),e._v(" "),t("p",[e._v("（3）zrank key member：查询member的排名（升序0名开始）")]),e._v(" "),t("p",[e._v("（4）zrangebyscore key min max [withscores] limit offset N：集合（升序）排序后取score在[min, max]内的元素，并跳过offset个，取出N个")]),e._v(" "),t("p",[e._v("（5）zrevrank key member：查询member排名（降序 0名开始）")]),e._v(" "),t("p",[e._v("（6）zremrangebyscore key min max：按照score来删除元素，删除score在[min, max]之间")]),e._v(" "),t("p",[e._v("（7）zrem key value1 value2：删除集合中的元素")]),e._v(" "),t("p",[e._v("（8）zremrangebyrank key start end：按排名删除元素，删除名次在[start, end]之间的")]),e._v(" "),t("p",[e._v("（9）zcard key：返回集合元素的个数")]),e._v(" "),t("p",[e._v("（10）zcount key min max：返回[min, max]区间内元素数量")]),e._v(" "),t("p",[e._v("（11）zinterstore dest numkeys key1[key2..] [WEIGHTS weight1 [weight2...]] [AGGREGATE SUM|MIN|MAX]")]),e._v(" "),t("p",[e._v("求key1，key2的交集，key1，key2的权值分别是weight1，weight2")]),e._v(" "),t("p",[e._v("聚合方法用 sum|min|max")]),e._v(" "),t("p",[e._v("聚合结果 保存子dest集合内")]),e._v(" "),t("p",[e._v("注意：weights,aggregate如何理解？")]),e._v(" "),t("p",[e._v("答：如果有交集，交集元素又有score，score怎么处理？aggregate num->score相加，min最小score，max最大score，另外可以通过weights设置不同的key的权重，交集时 score*weight")]),e._v(" "),t("h2",{attrs:{id:"七、服务器相关命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七、服务器相关命令"}},[e._v("#")]),e._v(" 七、服务器相关命令")]),e._v(" "),t("p",[e._v("（1）ping：测定连接是否存活")]),e._v(" "),t("p",[e._v("（2）echo：在命令行打印一些内容")]),e._v(" "),t("p",[e._v("（3）select：选择数据库")]),e._v(" "),t("p",[e._v("（4）quit：退出连接")]),e._v(" "),t("p",[e._v("（5）dbsize：返回当前数据库中key的数目")]),e._v(" "),t("p",[e._v("（6）info：获取服务器的信息和统计")]),e._v(" "),t("p",[e._v("（7）monitor：实时转储收到的请求")]),e._v(" "),t("p",[e._v("（8）config get 配置项：获取服务器配置的信息")]),e._v(" "),t("p",[e._v("config set 配置项 值：设置配置项信息")]),e._v(" "),t("p",[e._v("（9）flushdb：删除当前选择数据库中所有的key")]),e._v(" "),t("p",[e._v("（10）flushall：删除所有数据库中的所有的key")]),e._v(" "),t("p",[e._v("（11）time：显示服务器时间，时间戳（秒），微秒数")]),e._v(" "),t("p",[e._v("（12）bgrewriteaof：后台保存rdb快照")]),e._v(" "),t("p",[e._v("（13）bgsave：后台保存rdb快照")]),e._v(" "),t("p",[e._v("（14）save：保存rdb快照")]),e._v(" "),t("p",[e._v("（15）lastsave：上次保存时间")]),e._v(" "),t("p",[e._v("（16）shutdown [save/nosave]")]),e._v(" "),t("p",[e._v("注意：如果不小心运行了flushall，立即shutdown nosave，关闭服务器，然后手工编辑aof文件，去掉文件中的flushall相关行，然后开启服务器，就可以倒回原来是数据。如果flushall之后，系统恰好bgwriteaof了，那么aof就清空了，数据丢失。")]),e._v(" "),t("p",[e._v("（17）showlog：显示慢查询")]),e._v(" "),t("p",[e._v("问：多慢才叫慢？")]),e._v(" "),t("p",[e._v("答：由slowlog-log-slower-than 10000，来指定（单位为微秒）")]),e._v(" "),t("p",[e._v("问：服务器存储多少条慢查询记录")]),e._v(" "),t("p",[e._v("答：由slowlog-max-len 128，来做限制")]),e._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[e._v("#")]),e._v(" 参考文章")]),e._v(" "),t("ul",[t("li",[e._v("https://www.cnblogs.com/quanyao/p/13709490.html")]),e._v(" "),t("li",[e._v("https://www.cnblogs.com/anyefrozen/p/11276429.html")])])])}),[],!1,null,null,null);s.default=a.exports}}]);