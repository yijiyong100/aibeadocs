(window.webpackJsonp=window.webpackJsonp||[]).push([[461],{976:function(t,s,a){"use strict";a.r(s);var n=a(53),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("本文主要是介绍 HDFS-精华知识总结 。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#hdfs详细介绍"}},[t._v("HDFS详细介绍")])]),a("li",[a("a",{attrs:{href:"#_1-hdfs前言"}},[t._v("1. HDFS前言")])]),a("li",[a("a",{attrs:{href:"#_2-hdfs的概念和特性"}},[t._v("2.HDFS的概念和特性")]),a("ul",[a("li",[a("a",{attrs:{href:"#重要特性如下"}},[t._v("重要特性如下:")])])])]),a("li",[a("a",{attrs:{href:"#_3-hdfs的shell-命令行客户端-操作"}},[t._v("3.HDFS的shell(命令行客户端)操作")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1命令行客户端支持的命令参数"}},[t._v("3.1命令行客户端支持的命令参数")])])])]),a("li",[a("a",{attrs:{href:"#hdfs原理篇"}},[t._v("HDFS原理篇")])]),a("li",[a("a",{attrs:{href:"#_4-hdfs的工作机制"}},[t._v("4.hdfs的工作机制")]),a("ul",[a("li",[a("a",{attrs:{href:"#_4-1概述"}},[t._v("4.1概述")])]),a("li",[a("a",{attrs:{href:"#_4-2-hdfs写数据流程"}},[t._v("4.2 HDFS写数据流程")])]),a("li",[a("a",{attrs:{href:"#_4-2-3详细步骤-重要"}},[t._v("4.2.3详细步骤(重要)")])])])]),a("li",[a("a",{attrs:{href:"#_4-3-hdfs读数据流程"}},[t._v("4.3. HDFS读数据流程")]),a("ul",[a("li",[a("a",{attrs:{href:"#_4-3-1概述"}},[t._v("4.3.1概述")])]),a("li",[a("a",{attrs:{href:"#_4-3-2详细步骤解析"}},[t._v("4.3.2详细步骤解析")])])])]),a("li",[a("a",{attrs:{href:"#_5-namenode工作机制"}},[t._v("5. NAMENODE工作机制")]),a("ul",[a("li",[a("a",{attrs:{href:"#问题场景"}},[t._v("问题场景:")])]),a("li",[a("a",{attrs:{href:"#_5-1-namenode职责"}},[t._v("5.1 NAMENODE职责")])]),a("li",[a("a",{attrs:{href:"#_5-2-元数据管理"}},[t._v("5.2 元数据管理")])])])]),a("li",[a("a",{attrs:{href:"#_6、datanode的工作机制"}},[t._v("6、DATANODE的工作机制")]),a("ul",[a("li",[a("a",{attrs:{href:"#_6-1-概述"}},[t._v("6.1 概述")])])])]),a("li",[a("a",{attrs:{href:"#_7-javaapi操作hdfs"}},[t._v("7.javaAPI操作HDFS")])]),a("li",[a("a",{attrs:{href:"#_7-1、环境准备"}},[t._v("7.1、环境准备")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1、导入依赖"}},[t._v("1、导入依赖")])]),a("li",[a("a",{attrs:{href:"#_7-2、创建配置实例"}},[t._v("7.2、创建配置实例")])]),a("li",[a("a",{attrs:{href:"#_7-3-hdfs客户端操作数据代码示例"}},[t._v("7.3 HDFS客户端操作数据代码示例:")])]),a("li",[a("a",{attrs:{href:"#_7-4-2-通过流的方式访问hdfs"}},[t._v("7.4.2 通过流的方式访问hdfs")])])])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"hdfs详细介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hdfs详细介绍"}},[t._v("#")]),t._v(" HDFS详细介绍")]),t._v(" "),a("blockquote",[a("p",[t._v('之前有人问我，"我放了一个***.avi在linux服务器上，你肯定找不到嘻嘻"。登上去发现etc文件夹大了好几个G。。。。')])]),t._v(" "),a("p",[t._v("你4不4撒，你为什么不把avi切成多块，放到不同服务器上，这谁能发现呢？？")]),t._v(" "),a("h2",{attrs:{id:"_1-hdfs前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-hdfs前言"}},[t._v("#")]),t._v(" 1. HDFS前言")]),t._v(" "),a("p",[t._v("上面开个玩笑，hdfs实际上不是让我们当作网盘来使用的。")]),t._v(" "),a("p",[t._v("● 设计思想")]),t._v(" "),a("p",[t._v("○ 分而治之:将大文件、大批量文件，分布式存放在大量服务器上，以便于采取分而治之的方式对海量数据进行运算分析。")]),t._v(" "),a("p",[t._v("● 在大数据系统中作用:")]),t._v(" "),a("p",[t._v("○ 为各类分布式运算框架(如:mapreduce,spark,tez,....)提供数据存储服务")]),t._v(" "),a("p",[t._v("● 重点概念:文件切块，副本存放，元数据")]),t._v(" "),a("h2",{attrs:{id:"_2-hdfs的概念和特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-hdfs的概念和特性"}},[t._v("#")]),t._v(" 2.HDFS的概念和特性")]),t._v(" "),a("p",[t._v("首先，它是一个文件系统，用于存储文件，通过统一的命名空间--目录树来定位文件\n其次，它是分布式的，由很多服务器联合起来实现其功能，集群中的服务器有各自的角色；")]),t._v(" "),a("h3",{attrs:{id:"重要特性如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重要特性如下"}},[t._v("#")]),t._v(" 重要特性如下:")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("HDFS中的文件在物理上是分块存储(block)，块的大小可以通过配置参数(dfs.blocksize)来规定，默认大小在hadoop2.x版本中是128M，老版本中是64M")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("HDFS文件系统会给客户端提供一个统一的抽象目录树，客户端通过路径来访问文件，形如:hdfs://namenode:port/dir-a/dir-b/file.data")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("目录结构及文件分块信息(元数据)的管理由namenode节点承担-------namenode是HDFS集群主节点，负责维护整个hdfs文件系统的目录树，以及每一个路径(文件)所对应的block块信息(block的id。及所在的datanode服务器)")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("文件的各个block的存储管理由datanode节点承担-----------namenode是HDFS集群从节点，每一个block都可以在多个dataname上存储多个副本(副本数量也可以通过参数设置dfs.replication)")])])]),t._v(" "),a("li",[a("p",[t._v("5.HDFS是设计成适应一次写入，多次读出的场景，且不支持文件的修改\n（注：适合用来做数据分析，并不适合用来做网盘应用，因为，不便修改，延迟大，网络开销大，成本太高）")])])]),t._v(" "),a("h2",{attrs:{id:"_3-hdfs的shell-命令行客户端-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-hdfs的shell-命令行客户端-操作"}},[t._v("#")]),t._v(" 3.HDFS的shell(命令行客户端)操作")]),t._v(" "),a("blockquote",[a("p",[t._v("对于HDFS的shell操作可以说懂linux基本操作的都能玩两下，无非是在前面加上(hadoop fs -)，后面加上操作的文件或目录")])]),t._v(" "),a("h3",{attrs:{id:"_3-1命令行客户端支持的命令参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1命令行客户端支持的命令参数"}},[t._v("#")]),t._v(" 3.1命令行客户端支持的命令参数")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("\n- "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("\n\n功能:输出这个命令参数手册\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\n\n功能:显示目录信息\n示例: hadoop fs -ls hdfs://hadoop-server01:9000/\n备注:这些参数中，所有的hdfs路径都可以简写\n--"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("hadoop fs -ls / 等同于上一条命令的效果\n\n- moveFromLocal\n\n功能:从本地剪切到hdfs\n\n示例: hadoop fs -moveFromLocal /home/hadoop/a.txt /aaa/bbb/cc/dd\n\n- moveToLocal\n\n功能:从hdfs剪切粘贴到本地\n\n示例:hadoop fs -moveToLocal /aaa/bbb/ccc/dd/b.txt /home/hadoop/a.txt\n\n- appendToFile\n\n功能:追加一个文件到已经存在的文件末尾\n\n示例: hadoop fs -appendToFile ./hello.txt /hello.txt\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v("\n\n功能:显示文件内容\n示例:hadoop fs -cat /hello.txt\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tail")]),t._v("\n\n功能:显示一个文件的末尾\n示例:hadoop fs -tail /weblog/access_log.1\n\n- text\n\n功能:以字符形式打印一个文件的内容\n示例:hadoop fs -text /weblog/access_log.1\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chgrp")]),t._v("\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),t._v("\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v("\n\n功能:linux文件系统中的用法一样，操作文件的所属权限\n示例:hadoop fs -chmod "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("666")]),t._v(" /hello.txt\nhadoop fs -chown someuser:somegrp /hello.txt\n\n- copyFromLocal\n\n功能:从本地复制文件到hdfs路径去\n示例:hadoop fs -copyFromLocal ./jdk.tar.gz /aaa/\n\n- copyToLocal\n\n功能:从hdfs拷贝到本地\n示例: hadoop fs -coptToLocal /aaa/jdk.tar.gz\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v("\n\n功能:从hdfs的一个路径拷贝hdfs的另一个路径\n示例:hadoop fs -cp /aaa/jdk.tar.gz /bbb/jdk.tar.gz.2\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v("\n\n功能:在hdfs目录中移动文件\n示例:hadoop fs -mv /aaa/jdk.tar.gz /\n\n- get\n\n功能:等同于copyToLocal，就是从hdfs下载文件到本地\n示例:hadoop fs -get /aaa/jdk.tar.gz\n\n- getmerge\n\n功能:合并下载多个文件\n示例:比如hdfs的目录/aaa/下有多个文件:log.1,log.2,log.3,"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n\nhadoop fs -getmerge /aaa/log.* ./log.sum\n\n- put\n\n功能:等同于copyFromLocal\n示例:hadoop fs -put /aaa/jdk.tar.gz /bbb/jdk.tar.gz.2\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v("\n\n功能:删除文件或文件夹\n示例:hadoop fs -rm -r /aaa/bbb/\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rmdir")]),t._v("\n\n功能:删除空目录\n示例:hadoop fs -rmdir /aaa/bbb/ccc\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("df")]),t._v("\n\n功能:统计文件系统的可用空间信息\n示例:hadoop fs -df -h /\n\n- "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("du")]),t._v("\n\n功能:统计文件夹的大小信息\n示例:hadoop fs -du -s -h /aaa/*\n\n- count\n\n功能:统计一个指定目录下的文件节点数量\n示例:hadoop fs -count /aaa/\n\n- setrep\n\n功能:设置hdfs中文件的副本数量\n示例:hadoop fs -setrep "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" /aaa/jdk.tar.gz\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("这里设置的副本数只是记录在namenode的元数据中，是否真的会有这么多副本，还得看datanode的数量"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n- 查看hdfs状态\n\nhdfs dfsadmin -report\n\n")])])]),a("h2",{attrs:{id:"hdfs原理篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hdfs原理篇"}},[t._v("#")]),t._v(" HDFS原理篇")]),t._v(" "),a("h2",{attrs:{id:"_4-hdfs的工作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-hdfs的工作机制"}},[t._v("#")]),t._v(" 4.hdfs的工作机制")]),t._v(" "),a("blockquote",[a("p",[t._v("(工作机制的学习主要是为加深对分布式系统的理解，以及增强遇到各种问题时的分析解决能力，形成一定的集群运维能力)\n注:很多不是真正理解hadoop技术体系的人会常常觉得HDFS可用于网盘类应用，但实际并非如此。要想将技术准确用在恰当的地方，必须对技术有深刻的理解。")])]),t._v(" "),a("h3",{attrs:{id:"_4-1概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1概述"}},[t._v("#")]),t._v(" 4.1概述")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("HDFS集群分为两大角色:NameNode、DataNode")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("NameNode负责管理整个文件系统的元数据")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("DataNode负责管理用户的文件数据块")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("文件会按照固定的大小(blocksize)切成若干块后分布式存储在若干台datanode上")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("每一个文件块可以有多个副本，并存放在不同的datanode上")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"6"}},[a("li",[t._v("DataNode会==定期==向NameNode汇报自身所保存的文件block信息，而namenode则会负责保持文件的副本数量")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"7"}},[a("li",[t._v("HDFS的内部工作机制对客户端保持透明，==客户端请求访问HDFS都是通过向namenode申请来进行==")])])])]),t._v(" "),a("h3",{attrs:{id:"_4-2-hdfs写数据流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-hdfs写数据流程"}},[t._v("#")]),t._v(" 4.2 HDFS写数据流程")]),t._v(" "),a("p",[t._v("4.2.1客户端要向HDFS写数据，首先要跟namenode通信以确认可以写文件并获得接收文件block的datanode，然后客户端按顺序将文件逐个block传递给相应datanode，==并由接收到block的datanode负责向其他datanode复制block的副本。==")]),t._v(" "),a("p",[t._v("这里说明文件的切割是在客户端实现的，而不是NameNode。文件的传输也是由客户端传到指定datanode上，副本由datanode传给其他datanode。")]),t._v(" "),a("h3",{attrs:{id:"_4-2-3详细步骤-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-3详细步骤-重要"}},[t._v("#")]),t._v(" 4.2.3详细步骤(重要)")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("跟namenode通信请求上传文件，==namenode检查目前文件是否已存在，父目录是否存在==")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("namenode返回是否可以上传")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("client请求第一个block该传输到哪些datanode服务器上(副本)")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("namenode返回3个datanode服务器ABC(假如副 本数为3。优先找同机架的，其次不同机架，再其次是同机架的再一台机器。还会根据服务器的容量，)")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("client请求3台datanode中的一台A上传数据==(本质上是一个RPC调用，建立pipeline)==，A收到请求会继续调用B，然后B调用C，将整个pipeline建立完成，逐级返回客户端")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"6"}},[a("li",[t._v("client开始往A上传第一个block(先从磁盘读取数据放到一个本地内存缓存)，以packet为单位，A收到一个packet就会传给B，B传给C；A每传一个packet会放入一个应答队列等待应答。")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"7"}},[a("li",[t._v("当一个block传输完成之后，client再次请求namenode上传第二个block的服务器。")])])])]),t._v(" "),a("h2",{attrs:{id:"_4-3-hdfs读数据流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-hdfs读数据流程"}},[t._v("#")]),t._v(" 4.3. HDFS读数据流程")]),t._v(" "),a("h3",{attrs:{id:"_4-3-1概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1概述"}},[t._v("#")]),t._v(" 4.3.1概述")]),t._v(" "),a("p",[t._v("客户端将要读取的文件路径发给namenode，namenode获取文件的元信息(主要是block的存放位置信息)返回给客户端，客户端根据返回的信息找到相应datanode逐个获取文件的block并在==客户端进行数据追加合并从而获得整个文件。==")]),t._v(" "),a("h3",{attrs:{id:"_4-3-2详细步骤解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2详细步骤解析"}},[t._v("#")]),t._v(" 4.3.2详细步骤解析")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("跟namenode通信查询元数据，找到文件块所在的datanoede服务器")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("挑选一台datanode(就近原则，然后随机)服务器，请求建立socket流")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("datanode开始发送数据(从磁盘里面读取数据放入流，以packet为单位来做校验)")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("客户端以packet为单位接收，先在本地缓存，然后写入目标文件")])])])]),t._v(" "),a("h2",{attrs:{id:"_5-namenode工作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-namenode工作机制"}},[t._v("#")]),t._v(" 5. NAMENODE工作机制")]),t._v(" "),a("p",[t._v('学习目标:理解namenode的工作机制尤其是元数据管理机制，以增强对HDFS工作原理的理解，及培养hadoop集群运营中"性能调优"、"namenode"故障问题的分析解决能力')]),t._v(" "),a("h3",{attrs:{id:"问题场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题场景"}},[t._v("#")]),t._v(" 问题场景:")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("集群启动后，可以查看文件，但是上传文件时报错，打开web可看到namenode正处于safemode状态，怎么处理?")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("Namenode服务器的磁盘故障导致namenode宕机，如何挽救集群及数据？")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("Namenode是否可以有多个？namenode内存要配置多大？namenode跟集群数据存储能力有关系吗？")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("文件的blocksize究竟调大好还是调小好？")])])])]),t._v(" "),a("p",[t._v("。。。。。。。\n诸如此类问题的回答，都需要基于对namenode自身的工作原理的深刻理解。")]),t._v(" "),a("h3",{attrs:{id:"_5-1-namenode职责"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-namenode职责"}},[t._v("#")]),t._v(" 5.1 NAMENODE职责")]),t._v(" "),a("p",[t._v("NAMENODE职责:")]),t._v(" "),a("ul",[a("li",[t._v("负责客户端请求的响应")]),t._v(" "),a("li",[t._v("元数据的管理(查询、修改)")])]),t._v(" "),a("h3",{attrs:{id:"_5-2-元数据管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-元数据管理"}},[t._v("#")]),t._v(" 5.2 元数据管理")]),t._v(" "),a("p",[t._v("namenode对数据的管理采用了三种存储形式:")]),t._v(" "),a("ul",[a("li",[t._v("内存元数据(NameSystem)")]),t._v(" "),a("li",[t._v("磁盘元数据镜像文件(fsimage)")]),t._v(" "),a("li",[t._v("数据操作日志文件(edits.xml)可通过日志运算出元数据")])]),t._v(" "),a("h4",{attrs:{id:"_5-2-1元数据存储机制-重要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1元数据存储机制-重要"}},[t._v("#")]),t._v(" 5.2.1元数据存储机制(重要)")]),t._v(" "),a("div",{staticClass:"language-gcode extra-class"},[a("pre",{pre:!0,attrs:{class:"language-gcode"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("A")]),t._v("、内存中有一份完整的元数据"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("(内存meta data)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("B")]),t._v("、磁盘有一个"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"准完整"')]),t._v("的元数据镜像"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("(fsimage)")]),t._v("文件"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("(在namenode的工作目录中)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("C")]),t._v("、用于衔接内存metadata和持久化元数据镜像fsimage之间的操作日志"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("(edits文件)")]),t._v("\n")])])]),a("p",[t._v("==注:当客户端对hdfs中的文件进行新增或者修改操作，操作记录首先被记入edits日志文件中，当客户端操作完成后，相应的元数据会更新到内存meta.data中。==")]),t._v(" "),a("h4",{attrs:{id:"_5-2-2-元数据手动查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-元数据手动查看"}},[t._v("#")]),t._v(" 5.2.2 元数据手动查看")]),t._v(" "),a("p",[t._v("可通过hdfs的一个工具来查看edits中的信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("hdfs oev -i edits -o edits.xml\nhdfs oiv -i fsimage_0000000087 -p XML -o fsimage.xml\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("inputfile: 要查看的fsimage文件\noutputfile: 用于保存格式化之后的文件\nprocess: 使用什么进程解码，XML"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("Web"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])]),a("h4",{attrs:{id:"_5-2-3-元数据的checkpoint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-元数据的checkpoint"}},[t._v("#")]),t._v(" 5.2.3 元数据的checkpoint")]),t._v(" "),a("p",[t._v("每隔一段时间(30分钟)，会由secondary namenode将namenode上积累的所有edits(edits文件会立即滚动一次，以便checkpoint的是最新的操作)和一个最新的fsimage下载到本地(一般只在第一次checkpoint时下载，后面checkpont，secondary namenode中已经有最新的fsimage)，并加载到内存进行merge，然后dump成新的image文件，上传给namenode，然后在namenode重命名为fsimage(这个过程称为checkpoint)")]),t._v(" "),a("h4",{attrs:{id:"详细过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#详细过程"}},[t._v("#")]),t._v(" 详细过程:")]),t._v(" "),a("p",[t._v("checkpoint操作的触发条件配置参数")]),t._v(" "),a("div",{staticClass:"language-ini extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ini"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dfs.namenode.checkpoint.check.period")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("60 #每60秒检查，是否需要checkpoint")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dfs.namenode.checkpoint.dir")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("file://${hadoop.tmp.dir}/dfs/namesecondary")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以上两个参数做checkpoint操作时，secondary namenode的本地工作目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dfs.namenode.checkpoint.edits.dir")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("${dfs.namenode.checkpoint.dir}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dfs.namenode.checkpoint.max-retries")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3 #最大重试次数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dfs.namenode.checkpoint.period")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("3600 #两次checkpoint之间的时间间隔3600秒")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("dfs.namenode.checkpoint.txns")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1000000 #两次checkpoint之间最大的操作记录")]),t._v("\n")])])]),a("h5",{attrs:{id:"checkpoint的附带作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#checkpoint的附带作用"}},[t._v("#")]),t._v(" checkpoint的附带作用")]),t._v(" "),a("p",[t._v("namenode和secondary namenode的工作目录存储结构完全相同，所以，==当namenode故障退出需要重新恢复时，可以从secondary namenode的工作目录将fsimage拷贝到namenode的工作目录，以恢复namenode的元数据(namenode启动时会加载fsimage)。==")]),t._v(" "),a("h4",{attrs:{id:"_5-2-4-元数据目录说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-4-元数据目录说明"}},[t._v("#")]),t._v(" 5.2.4 元数据目录说明")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("在第一次部署好Hadoop集群的时候，我们需要在NameNode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("节点上格式化磁盘:\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("hdfs namenode -format"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n格式化完成之后，将会在"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$dfs")]),t._v(".name.dir/current目录下如下的文件结构\n    current/\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- VERSION\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- edits_*\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- fsimage_00000000008547077\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("-- fsimage_00000000008547077.md5\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" -- seen_txid\n")])])]),a("p",[t._v("其中的dfs.namenode.dir是在hdfs-site.xml文件中配置的，默认值如下:")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dfs.name.dir"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("file://${hadoop.tmp.dir}/dfs/name"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("hadoop.tmp.dir是在core-site.xml中配置的，默认值如下")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hadoop.tmp.dir"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/tmp/hadoop-${user.name}"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("A base for other temporary directories."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("dfs.namenode.name.dir属性可以配置多个目录，如/data1/dfs/name,/data2/dfs/name,/data3/dfs/name,....。各个目录存储的文件结构和内容都完全一样，相当于备份，这样做的好处是当其中一个目录损坏了，也不会影响到Hadoop的元数据，特别是当其中一个目录是NFS(网络文件系统 Network File System,NFS) 之上，即时你这台机器损坏了，元数据也得到保存。")])]),t._v(" "),a("h4",{attrs:{id:"下面对-dfs-namenode-name-dir-current-目录下的文件进行解释。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#下面对-dfs-namenode-name-dir-current-目录下的文件进行解释。"}},[t._v("#")]),t._v(" 下面对$dfs.namenode.name.dir/current/目录下的文件进行解释。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、VERSION文件是Java属性文件，内容大致如下:\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Fri Nov 15 19:47:46 CST 2013namespaceID=934548976clusterID=CID-cdff7d73-93cd-4783-9399-0a22e6dce196cTime=0storageType=NAME_NODEblockpoolID=BP-893790215-192.168.24.72-1383809616115layoutVersion=-47")]),t._v("\n")])])]),a("p",[t._v("其中")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、namespaceID是文件系统的唯一标识符，"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("在文件系统首次格式化之后生成的；"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、storageType说明这个文件存储的是什么进程的数据结构信息"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如果是DataNode，storageType"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DATA_NODE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("；\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、cTime表示NameNode存储的创建时间，由于我的NameNode没有更新过，所以这里的记录值为0，以后对NameNode升级之后，cTime将会记录更新时间戳；\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、layoutVersion表示HDFS永久性数据结构的版本信息，只要数据结构变更，版本号也要递减，此时的HDFS也需要升级，否则磁盘仍旧是使用旧版本的数据结构，这会导致新版本的NameNode无法使用\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、clusterID是系统生成或手动指定的集群ID，在-clusterid选项中可以使用它:如下说明\n   \n a、使用如下命令格式化一个Namenode:\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HADOOP_HOME")]),t._v("/bin/hdfs namenode -format "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-clusterid "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cluster_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        \n        选择一个唯一的cluster_id，并且这个cluster_id不能与环境中其他集群有冲突。如果没有提供cluster_id，则会自动生成一个唯一的ClusterID。\n\n        b、使用如下命令格式化其他Namenode：\n\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HADOOP_HOME")]),t._v("/bin/hdfs -format -clusterId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cluster_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n        c、升级集群至最新版本。在升级过程中需要提供一个ClusterID，例如:\n\n        "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HADOOP_PREFIX_HOME")]),t._v("/bin/hdfs start namenode --config "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HADOOP_CONF_DIR")]),t._v(" -upgrade -clusterId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cluster_ID"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        如果没有提供ClusterID，则会自动生成一个ClusterID。\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("、blockpoolID:是针对每一个Namespace所对应的blockpool的ID，上面的这个BP-893790215-192.168.24.72-1383809616115就是在我的server1的namespace下的存储块池的ID，"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("这个ID包括了其对应的NameNode节点的ip地址。"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n")])])]),a("p",[t._v("2、$dfs.namenode.name.dir/current/seen_txid非常重要，是存放transactionId的文件，format之后是0，==它代表的是namenode里面的edits_*文件的尾数==，==namenode重启的时候，会按照seen_txid的数字，循序从头跑edits_00000001~到seen_txid的数字。所以当你的hdfs发生异常重启的时候，一定要比对seen_txid内的数字是不是你edits最后的尾数，不然会发生建立namenode时metaData的资料有缺少，导致误删Datanode上多余Block的资讯。==")]),t._v(" "),a("p",[t._v("3、$dfs.namenode.name.dir/current目录下在format的同时也会生成fsimage和edits文件，及其对应的md5校验文件。")]),t._v(" "),a("p",[t._v("补充:seen_txid\n文件中记录的是edits滚动的序号，每次重启namenode时，namenode就知道要将哪些edits进行加载。")]),t._v(" "),a("h2",{attrs:{id:"_6、datanode的工作机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、datanode的工作机制"}},[t._v("#")]),t._v(" 6、DATANODE的工作机制")]),t._v(" "),a("p",[t._v("问题场景:")]),t._v(" "),a("ul",[a("li",[t._v("1、集群容量不够，怎么扩容？")]),t._v(" "),a("li",[t._v("2、如果有一些datanode宕机，该怎么办？")]),t._v(" "),a("li",[t._v("3、datanode明明已启动，但是集群中的可用datanode列表中就是没有，怎么办？")])]),t._v(" "),a("p",[t._v("以上这类问题的解答，有赖于对datanode工作机制的深刻理解。")]),t._v(" "),a("h3",{attrs:{id:"_6-1-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-概述"}},[t._v("#")]),t._v(" 6.1 概述")]),t._v(" "),a("h4",{attrs:{id:"_1、datanode工作职责"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、datanode工作职责"}},[t._v("#")]),t._v(" 1、Datanode工作职责:")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v("存储管理用户的文件块数据\n\n定期向namenode汇报自身所持有的block信息(通过心跳信息上报)\n\n(这点很重要，因为当集群发生某些block副本失效时，集群如何恢复block初始副本数量的问题)\n\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dfs.blockreport.intervalMsec"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3600000"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Determines blockreporting interval in milliseconds."),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h4",{attrs:{id:"_2、datanode掉线判断时限参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、datanode掉线判断时限参数"}},[t._v("#")]),t._v(" 2、Datanode掉线判断时限参数")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v("\ndatanode进程死亡或者网络故障造成datanode无法与namenode通信，==namenode不会立即把该节点判定为死亡，要经过一段时间，这段时间暂称作超时时长。HDFS默认的超时时长为10分钟+30秒==。如果定义超时时间为timeout，则超时时长的计算公式为:\n\n==timeout  = 2 * heartbeat.recheck.interval + 10 * dfs.heartbeat.interval。==\n\n而默认的heartbeat.recheck.interval大小为5分钟，dfs.heartbeat.interval默认为3秒总共为10分钟+30秒\n\n需要注意的是hdfs-site.xml配置文件的heart.recheck.interval的单位为毫秒，dfs.heartbeat.interval的单位为秒。所以举个例子，如果heartbeat.recheck.interval设置为5000(毫秒)，dfs.heartbeat.interval设置为3(秒，默认)，则总的超时时间为40秒。\n    $hadoop.temp.dir/dfs/data/current/BP-193442119-192.168.2.120-1432457733977/current/finalized\n\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("heartbeat.recheck.interval"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5000"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("dfs.heartbeat.interval"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("3"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h4",{attrs:{id:"_6-2-观察验证datanode功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-观察验证datanode功能"}},[t._v("#")]),t._v(" 6.2 观察验证DATANODE功能")]),t._v(" "),a("p",[t._v("上传一个文件，观察文件的block具体的物理存放情况:\n在每一台datanode机器上的这个目录能找到文件的切块:")]),t._v(" "),a("h2",{attrs:{id:"_7-javaapi操作hdfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-javaapi操作hdfs"}},[t._v("#")]),t._v(" 7.javaAPI操作HDFS")]),t._v(" "),a("p",[t._v("hdfs在生产应用中主要是客户端的开发，==其核心步骤是从hdfs提供的api中构造一个HDFS的访问客户对象，然后通过该客户端对象操作(增删改查)HDFS上的文件==")]),t._v(" "),a("h2",{attrs:{id:"_7-1、环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、环境准备"}},[t._v("#")]),t._v(" 7.1、环境准备")]),t._v(" "),a("h3",{attrs:{id:"_1、导入依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、导入依赖"}},[t._v("#")]),t._v(" 1、导入依赖")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.apache.hadoop"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("hadoop-client"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("2.6.1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-2、创建配置实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2、创建配置实例"}},[t._v("#")]),t._v(" 7.2、创建配置实例")]),t._v(" "),a("blockquote",[a("p",[t._v("在java中操作hdfs，首先要获得一个客户端实例")])]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),t._v(" conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("==而我们的操作目标是HDFS，所以获取到的fs对象应该是DistributedFileSystem的实例；==")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("get方法是从何处判断具体实例化哪种客户端类呢？\n--------从conf中的一个参数fs.defaultFS的配置值判断"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果我们的代码中没有指定fs.defaultFS，并且工程classpath下也没有给定相应的配置，conf中的默认值就来自于hadoop的jar包中的core-default.xml，==默认值为: file:///，则获取的将不是一个DistributedFileSystem的实例，而是一个本地文件系统的客户端对象。==")]),t._v(" "),a("h3",{attrs:{id:"_7-3-hdfs客户端操作数据代码示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-hdfs客户端操作数据代码示例"}},[t._v("#")]),t._v(" 7.3 HDFS客户端操作数据代码示例:")]),t._v(" "),a("h4",{attrs:{id:"_7-3-1文件的增删改查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-1文件的增删改查"}},[t._v("#")]),t._v(" 7.3.1文件的增删改查")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HdfsClient")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造一个配置参数对象，设置一个参数：我们要访问的hdfs的URI")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从而FileSystem.get()方法就知道应该是去构造一个访问hdfs文件系统的客户端，以及hdfs的访问地址")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// new Configuration();的时候，它就会去加载jar包中的hdfs-default.xml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后再加载classpath下的hdfs-site.xml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),t._v(" conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fs.defaultFS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hdfs://hdp-node01:9000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 参数优先级： 1、客户端代码中设置的值 2、classpath下的用户自定义配置文件 3、然后是服务器的默认配置\n*/")]),t._v("\nconf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dfs.replication"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取一个hdfs的访问客户端，根据参数，这个实例应该是DistributedFileSystem的实例")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fs = FileSystem.get(conf);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 如果这样去获取，那conf里面就可以不要配"fs.defaultFS"参数，而且，这个客户端的身份标识已经是hadoop用户')]),t._v("\nfs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("URI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hdfs://server1:9000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hadoop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 往hdfs上传文件\n*\n* @throws Exception\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testAddFileToHdfs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要上传的文件所在的本地路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" src "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/redis-recommend.zip"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 要上传到hdfs的目标路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),t._v(" dst "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/aaa"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyFromLocalFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dst"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 从hdfs中复制文件到本地文件系统\n*\n* @throws IOException\n* @throws IllegalArgumentException\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testDownloadFileToLocal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyToLocalFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/jdk8.tar.gz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testMkdirAndDeleteAndRename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建目录")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdirs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a1/b1/c1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除文件夹 ，如果是非空文件夹，参数2必须给值true")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/aaa"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重命名文件或文件夹")]),t._v("\nfs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 查看目录信息，只显示文件\n*\n* @throws IOException\n* @throws IllegalArgumentException\n* @throws FileNotFoundException\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testListFiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 思考：为什么返回迭代器，而不是List之类的容器")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//因为如果集群中有成千上万的文件，放入集合中很损耗性能。而返回一个迭代器，则无需将全部文件一次性返回。要取哪个文件再去访问HDFS获取")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RemoteIterator")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocatedFileStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" listFiles "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listFiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("listFiles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LocatedFileStatus")]),t._v(" fileStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" listFiles"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBlockSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPermission")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取该文件的块信息")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockLocation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" blockLocations "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fileStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBlockLocations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockLocation")]),t._v(" bl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" blockLocations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"block-length:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLength")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"block-offset:"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOffset")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getHosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" host "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" hosts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 查看文件及文件夹信息\n*\n* @throws IOException\n* @throws IllegalArgumentException\n* @throws FileNotFoundException\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testListAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" listStatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d--"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileStatus")]),t._v(" fstatus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" listStatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fstatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f--"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" fstatus"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("==注意:listFiles和listStatus的区别。listFiles可以递归遍历所有文件，而listStatus只能查看某一目录下的文件和文件夹。==")]),t._v(" "),a("h3",{attrs:{id:"_7-4-2-通过流的方式访问hdfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-2-通过流的方式访问hdfs"}},[t._v("#")]),t._v(" 7.4.2 通过流的方式访问hdfs")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 相对那些封装好的方法而言的更底层一些的操作方式\n* 上层那些mapreduce spark等运算框架，去hdfs中获取数据的时候，就是调的这种底层的api\n* @author\n*\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StreamAccess")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),t._v(" conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Configuration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileSystem")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("URI")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hdfs://server1:9000"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hadoop"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 通过流的方式上传文件到hdfs\n* @throws Exception\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testUpload")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FSDataOutputStream")]),t._v(" outputStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" inputStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/hello.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("inputStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outputStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testDownLoadFileToLocal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先获取一个文件的输入流----针对hdfs上的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FSDataInputStream")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/jdk8.tar.gz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再构造一个文件的输出流----针对本地的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/jdk.tar.gz"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再将输入流中数据传输到输出流")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* hdfs支持随机定位进行文件读取，而且可以方便地读取指定长度\n* 用于上层分布式运算框架并发处理数据\n* @throws IllegalArgumentException\n* @throws IOException\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testRandomAccess")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//先获取一个文件的输入流----针对hdfs上的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FSDataInputStream")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以将流的起始偏移量进行自定义")]),t._v("\n    in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("seek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//再构造一个文件的输出流----针对本地的")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" out "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/hello.line.2.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 显示hdfs上文件的内容\n* @throws IOException\n* @throws IllegalArgumentException\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testCat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalArgumentException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FSDataInputStream")]),t._v(" in "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("open")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/hello.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOUtils")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copyBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("https://segmentfault.com/a/1190000020231486")])])])}),[],!1,null,null,null);s.default=e.exports}}]);