(window.webpackJsonp=window.webpackJsonp||[]).push([[480],{995:function(e,t,v){"use strict";v.r(t);var a=v(53),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),v("p",[e._v("本文主要是介绍 Hive-基础知识总结 。")])]),e._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#一、什么是hive"}},[e._v("一、什么是Hive")]),v("ul",[v("li",[v("a",{attrs:{href:"#_1-1-hive简介"}},[e._v("1.1 hive简介")])]),v("li",[v("a",{attrs:{href:"#_1-2-hive本质"}},[e._v("1.2 Hive本质")])])])]),v("li",[v("a",{attrs:{href:"#二、hive的优缺点"}},[e._v("二、Hive的优缺点")]),v("ul",[v("li",[v("a",{attrs:{href:"#_2-1-优点"}},[e._v("2.1 优点")])]),v("li",[v("a",{attrs:{href:"#_2-2-缺点"}},[e._v("2.2 缺点")])])])]),v("li",[v("a",{attrs:{href:"#三、hive架构原理"}},[e._v("三、Hive架构原理")])]),v("li",[v("a",{attrs:{href:"#四、hive的运行机制"}},[e._v("四、Hive的运行机制")])]),v("li",[v("a",{attrs:{href:"#五、hive和-数据库比较"}},[e._v("五、Hive和 数据库比较")]),v("ul",[v("li",[v("a",{attrs:{href:"#_5-1-查询语言"}},[e._v("5.1 查询语言")])]),v("li",[v("a",{attrs:{href:"#_5-2-数据更新"}},[e._v("5.2 数据更新")])]),v("li",[v("a",{attrs:{href:"#_5-3-执行延迟"}},[e._v("5.3 执行延迟")])]),v("li",[v("a",{attrs:{href:"#_5-4-数据规模"}},[e._v("5.4 数据规模")])])])]),v("li",[v("a",{attrs:{href:"#参考文章"}},[e._v("参考文章")])])])]),v("p"),e._v(" "),v("h2",{attrs:{id:"一、什么是hive"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#一、什么是hive"}},[e._v("#")]),e._v(" 一、什么是Hive")]),e._v(" "),v("h3",{attrs:{id:"_1-1-hive简介"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-hive简介"}},[e._v("#")]),e._v(" 1.1 hive简介")]),e._v(" "),v("blockquote",[v("p",[e._v("Hive：由Facebook开源用于解决海量结构化日志的数据统计工具。\nHive是基于Hadoop的一个"),v("strong",[e._v("数据仓库工具")]),e._v("，可以"),v("strong",[e._v("将结构化的数据文件映射为一张表")]),e._v("，并提供"),v("strong",[e._v("类SQL查询")]),e._v("功能。")])]),e._v(" "),v("h3",{attrs:{id:"_1-2-hive本质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-hive本质"}},[e._v("#")]),e._v(" 1.2 Hive本质")]),e._v(" "),v("blockquote",[v("p",[v("strong",[e._v("Hive本质")]),e._v("：将HQL转化成MapReduce程序")]),e._v(" "),v("ol",[v("li",[e._v("Hive处理的数据存储在HDFS")]),e._v(" "),v("li",[e._v("Hive分析数据底层的实现是MapReduce")]),e._v(" "),v("li",[e._v("执行程序运行在Yarn上")])])]),e._v(" "),v("img",{staticClass:"zoom-custom-imgs",attrs:{src:e.$withBase("/assets/img/dw/hive/basciarchi-1.png"),alt:"wxmp"}}),e._v(" "),v("h2",{attrs:{id:"二、hive的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二、hive的优缺点"}},[e._v("#")]),e._v(" 二、Hive的优缺点")]),e._v(" "),v("h3",{attrs:{id:"_2-1-优点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-优点"}},[e._v("#")]),e._v(" 2.1 优点")]),e._v(" "),v("ol",[v("li",[e._v("操作接口采用类SQL语法，提供快速开发的能力（简单、容易上手）。")]),e._v(" "),v("li",[e._v("避免了去写MapReduce，减少开发人员的学习成本。")]),e._v(" "),v("li",[e._v("Hive优势在于处理大数据，支持海量数据的分析与计算。")]),e._v(" "),v("li",[e._v("Hive支持用户自定义函数，用户可以根据自己的需求来实现自己的函数。")])]),e._v(" "),v("h3",{attrs:{id:"_2-2-缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-缺点"}},[e._v("#")]),e._v(" 2.2 缺点")]),e._v(" "),v("ol",[v("li",[e._v("Hive的HQL表达能力有限")])]),e._v(" "),v("blockquote",[v("p",[e._v("（1）Hive自动生成的MapReduce作业，通常情况下不够智能化\n（2）数据挖掘方面不擅长，由于MapReduce数据处理流程的限制，效率更高的算法却无法实现。")])]),e._v(" "),v("ol",[v("li",[e._v("Hive的效率比较低")])]),e._v(" "),v("blockquote",[v("p",[e._v("（1）Hive的执行延迟比较高，因此Hive常用于数据分析，对实时性要求不高的场合。\n（2）Hive调优比较困难，粒度较粗")])]),e._v(" "),v("ol",[v("li",[e._v("Hive不支持实时查询和行级别更新")])]),e._v(" "),v("blockquote",[v("p",[e._v("（1）hive分析的数据是存储在hdfs上，hdfs不支持随机写，只支持追加写，所以在hive中不能delete和update，只能select和insert")])]),e._v(" "),v("h2",{attrs:{id:"三、hive架构原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三、hive架构原理"}},[e._v("#")]),e._v(" 三、Hive架构原理")]),e._v(" "),v("img",{staticClass:"zoom-custom-imgs",attrs:{src:e.$withBase("/assets/img/dw/hive/basciarchi-2.png"),alt:"wxmp"}}),e._v(" "),v("ol",[v("li",[v("strong",[e._v("用户接口：Client")])])]),e._v(" "),v("blockquote",[v("p",[e._v("CLI（command-line interface）、JDBC/ODBC(jdbc访问hive)、WEBUI（浏览器访问hive）")])]),e._v(" "),v("ol",[v("li",[v("strong",[e._v("元数据：Metastore")])])]),e._v(" "),v("blockquote",[v("p",[e._v("元数据包括：表名、表所属的数据库（默认是default）、表的拥有者、列/分区字段、表的类型（是否是外部表）、表的数据所在目录等；\n默认存储在自带的derby数据库中，推荐使用MySQL存储Metastore")])]),e._v(" "),v("ol",[v("li",[v("strong",[e._v("Hadoop")])])]),e._v(" "),v("blockquote",[v("p",[e._v("使用HDFS进行存储，使用MapReduce进行计算。")])]),e._v(" "),v("ol",[v("li",[v("strong",[e._v("驱动器：Driver")])])]),e._v(" "),v("blockquote",[v("p",[e._v("（1）解析器（SQL Parser）：将SQL字符串转换成抽象语法树AST，这一步一般都用第三方工具库完成，比如antlr；对AST进行语法分析，比如表是否存在、字段是否存在、SQL语义是否有误。\n（2）编译器（Physical Plan）：将AST编译生成逻辑执行计划。\n（3）优化器（Query Optimizer）：对逻辑执行计划进行优化。\n（4）执行器（Execution）：把逻辑执行计划转换成可以运行的物理计划。对于Hive来说，就是MR/Spark。")])]),e._v(" "),v("h2",{attrs:{id:"四、hive的运行机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#四、hive的运行机制"}},[e._v("#")]),e._v(" 四、Hive的运行机制")]),e._v(" "),v("img",{staticClass:"zoom-custom-imgs",attrs:{src:e.$withBase("/assets/img/dw/hive/basciarchi-3.png"),alt:"wxmp"}}),e._v(" "),v("blockquote",[v("p",[e._v("Hive通过给用户提供的一系列交互接口，接收到用户的指令(SQL)，使用自己的Driver，结合元数据(MetaStore)，将这些指令翻译成MapReduce，提交到Hadoop中执行，最后，将执行返回的结果输出到用户交互接口。")])]),e._v(" "),v("h2",{attrs:{id:"五、hive和-数据库比较"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#五、hive和-数据库比较"}},[e._v("#")]),e._v(" 五、Hive和 数据库比较")]),e._v(" "),v("blockquote",[v("p",[e._v("由于 Hive 采用了类似SQL 的查询语言 HQL(Hive Query Language)，因此很容易将 Hive 理解为数据库。其实从结构上来看，Hive 和数据库除了拥有类似的查询语言，再无类似之处。本文将从多个方面来阐述 Hive 和数据库的差异。数据库可以用在 Online 的应用中，但是Hive 是为数据仓库而设计的，清楚这一点，有助于从应用角度理解 Hive 的特性。")])]),e._v(" "),v("h3",{attrs:{id:"_5-1-查询语言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-查询语言"}},[e._v("#")]),e._v(" 5.1 查询语言")]),e._v(" "),v("blockquote",[v("p",[e._v("由于SQL被广泛的应用在数据仓库中，因此，专门针对Hive的特性设计了类SQL的查询语言HQL。熟悉SQL开发的开发者可以很方便的使用Hive进行开发。")])]),e._v(" "),v("h3",{attrs:{id:"_5-2-数据更新"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-数据更新"}},[e._v("#")]),e._v(" 5.2 数据更新")]),e._v(" "),v("blockquote",[v("p",[e._v("由于Hive是针对数据仓库应用设计的，而"),v("strong",[e._v("数据仓库的内容是读多写少")]),e._v("的。因此，"),v("strong",[e._v("Hive中不建议对数据的改写，所有的数据都是在加载的时候确定好的")]),e._v("。而数据库中的数据通常是需要经常进行修改的，因此可以使用 INSERT INTO … VALUES 添加数据，使用 UPDATE … SET修改数据。")])]),e._v(" "),v("h3",{attrs:{id:"_5-3-执行延迟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-执行延迟"}},[e._v("#")]),e._v(" 5.3 执行延迟")]),e._v(" "),v("blockquote",[v("p",[e._v("Hive 在查询数据的时候，由于没有索引，需要扫描整个表，因此延迟较高。另外一个导致 Hive 执行延迟高的因素是 MapReduce框架。由于MapReduce 本身具有较高的延迟，因此在利用MapReduce 执行Hive查询时，也会有较高的延迟。相对的，数据库的执行延迟较低。当然，这个低是有条件的，即数据规模较小，当数据规模大到超过数据库的处理能力的时候，Hive的并行计算显然能体现出优势。")])]),e._v(" "),v("h3",{attrs:{id:"_5-4-数据规模"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-数据规模"}},[e._v("#")]),e._v(" 5.4 数据规模")]),e._v(" "),v("blockquote",[v("p",[e._v("由于Hive建立在集群上并可以利用MapReduce进行并行计算，因此可以支持很大规模的数据；对应的，数据库可以支持的数据规模较小。")])]),e._v(" "),v("h2",{attrs:{id:"参考文章"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[e._v("#")]),e._v(" 参考文章")]),e._v(" "),v("ul",[v("li",[e._v("https://blog.csdn.net/weixin_42796403/article/details/110089701")])])])}),[],!1,null,null,null);t.default=i.exports}}]);