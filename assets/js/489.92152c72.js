(window.webpackJsonp=window.webpackJsonp||[]).push([[489],{1004:function(t,a,s){"use strict";s.r(a);var e=s(53),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本文主要是介绍 Hive优化-12种常用方式 。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#hive优化-12种常用方式"}},[t._v("Hive优化-12种常用方式")])]),s("li",[s("a",{attrs:{href:"#_01-请慎重使用count-distinct-col"}},[t._v("01.请慎重使用COUNT(DISTINCT col);")])]),s("li",[s("a",{attrs:{href:"#_02-小文件会造成资源的多度占用以及影响查询效率"}},[t._v("02.小文件会造成资源的多度占用以及影响查询效率")])]),s("li",[s("a",{attrs:{href:"#_03-请慎重使用select"}},[t._v("03.请慎重使用SELECT *")])]),s("li",[s("a",{attrs:{href:"#_04-不要在表关联后面加where条件"}},[t._v("04.不要在表关联后面加WHERE条件")])]),s("li",[s("a",{attrs:{href:"#_05-处理掉字段中带有空值的数据"}},[t._v("05.处理掉字段中带有空值的数据")]),s("ul",[s("li",[s("a",{attrs:{href:"#_1、在查询的时候-过滤掉所有为null的数据-比如"}},[t._v("1、在查询的时候，过滤掉所有为NULL的数据，比如：")])]),s("li",[s("a",{attrs:{href:"#_2、查询出空值并给其赋上随机数-避免了key值为空-数据倾斜中常用的一种技巧"}},[t._v("2、查询出空值并给其赋上随机数,避免了key值为空（数据倾斜中常用的一种技巧）")])])])]),s("li",[s("a",{attrs:{href:"#_06-设置并行执行任务数"}},[t._v("06.设置并行执行任务数")])]),s("li",[s("a",{attrs:{href:"#_07-设置合理的reducer个数"}},[t._v("07.设置合理的Reducer个数")])]),s("li",[s("a",{attrs:{href:"#_08-jvm重用"}},[t._v("08.JVM重用")])]),s("li",[s("a",{attrs:{href:"#_09-为什么任务执行的时候只有一个reduce"}},[t._v("09.为什么任务执行的时候只有一个reduce？")])]),s("li",[s("a",{attrs:{href:"#_10-选择使用tez引擎"}},[t._v("10.选择使用Tez引擎")])]),s("li",[s("a",{attrs:{href:"#_11-选择使用本地模式"}},[t._v("11.选择使用本地模式")])]),s("li",[s("a",{attrs:{href:"#_12-选择使用严格模式"}},[t._v("12.选择使用严格模式")])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"hive优化-12种常用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hive优化-12种常用方式"}},[t._v("#")]),t._v(" Hive优化-12种常用方式")]),t._v(" "),s("h2",{attrs:{id:"_01-请慎重使用count-distinct-col"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_01-请慎重使用count-distinct-col"}},[t._v("#")]),t._v(" 01.请慎重使用COUNT(DISTINCT col);")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("p",[t._v("distinct会将b列所有的数据保存到内存中，形成一个类似hash的结构，速度是十分的块；但是在大数据背景下，因为b列所有的值都会形成以key值，极有可能发生OOM")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("所以，可以考虑使用Group By 或者 ROW_NUMBER() OVER(PARTITION BY col)方式代替COUNT(DISTINCT col)")]),t._v(" "),s("h2",{attrs:{id:"_02-小文件会造成资源的多度占用以及影响查询效率"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_02-小文件会造成资源的多度占用以及影响查询效率"}},[t._v("#")]),t._v(" 02.小文件会造成资源的多度占用以及影响查询效率")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("ul",[s("li",[t._v("众所周知，小文件在HDFS中存储本身就会占用过多的内存空间，那么对于MR查询过程中过多的小文件又会造成启动过多的Mapper Task, 每个Mapper都是一个后台线程，会占用JVM的空间")]),t._v(" "),s("li",[t._v("在Hive中，动态分区会造成在插入数据过程中，生成过多零碎的小文件（请回忆昨天讲的动态分区的逻辑）")]),t._v(" "),s("li",[t._v("不合理的Reducer Task数量的设置也会造成小文件的生成，因为最终Reducer是将数据落地到HDFS中的")])]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("在数据源头HDFS中控制小文件产生的个数，比如")]),t._v(" "),s("ul",[s("li",[t._v("采用Sequencefile作为表存储格式，不要用textfile，在一定程度上可以减少小文件（常见于在流计算的时候采用Sequencefile格式进行存储）")]),t._v(" "),s("li",[t._v("减少reduce的数量(可以使用参数进行控制)")]),t._v(" "),s("li",[t._v("慎重使用动态分区，最好在分区中指定分区字段的val值")]),t._v(" "),s("li",[t._v("最好数据的校验工作，比如通过脚本方式检测hive表的文件数量，并进行文件合并")]),t._v(" "),s("li",[t._v("合并多个文件数据到一个文件中，重新构建表")])]),t._v(" "),s("h2",{attrs:{id:"_03-请慎重使用select"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_03-请慎重使用select"}},[t._v("#")]),t._v(" 03.请慎重使用SELECT *")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("p",[t._v("在大数据量多字段的数据表中，如果使用 SELECT * 方式去查询数据，会造成很多无效数据的处理，会占用程序资源，造成资源的浪费")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("在查询数据表时，指定所需的待查字段名，而非使用 * 号")]),t._v(" "),s("h2",{attrs:{id:"_04-不要在表关联后面加where条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_04-不要在表关联后面加where条件"}},[t._v("#")]),t._v(" 04.不要在表关联后面加WHERE条件")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("p",[t._v("比如以下语句：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" stu "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" t\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" course "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" t1\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stu_id\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("请思考上面语句是否具有优化的空间？如何优化？")]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("采用谓词下推的技术，提早进行过滤有可能减少必须在数据库分区之间传递的数据量")]),t._v(" "),s("p",[t._v("谓词下推的解释：")]),t._v(" "),s("p",[t._v("所谓谓词下推就是通过嵌套的方式，将底层查询语句尽量推到数据底层去过滤，这样在上层应用中就可以使用更少的数据量来查询，这种SQL技巧被称为谓词下推(Predicate pushdown)")]),t._v(" "),s("p",[t._v("那么上面语句就可以采用这种方式来处理：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" stu "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" age"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" t\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("LEFT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("JOIN")]),t._v(" course "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" t1\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stu_id\n")])])]),s("h2",{attrs:{id:"_05-处理掉字段中带有空值的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_05-处理掉字段中带有空值的数据"}},[t._v("#")]),t._v(" 05.处理掉字段中带有空值的数据")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("p",[t._v("一个表内有许多空值时会导致MapReduce过程中,空成为一个key值,对应的会有大量的value值, 而一个key的value会一起到达reduce造成内存不足")]),t._v(" "),s("p",[t._v("解决方式：")]),t._v(" "),s("h3",{attrs:{id:"_1、在查询的时候-过滤掉所有为null的数据-比如"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、在查询的时候-过滤掉所有为null的数据-比如"}},[t._v("#")]),t._v(" 1、在查询的时候，过滤掉所有为NULL的数据，比如：")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" res_tbl "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("left")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" org_tbl o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2、查询出空值并给其赋上随机数-避免了key值为空-数据倾斜中常用的一种技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、查询出空值并给其赋上随机数-避免了key值为空-数据倾斜中常用的一种技巧"}},[t._v("#")]),t._v(" 2、查询出空值并给其赋上随机数,避免了key值为空（数据倾斜中常用的一种技巧）")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("create")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" res_tbl "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" res n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("full")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("join")]),t._v(" org_tbl o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("on")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("when")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v(" concat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hive'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"_06-设置并行执行任务数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_06-设置并行执行任务数"}},[t._v("#")]),t._v(" 06.设置并行执行任务数")]),t._v(" "),s("p",[t._v("通过设置参数 hive.exec.parallel 值为 true，就可以开启并发执行。不过，在共享集群中，需要注意下，如果 job 中并行阶段增多，那么集群利用率就会增加。")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("set hive.exec.parallel"),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("true; //打开任务并行执行")]),t._v("\n\nset hive.exec.parallel.thread.number"),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("16; //同一个 sql 允许最大并行度，默认为 8")]),t._v("\n")])])]),s("h2",{attrs:{id:"_07-设置合理的reducer个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_07-设置合理的reducer个数"}},[t._v("#")]),t._v(" 07.设置合理的Reducer个数")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("ul",[s("li",[t._v("过多的启动和初始化 reduce 也会消耗时间和资源")]),t._v(" "),s("li",[t._v("有多少个Reduer就会有多少个文件产生，如果生成了很多个小文件，那么如果这些小文件作为下一个任务的输入，则也会出现小文件过多的问题")])]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("div",{staticClass:"language-ini extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ini"}},[s("code",[t._v("Reducer设置的原则：\n\n每个Reduce处理的数据默认是256MB\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("hive.exec.reducers.bytes.per.reducer")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("256000000")]),t._v("\n\n每个任务最大的reduce数，默认为1009\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("hive.exec.reducers.max")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("1009")]),t._v("\n\n计算reduce数的公式\n\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("min(参数2，总输入数据量/参数1)")]),t._v("\n\n设置Reducer的数量\n\nset mapreduce.job.reduces"),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v("n")]),t._v("\n")])])]),s("h2",{attrs:{id:"_08-jvm重用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_08-jvm重用"}},[t._v("#")]),t._v(" 08.JVM重用")]),t._v(" "),s("p",[t._v("JVM重用是Hadoop中调优参数的内容，该方式对Hive的性能也有很大的帮助，特别对于很难避免小文件的场景或者Task特别多的场景,这类场景大数据书执行时间都很短")]),t._v(" "),s("p",[t._v("Hadood的默认配置通常是使用派生JVM来执行map和reduce任务的，会造成JVM的启动过程比较大的开销，尤其是在执行Job包含有成百上千个task任务的情况。")]),t._v(" "),s("p",[t._v("JVM重用可以使得JVM实例在同一个job中重新使用N次，N的值可以在hadoop的mapred-site.xml文件中进行设置")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("mapred.job.reuse.jvm.num.tasks"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("10"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("h2",{attrs:{id:"_09-为什么任务执行的时候只有一个reduce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_09-为什么任务执行的时候只有一个reduce"}},[t._v("#")]),t._v(" 09.为什么任务执行的时候只有一个reduce？")]),t._v(" "),s("p",[t._v("原因：")]),t._v(" "),s("ul",[s("li",[t._v("使用了Order by （Order By是会进行全局排序）")]),t._v(" "),s("li",[t._v("直接COUNT(1),没有加GROUP BY，比如：")]),t._v(" "),s("li",[t._v("SELECT COUNT(1) FROM tbl WHERE pt=’201909’")]),t._v(" "),s("li",[t._v("有笛卡尔积操作")])]),t._v(" "),s("p",[t._v("解决方案：")]),t._v(" "),s("p",[t._v("避免使用全局排序，可以使用sort by进行局部排序")]),t._v(" "),s("p",[t._v("使用GROUP BY进行统计，不会进行全局排序，比如：")]),t._v(" "),s("p",[t._v("SELECT pt,COUNT(1) FROM tbl WHERE pt=’201909’;")]),t._v(" "),s("h2",{attrs:{id:"_10-选择使用tez引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-选择使用tez引擎"}},[t._v("#")]),t._v(" 10.选择使用Tez引擎")]),t._v(" "),s("p",[t._v("Tez: 是基于Hadoop Yarn之上的DAG（有向无环图，Directed Acyclic Graph）计算框架。它把Ｍap/Reduce过程拆分成若干个子过程，同时可以把多个Ｍap/Reduce任务组合成一个较大的DAG任务，减少了Ｍap/Reduce之间的文件存储。同时合理组合其子过程，也可以减少任务的运行时间")]),t._v(" "),s("p",[t._v("设置hive.execution.engine = tez;")]),t._v(" "),s("p",[t._v("通过上述设置，执行的每个HIVE查询都将利用Tez")]),t._v(" "),s("p",[t._v("当然，也可以选择使用spark作为计算引擎")]),t._v(" "),s("h2",{attrs:{id:"_11-选择使用本地模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-选择使用本地模式"}},[t._v("#")]),t._v(" 11.选择使用本地模式")]),t._v(" "),s("p",[t._v("有时候Hive处理的数据量非常小，那么在这种情况下，为查询出发执行任务的时间消耗可能会比实际job的执行时间要长，对于大多数这种情况，hive可以通过本地模式在单节点上处理所有任务，对于小数据量任务可以大大的缩短时间")]),t._v(" "),s("p",[t._v("可以通过")]),t._v(" "),s("p",[t._v("hive.exec.mode.local.auto=true")]),t._v(" "),s("h2",{attrs:{id:"_12-选择使用严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-选择使用严格模式"}},[t._v("#")]),t._v(" 12.选择使用严格模式")]),t._v(" "),s("p",[t._v("Hive提供了一种严格模式，可以防止用户执行那些可能产生意想不到的不好的影响查询")]),t._v(" "),s("p",[t._v("比如：")]),t._v(" "),s("ul",[s("li",[t._v("对于分区表，除非WHERE语句中含有分区字段过滤条件来限制数据范围，否则不允许执行，也就是说不允许扫描所有分区")]),t._v(" "),s("li",[t._v("使用ORDER BY 语句进行查询是，必须使用LIMIT语句，因为ORDER BY 为了执行排序过程会将所有结果数据分发到同一个reduce中进行处理，强制要求用户添加LIMIT可以防止reducer额外的执行很长时间")])]),t._v(" "),s("p",[t._v("严格模式的配置：")]),t._v(" "),s("p",[t._v("Hive.mapred.mode=strict")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[t._v("https://zhuanlan.zhihu.com/p/80718835?utm_source=qq")])])])}),[],!1,null,null,null);a.default=r.exports}}]);