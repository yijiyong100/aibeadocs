(window.webpackJsonp=window.webpackJsonp||[]).push([[515],{1031:function(t,s,a){"use strict";a.r(s);var n=a(53),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("本文主要是介绍 Logstash-配置详解(二) 。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#logstash配置文件详解"}},[t._v("logstash配置文件详解")])]),a("li",[a("a",{attrs:{href:"#相关配置项说明"}},[t._v("相关配置项说明：")]),a("ul",[a("li",[a("a",{attrs:{href:"#stdin-标准输入"}},[t._v("stdin 标准输入")])]),a("li",[a("a",{attrs:{href:"#file"}},[t._v("file")])]),a("li",[a("a",{attrs:{href:"#syslog"}},[t._v("syslog")])]),a("li",[a("a",{attrs:{href:"#beats"}},[t._v("beats")])]),a("li",[a("a",{attrs:{href:"#kafka"}},[t._v("kafka")])]),a("li",[a("a",{attrs:{href:"#filter-plugin-过滤器插件-对事件执行中间处理"}},[t._v("filter plugin 过滤器插件，对事件执行中间处理")])]),a("li",[a("a",{attrs:{href:"#grok"}},[t._v("grok")])]),a("li",[a("a",{attrs:{href:"#date-日期解析-解析字段中的日期-然后转存到-timestamp"}},[t._v("date  日期解析  解析字段中的日期，然后转存到@timestamp")])]),a("li",[a("a",{attrs:{href:"#mutate-对字段做处理-重命名、删除、替换和修改字段。"}},[t._v("mutate  对字段做处理 重命名、删除、替换和修改字段。")])]),a("li",[a("a",{attrs:{href:"#geoip"}},[t._v("geoip")])]),a("li",[a("a",{attrs:{href:"#ruby"}},[t._v("ruby")])]),a("li",[a("a",{attrs:{href:"#urldecode"}},[t._v("urldecode")])]),a("li",[a("a",{attrs:{href:"#kv"}},[t._v("kv")])]),a("li",[a("a",{attrs:{href:"#useragent"}},[t._v("useragent")])]),a("li",[a("a",{attrs:{href:"#logstash-比较运算符"}},[t._v("logstash 比较运算符")])]),a("li",[a("a",{attrs:{href:"#output-plugin-输出插件-将事件发送到特定目标。"}},[t._v("output plugin 输出插件，将事件发送到特定目标。")])])])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"logstash配置文件详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logstash配置文件详解"}},[t._v("#")]),t._v(" logstash配置文件详解")]),t._v(" "),a("p",[t._v("logstash pipeline 包含两个必须的元素：input和output，和一个可选元素：filter。")]),t._v(" "),a("p",[t._v("从input读取事件源，（经过filter解析和处理之后），从output输出到目标存储库（elasticsearch或其他）。")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/es/logstash/configdetai-1.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("在生产环境使用logstash，一般使用都将配置写入文件里面，然后启动logstash。")]),t._v(" "),a("p",[t._v("具体参照官网：https://www.elastic.co/guide/en/logstash/7.1/index.html")]),t._v(" "),a("p",[t._v("处理nginx日志")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim nginx_access.conf")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/log/nginx/access.log"')]),t._v("\n        start_position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beginning"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx_access_log"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    grok"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \\[%{HTTPDATE:timestamp}\\] '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("(?:-|%{DATA:referrer})"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:user_agent}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(' (?:%{IP:proxy}|-) %{DATA:upstream_addr} %{NUMBER:upstream_request_time:float} %{NUMBER:upstream_response_time:float}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \\[%{HTTPDATE:timestamp}\\] '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{WORD:verb} %{DATA:request} HTTP/%{NUMBER:httpversion}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:referrer}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:user_agent}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:proxy}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        urldecode "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n       ruby "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           init "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"@kname = ['url_path','url_arg']\"")]),t._v("\n           code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"\n               new_event = LogStash::Event.new(Hash[@kname.zip(event.get('request').split('?'))])\n               event.append(new_event)\"")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url_arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            ruby "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n               init "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"@kname = ['key', 'value']\"")]),t._v("\n               code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"event.set('url_args', event.get('url_arg').split('&').collect {|i| Hash[@kname.zip(i.split('='))]})\"")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    geoip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clientip"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    useragent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user_agent"')]),t._v("\n        target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ua"')]),t._v("\n        remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user_agent"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("date")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timestamp"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dd/MMM/YYYY:HH:mm:ss Z"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        locale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"en"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    mutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timestamp"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_arg"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\noutput"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    elasticsearch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("      \n        hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9200"')]),t._v("\n        index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx-access-log-%{+YYYY.MM.dd}"')]),t._v("   \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#　　stdout {       #　　　　 codec => rubydebug    #　　}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("如果是想测试配置文件写的是否正确，用下面这个方式启动测试一下")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("/usr/share/logstash/bin/logstash -t -f /etc/logstash/conf.d/nginx.conf  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试配置文件")]),t._v("\nConfiguration OK\n/usr/share/logstash/bin/logstash -f /etc/logstash/conf.d/nginx_access.conf  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动logstash")]),t._v("\n")])])]),a("p",[t._v("启动logstash")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# systemctl start logstash\n")])])]),a("h2",{attrs:{id:"相关配置项说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关配置项说明"}},[t._v("#")]),t._v(" 相关配置项说明：")]),t._v(" "),a("p",[a("strong",[t._v("input plugin")]),t._v(" "),a("strong",[t._v("让logstash可以读取特定的事件源。")])]),t._v(" "),a("p",[t._v("官网：https://www.elastic.co/guide/en/logstash/current/input-plugins.html")]),t._v(" "),a("p",[t._v("事件源可以是从stdin屏幕输入读取，可以从file指定的文件，也可以从es，filebeat，kafka，redis等读取")]),t._v(" "),a("h3",{attrs:{id:"stdin-标准输入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stdin-标准输入"}},[t._v("#")]),t._v(" "),a("strong",[t._v("stdin")]),t._v(" 标准输入")]),t._v(" "),a("h3",{attrs:{id:"file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#file"}},[t._v("#")]),t._v(" "),a("strong",[t._v("file")])]),t._v(" "),a("p",[t._v("从文件读取数据")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/var/log/nginx/access.log'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要输入的文件路径")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nginx_access_log'")]),t._v("\n    start_position "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"beginning"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path  可以用/var/log/*.log,/var/log/**/*.log，如果是/var/log则是/var/log/*.log")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type 通用选项. 用于激活过滤器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# start_position 选择logstash开始读取文件的位置，begining或者end。")]),t._v("\n还有一些常用的例如：discover_interval，exclude，sincedb_path,sincedb_write_interval等可以参考官网\n")])])]),a("h3",{attrs:{id:"syslog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#syslog"}},[t._v("#")]),t._v(" syslog")]),t._v(" "),a("p",[t._v("通过网络将系统日志消息读取为事件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("syslog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"514"')]),t._v(" \n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"syslog"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# port 指定监听端口(同时建立TCP/UDP的514端口的监听)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从syslogs读取需要实现配置rsyslog：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /etc/rsyslog.conf   加入一行")]),t._v("\n*.* @172.17.128.200:514　  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定日志输入到这个端口，然后logstash监听这个端口，如果有新日志输入则读取")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# service rsyslog restart   #重启日志服务")]),t._v("\n")])])]),a("h3",{attrs:{id:"beats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beats"}},[t._v("#")]),t._v(" beats")]),t._v(" "),a("p",[t._v("从Elastic beats接收事件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("beats "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5044")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要监听的端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 还有host等选项")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从beat读取需要先配置beat端，从beat输出到logstash。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# vim /etc/filebeat/filebeat.yml ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\noutput.logstash:\nhosts: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:5044"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"kafka"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka"}},[t._v("#")]),t._v(" kafka")]),t._v(" "),a("p",[t._v("将 kafka topic 中的数据读取为事件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kafka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bootstrap_servers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kafka01:9092,kafka02:9092,kafka03:9092"')]),t._v("\n    topics "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"access_log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    group_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"logstash-file"')]),t._v("\n    codec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"json"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kafka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("bootstrap_servers")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kafka01:9092,kafka02:9092,kafka03:9092"')]),t._v("\n    topics "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"weixin_log"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user_log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  \n    codec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"json"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# bootstrap_servers 用于建立群集初始连接的Kafka实例的URL列表。# topics  要订阅的主题列表，kafka topics# group_id 消费者所属组的标识符，默认为logstash。kafka中一个主题的消息将通过相同的方式分发到Logstash的group_id")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# codec 通用选项，用于输入数据的编解码器。")]),t._v("\n")])])]),a("p",[t._v("还有很多的input插件类型，可以参考官方文档来配置。")]),t._v(" "),a("h3",{attrs:{id:"filter-plugin-过滤器插件-对事件执行中间处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filter-plugin-过滤器插件-对事件执行中间处理"}},[t._v("#")]),t._v(" filter plugin 过滤器插件，对事件执行中间处理")]),t._v(" "),a("h3",{attrs:{id:"grok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grok"}},[t._v("#")]),t._v(" grok")]),t._v(" "),a("p",[t._v("解析文本并构造 。把非结构化日志数据通过正则解析成结构化和可查询化")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \\[%{HTTPDATE:timestamp}\\] "')]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("WORD:verb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" %"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("DATA:request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" HTTP/%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("NUMBER:httpversion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) %{QS:referrer} %{QS:agent}$"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n匹配nginx日志\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 203.202.254.16 - - [22/Jun/2018:16:12:54 +0800] "GET / HTTP/1.1" 200 3700 "-" "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) Version/9.1.2 Safari/601.7.7"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#220.181.18.96 - - [13/Jun/2015:21:14:28 +0000] "GET /blog/geekery/xvfb-firefox.html HTTP/1.1" 200 10975 "-" "Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("注意这里grok 可以有多个match匹配规则，如果前面的匹配失败可以使用后面的继续匹配。例如")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{IP:clientip} - %{USER:user} \\[%{HTTPDATE:raw_datetime}\\] '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("(?:%{WORD:verb} %{URIPATHPARAM:request} HTTP/%{NUMBER:httpversion})"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" (?:"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:body}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" )?(?:"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:cookie}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" )?%{NUMBER:response} (?:%{NUMBER:bytes:int}|-) "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:referrer}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:agent}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(' (?:(%{IP:proxy},? ?)*|-|unknown) (?:%{DATA:upstream_addr} |)%{NUMBER:request_time:float} (?:%{NUMBER:upstream_time:float}|-)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            match "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{IP:clientip} - %{USER:user} \\[%{HTTPDATE:raw_datetime}\\] '),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("(?:%{WORD:verb} %{URI:request} HTTP/%{NUMBER:httpversion})"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" (?:"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:body}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" )?(?:"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:cookie}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" )?%{NUMBER:response} (?:%{NUMBER:bytes:int}|-) "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:referrer}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v("%{DATA:agent}"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[t._v('\\"')]),t._v(' (?:(%{IP:proxy},? ?)*|-|unknown) (?:%{DATA:upstream_addr} |)%{NUMBER:request_time:float} (?:%{NUMBER:upstream_time:float}|-)"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       \n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("grok 语法：%{SYNTAX:SEMANTIC}  即 %{正则:自定义字段名}")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("​           官方提供了很多正则的grok pattern可以直接使用 :"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https://github.com/logstash-plugins/logstash-patterns-core/tree/master/patterns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n\n​           grok debug工具： http://grokdebug.herokuapp.com\n\n　　　　　　正则表达式调试工具： https://www.debuggex.com/\n\n　　　　需要用到较多的正则知识，参考文档有：https://www.jb51.net/tools/zhengze.html\n\n​     自定义模式：  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("字段名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("the pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n​    例如： 匹配 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("/06/27 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),t._v(":00:54  \n\n​        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("?"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("datetime"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n​     得到结果： "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datetime"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2018/06/27 14:00:54"')]),t._v("\n\n")])])]),a("h3",{attrs:{id:"date-日期解析-解析字段中的日期-然后转存到-timestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-日期解析-解析字段中的日期-然后转存到-timestamp"}},[t._v("#")]),t._v(" date  日期解析  解析字段中的日期，然后转存到@timestamp")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[2018-07-04 17:43:35,503]\ngrok{\n      match => {"message"=>"%{DATA:raw_datetime}"}\n}\ndate{\n       match => ["raw_datetime","YYYY-MM-dd HH:mm:ss,SSS"]\n        remove_field =>["raw_datetime"]\n}\n\n#将raw_datetime存到@timestamp 然后删除raw_datetime\n\n#24/Jul/2018:18:15:05 +0800\ndate {\n      match => ["timestamp","dd/MMM/YYYY:HH:mm:ss Z]\n}\n')])])]),a("h3",{attrs:{id:"mutate-对字段做处理-重命名、删除、替换和修改字段。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutate-对字段做处理-重命名、删除、替换和修改字段。"}},[t._v("#")]),t._v(" mutate  对字段做处理 重命名、删除、替换和修改字段。")]),t._v(" "),a("h4",{attrs:{id:"covert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#covert"}},[t._v("#")]),t._v(" covert")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('类型转换。类型包括：integer，float，integer_eu，float_eu，string和boolean\n\n\n\n``` shell\nfilter{\n    mutate{\n#     covert => ["response","integer","bytes","float"]  #数组的类型转换\n        convert => {"message"=>"integer"}\n    }\n}\n#测试-------\x3e\n{\n          "host" => "localhost",\n       "message" => 123,    #没带“”,int类型\n    "@timestamp" => 2018-06-26T02:51:08.651Z,\n      "@version" => "1"\n}\n```\n')])])]),a("h4",{attrs:{id:"split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#split"}},[t._v("#")]),t._v(" split")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(' 使用分隔符把字符串分割成数组\n\n\n\n``` shell\nmutate{\n    split => {"message"=>","}\n}\n#----------\x3e\naaa,bbb\n{\n    "@timestamp" => 2018-06-26T02:40:19.678Z,\n      "@version" => "1",\n          "host" => "localhost",\n       "message" => [\n        [0] "aaa",\n        [1] "bbb"\n    ]}\n192,128,1,100\n{\n        "host" => "localhost",\n     "message" => [\n      [0] "192",\n      [1] "128",\n      [2] "1",\n      [3] "100"\n ],\n  "@timestamp" => 2018-06-26T02:45:17.877Z,\n    "@version" => "1"\n}\n```\n')])])]),a("h4",{attrs:{id:"merge"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[t._v("#")]),t._v(" merge")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(' 合并字段  。数组和字符串 ，字符串和字符串\n\n\n\n``` shell\nfilter{\n    mutate{\n        add_field => {"field1"=>"value1"}\n    }\n    mutate{ \n          split => {"message"=>"."}   #把message字段按照.分割\n    }\n    mutate{\n        merge => {"message"=>"field1"}   #将filed1字段加入到message字段\n    }\n}\n#---------------\x3e\nabc\n{\n       "message" => [\n        [0] "abc,"\n        [1] "value1"\n    ],\n    "@timestamp" => 2018-06-26T03:38:57.114Z,\n        "field1" => "value1",\n      "@version" => "1",\n          "host" => "localhost"\n}\n\nabc,.123\n{\n       "message" => [\n        [0] "abc,",\n        [1] "123",\n        [2] "value1"\n    ],\n    "@timestamp" => 2018-06-26T03:38:57.114Z,\n        "field1" => "value1",\n      "@version" => "1",\n          "host" => "localhost"\n}\n```\n')])])]),a("h4",{attrs:{id:"rename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rename"}},[t._v("#")]),t._v(" rename")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('  对字段重命名\n\n\n\n``` shell\nfilter{\n    mutate{\n        rename => {"message"=>"info"}\n    }\n}\n#--------\x3e\n123\n{\n    "@timestamp" => 2018-06-26T02:56:00.189Z,\n          "info" => "123",\n      "@version" => "1",\n          "host" => "localhost"\n}\n```\n')])])]),a("h4",{attrs:{id:"remove-field"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remove-field"}},[t._v("#")]),t._v(" remove_field")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('   移除字段\n\n``` shell\nmutate {\n    remove_field => ["message","datetime"]\n}\n```\n')])])]),a("ul",[a("li",[a("p",[t._v("join")]),t._v(" "),a("p",[t._v("用分隔符连接数组，如果不是数组则不做处理")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("mutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nmutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('","')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nabc:123\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@timestamp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-26T03:55:41.426Z,\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc,123"')]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@version"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\naa:cc\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@timestamp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-26T03:55:47.501Z,\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aa,cc"')]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@version"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"gsub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gsub"}},[t._v("#")]),t._v(" gsub")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v('用正则或者字符串替换字段值。仅对字符串有效\n\n　\n\n\n\n``` shell\nmutate{\n        gsub => ["message","/","_"]   #用_替换/\n    }\n\n------\x3e\na/b/c/\n{\n      "@version" => "1",\n       "message" => "a_b_c_",\n          "host" => "localhost",\n    "@timestamp" => 2018-06-26T06:20:10.811Z\n}\n```\n')])])]),a("ul",[a("li",[a("p",[t._v("update")]),t._v(" "),a("p",[t._v("更新字段。如果字段不存在，则不做处理")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("mutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        add_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"field1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    mutate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"field1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        update "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"field2"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#field2不存在 不做处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n----------------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@timestamp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-26T06:26:28.870Z,\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"field1"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v1"')]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@version"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"replace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace"}},[t._v("#")]),t._v(" replace")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v(' 更新字段。如果字段不存在，则创建\n\n\n\n``` shell\n mutate{\n        add_field => {"field1"=>"value1"}\n    }\n    mutate{\n        replace => {"field1"=>"v1"}\n        replace => {"field2"=>"v2"}\n    }\n----------------------\x3e\n{\n       "message" => "1",\n          "host" => "localhost",\n    "@timestamp" => 2018-06-26T06:28:09.915Z,\n        "field2" => "v2",        #field2不存在，则新建\n      "@version" => "1",\n        "field1" => "v1"\n}\n```\n')])])]),a("h3",{attrs:{id:"geoip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geoip"}},[t._v("#")]),t._v(" geoip")]),t._v(" "),a("p",[t._v("根据来自Maxmind GeoLite2数据库的数据添加有关IP地址的地理位置的信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" geoip "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"clientip"')]),t._v("\n            database "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/tmp/GeoLiteCity.dat"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"ruby"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ruby"}},[t._v("#")]),t._v(" "),a("strong",[t._v("ruby")])]),t._v(" "),a("p",[t._v("ruby插件可以执行任意Ruby代码")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("filter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    urldecode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    ruby "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        init "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"@kname = ['url_path','url_arg']\"")]),t._v("\n        code "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\" \n            new_event = LogStash::Event.new(Hash[@kname.zip(event.get('message').split('?'))]) \n            event.append(new_event)\"")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("url_arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_arg"')]),t._v("\n            field_split "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"&"')]),t._v("\n            target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_args"')]),t._v("\n            remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_arg"')]),t._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ruby插件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以？为分隔符，将request字段分成url_path和url_arg")]),t._v("\n--------------------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nwww.test.com?test\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_arg"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.test.com"')]),t._v(",\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.test.com?test"')]),t._v(",  \n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@version"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@timestamp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-26T07:31:04.887Z\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nwww.test.com?title"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("elk"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("学习elk\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_args"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"title"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elk"')]),t._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"学习elk"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_path"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"www.test.com"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@version"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@timestamp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-26T07:33:54.507Z\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"urldecode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#urldecode"}},[t._v("#")]),t._v(" urldecode")]),t._v(" "),a("p",[t._v("用于解码被编码的字段,可以解决URL中 中文乱码的问题")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v(" urldecode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# field :指定urldecode过滤器要转码的字段,默认值是"message"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# charset(缺省): 指定过滤器使用的编码.默认UTF-8")]),t._v("\n")])])]),a("h3",{attrs:{id:"kv"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kv"}},[t._v("#")]),t._v(" "),a("strong",[t._v("kv")])]),t._v(" "),a("p",[t._v("通过指定分隔符将字符串分割成key/value")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        prefix "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_"')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#给分割后的key加前缀")]),t._v("\n        target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_ags"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将分割后的key-value放入指定字段")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#要分割的字段")]),t._v("\n        field_split "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"&"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定分隔符")]),t._v("\n        remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n--------------------------"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v(",\n       "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_ags"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_c"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3"')]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_a"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"url_b"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@version"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),t._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@timestamp"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v("-06-26T07:07:24.557Z\n")])])]),a("h3",{attrs:{id:"useragent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#useragent"}},[t._v("#")]),t._v(" useragent")]),t._v(" "),a("p",[t._v("添加有关用户代理(如系列,操作系统,版本和设备)的信息")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  useragent "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"agent"')]),t._v("\n    target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ua"')]),t._v("\n    remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"agent"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if语句，只有在agent字段不为空时才会使用该插件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#source 为必填设置,目标字段")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#target 将useragent信息配置到ua字段中。如果不指定将存储在根目录中")]),t._v("\n")])])]),a("h3",{attrs:{id:"logstash-比较运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logstash-比较运算符"}},[t._v("#")]),t._v(" logstash 比较运算符")]),t._v(" "),a("p",[t._v("等于:  ==, !=, <, >, <=, >=\n　　正则:  =~, !~ (checks a pattern on the right against a string value on the left)\n　　包含关系: in, not in")]),t._v(" "),a("p",[t._v("支持的布尔运算符：and, or, nand, xor")]),t._v(" "),a("p",[t._v("支持的一元运算符: !")]),t._v(" "),a("h3",{attrs:{id:"output-plugin-输出插件-将事件发送到特定目标。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#output-plugin-输出插件-将事件发送到特定目标。"}},[t._v("#")]),t._v(" output plugin 输出插件，将事件发送到特定目标。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("stdout 标准输出。将事件输出到屏幕上")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    stdout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        codec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rubydebug"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("file  将事件写入文件")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/data/logstash/%{host}/{application}\n       codec => line { format => "')]),t._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v('"'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("kafka 将事件发送到kafka")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("    kafka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        bootstrap_servers "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9092"')]),t._v("\n        topic_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test_topic"')]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#必需的设置。生成消息的主题")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("elasticseach 在es中存储日志")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("    elasticsearch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost:9200"')]),t._v("\n        index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx-access-log-%{+YYYY.MM.dd}"')]),t._v("  \n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#index 事件写入的索引。可以按照日志来创建索引，以便于删旧数据和按时间来搜索日志")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"补充一个codec-plugin-编解码器插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充一个codec-plugin-编解码器插件"}},[t._v("#")]),t._v(" 补充一个codec plugin 编解码器插件")]),t._v(" "),a("p",[t._v("codec 本质上是流过滤器，可以作为input 或output 插件的一部分运行。例如上面output的stdout插件里有用到。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("multiline codec plugin 多行合并, 处理堆栈日志或者其他带有换行符日志需要用到")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("input "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  stdin "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    codec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" multiline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pattern, a regexp"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#正则匹配规则，匹配到的内容按照下面两个参数处理")]),t._v("\n      negate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),t._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"false"')]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认为false。处理匹配符合正则规则的行。如果为true，处理不匹配符合正则规则的行。")]),t._v("\n      what "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"previous"')]),t._v(" or "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"next"')]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定上下文。将指定的行是合并到上一行或者下一行。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ncodec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" multiline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^\\s"')]),t._v("  \n    what "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"previous"')]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以空格开头的行都合并到上一行")]),t._v("\n\ncodec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" multiline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Grok pattern names are valid! :)")]),t._v("\n    pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^%{TIMESTAMP_ISO8601} "')]),t._v("\n    negate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    what "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"previous"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任何不以这个时间戳格式开头的行都与上一行合并")]),t._v("\n\ncodec "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" multiline "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   pattern "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\\\"}},[t._v("\\\\")]),t._v('$"')]),t._v("\n   what "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"next"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以反斜杠结尾的行都与下一行合并")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("https://www.cnblogs.com/wzxmt/p/11031110.html")])])])}),[],!1,null,null,null);s.default=e.exports}}]);