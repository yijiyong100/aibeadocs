(window.webpackJsonp=window.webpackJsonp||[]).push([[561],{1077:function(a,t,v){"use strict";v.r(t);var s=v(53),r=Object(s.a)({},(function(){var a=this,t=a.$createElement,v=a._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),v("p",[a._v("本文主要是介绍Java自身的一些语言特性。")])]),a._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#面向对象思想的理解"}},[a._v("面向对象思想的理解")])]),v("li",[v("a",{attrs:{href:"#什么是java"}},[a._v("什么是Java")])]),v("li",[v("a",{attrs:{href:"#jvm、jre和jdk的关系"}},[a._v("JVM、JRE和JDK的关系")]),v("ul",[v("li",[v("a",{attrs:{href:"#jvm"}},[a._v("JVM")])]),v("li",[v("a",{attrs:{href:"#jre"}},[a._v("JRE")])]),v("li",[v("a",{attrs:{href:"#jdk"}},[a._v("JDK")])]),v("li",[v("a",{attrs:{href:"#jvm-jre-jdk关系图"}},[a._v("JVM&JRE&JDK关系图")])])])]),v("li",[v("a",{attrs:{href:"#什么是字节码-采用字节码的最大好处是什么"}},[a._v("什么是字节码？采用字节码的最大好处是什么")])]),v("li",[v("a",{attrs:{href:"#采用字节码的好处"}},[a._v("采用字节码的好处：")])]),v("li",[v("a",{attrs:{href:"#java和c-的区别"}},[a._v("Java和C++的区别")])])])]),v("p"),a._v(" "),v("h2",{attrs:{id:"面向对象思想的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#面向对象思想的理解"}},[a._v("#")]),a._v(" 面向对象思想的理解")]),a._v(" "),v("p",[a._v("首先，谈谈“面向过程”vs“面向对象”")]),a._v(" "),v("p",[a._v("这两者是思考角度的差异，面向过程更多是以“执行者”的角度来思考问题，而面向对象更多是以“组织者”的角度来思考问题，举个例子，比如我要产生一个0-10之间的随机数，如果以“面向过程”的思维，那我更多是关注如何去设计一个算法，然后保证比较均衡产生0-10的随机数，而面向对象的思维会更多关注，我找谁来帮我们做这件事，比如Random类，调用其中提供的方法即可。")]),a._v(" "),v("p",[a._v("所以，面向对象的思维更多的是考虑如何去选择合适的工具，然后组织到一起干一件事。")]),a._v(" "),v("p",[a._v("好比一个导演，要拍一场电影，那么首先要有男猪脚和女猪脚，然后还有其他等等，最后把这些资源组织起来，拍成一场电影。")]),a._v(" "),v("h2",{attrs:{id:"什么是java"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是java"}},[a._v("#")]),a._v(" 什么是Java")]),a._v(" "),v("p",[a._v("Java是一门面向对象编程语言，不仅吸收了C++语言的各种优点，还摒弃了C++里难以理解的多继承、指针等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程")]),a._v(" "),v("h2",{attrs:{id:"jvm、jre和jdk的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm、jre和jdk的关系"}},[a._v("#")]),a._v(" JVM、JRE和JDK的关系")]),a._v(" "),v("h3",{attrs:{id:"jvm"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[a._v("#")]),a._v(" JVM")]),a._v(" "),v("p",[a._v("Java Virtual Machine是Java虚拟机，Java程序需要运行在虚拟机上，不同的平台有自己的虚拟机，因此Java语言可以实现跨平台。")]),a._v(" "),v("h3",{attrs:{id:"jre"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jre"}},[a._v("#")]),a._v(" JRE")]),a._v(" "),v("p",[a._v("Java Runtime Environment包括Java虚拟机和Java程序所需的核心类库等。核心类库主要是java.lang包：包含了运行Java程序必不可少的系统类，如基本数据类型、基本数学函数、字符串处理、线程、异常处理类等，系统缺省加载这个包")]),a._v(" "),v("p",[a._v("如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。")]),a._v(" "),v("h3",{attrs:{id:"jdk"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jdk"}},[a._v("#")]),a._v(" JDK")]),a._v(" "),v("p",[a._v("Java Development Kit是提供给Java开发人员使用的，其中包含了Java的开发工具，也包括了JRE。所以安装了JDK，就无需再单独安装JRE了。其中的开发工具：编译工具(javac.exe)，打包工具(jar.exe)等")]),a._v(" "),v("h3",{attrs:{id:"jvm-jre-jdk关系图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#jvm-jre-jdk关系图"}},[a._v("#")]),a._v(" JVM&JRE&JDK关系图")]),a._v(" "),v("img",{staticClass:"zoom-custom-imgs",attrs:{src:a.$withBase("/assets/img/java/basic/JVM_JRE_JDK_rela.png"),alt:"wxmp"}}),a._v(" "),v("h2",{attrs:{id:"什么是字节码-采用字节码的最大好处是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是字节码-采用字节码的最大好处是什么"}},[a._v("#")]),a._v(" 什么是字节码？采用字节码的最大好处是什么")]),a._v(" "),v("p",[a._v("字节码：Java源代码经过虚拟机编译器编译后产生的文件（即扩展为.class的文件），它不面向任何特定的处理器，只面向虚拟机。")]),a._v(" "),v("h2",{attrs:{id:"采用字节码的好处"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#采用字节码的好处"}},[a._v("#")]),a._v(" 采用字节码的好处：")]),a._v(" "),v("p",[a._v("Java语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以Java程序运行时比较高效，而且，由于字节码并不专对一种特定的机器，因此，Java程序无须重新编译便可在多种不同的计算机上运行。")]),a._v(" "),v("h2",{attrs:{id:"java和c-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#java和c-的区别"}},[a._v("#")]),a._v(" Java和C++的区别")]),a._v(" "),v("ul",[v("li",[a._v("都是面向对象的语言，都支持封装、继承和多态")]),a._v(" "),v("li",[a._v("Java不提供指针来直接访问内存，程序内存更加安全")]),a._v(" "),v("li",[a._v("Java的类是单继承的，C++支持多重继承；虽然Java的类不可以多继承，但是接口可以多继承。")]),a._v(" "),v("li",[a._v("Java有自动内存管理机制，不需要程序员手动释放无用内存")])])])}),[],!1,null,null,null);t.default=r.exports}}]);