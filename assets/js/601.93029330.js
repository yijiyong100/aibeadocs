(window.webpackJsonp=window.webpackJsonp||[]).push([[601],{1117:function(t,a,s){"use strict";s.r(a);var e=s(53),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本文主要是介绍Java 基础语法 。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#java基础语法"}},[t._v("Java基础语法")])]),s("li",[s("a",{attrs:{href:"#_1-第一个java程序"}},[t._v("1.第一个Java程序")])]),s("li",[s("a",{attrs:{href:"#_2-基本语法"}},[t._v("2.基本语法")])]),s("li",[s("a",{attrs:{href:"#_3-java标识符"}},[t._v("3.Java标识符")])]),s("li",[s("a",{attrs:{href:"#_4-java修饰符"}},[t._v("4.Java修饰符")])]),s("li",[s("a",{attrs:{href:"#_5-java变量"}},[t._v("5.Java变量")])]),s("li",[s("a",{attrs:{href:"#_6-java数组"}},[t._v("6.Java数组")]),s("ul",[s("li",[s("a",{attrs:{href:"#静态初始化"}},[t._v("静态初始化")])]),s("li",[s("a",{attrs:{href:"#动态初始化"}},[t._v("动态初始化")])])])]),s("li",[s("a",{attrs:{href:"#_7-java枚举"}},[t._v("7.Java枚举")])]),s("li",[s("a",{attrs:{href:"#_8-java关键字"}},[t._v("8.Java关键字")])]),s("li",[s("a",{attrs:{href:"#_9-java注释"}},[t._v("9.Java注释")])]),s("li",[s("a",{attrs:{href:"#_10-java空行"}},[t._v("10.Java空行")])]),s("li",[s("a",{attrs:{href:"#_11-继承"}},[t._v("11.继承")])]),s("li",[s("a",{attrs:{href:"#_12-接口"}},[t._v("12.接口")])]),s("li",[s("a",{attrs:{href:"#_13-java源程序与编译型运行区别"}},[t._v("13.Java源程序与编译型运行区别")])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"java基础语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java基础语法"}},[t._v("#")]),t._v(" Java基础语法")]),t._v(" "),s("p",[t._v("一个 Java 程序可以认为是一系列对象的集合，而这些对象通过调用彼此的方法来协同工作。下面简要介绍下类、对象、方法和实例变量的概念。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("对象")]),t._v("：对象是类的一个实例，有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。")]),t._v(" "),s("li",[s("strong",[t._v("类")]),t._v("：类是一个模板，它描述一类对象的行为和状态。")]),t._v(" "),s("li",[s("strong",[t._v("方法")]),t._v("：方法就是行为，一个类可以有很多方法。逻辑运算、数据修改以及所有动作都是在方法中完成的。")]),t._v(" "),s("li",[s("strong",[t._v("实例变量")]),t._v("：每个对象都有独特的实例变量，对象的状态由这些实例变量的值决定。")])]),t._v(" "),s("h2",{attrs:{id:"_1-第一个java程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一个java程序"}},[t._v("#")]),t._v(" 1.第一个Java程序")]),t._v(" "),s("p",[t._v("下面看一个简单的 Java 程序，它将打印字符串： Hello World")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 第一个Java程序\n     * 它将打印字符串: Hello World\n     */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 Hello World")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("下面将逐步介绍如何保存、编译以及运行这个程序：")]),t._v(" "),s("ul",[s("li",[t._v("打开代码编辑器，把上面的代码添加进去；")]),t._v(" "),s("li",[t._v("把文件名保存为："),s("code",[t._v("HelloWorld.java")]),t._v("；")]),t._v(" "),s("li",[t._v("打开 "),s("code",[t._v("cmd")]),t._v(" 命令窗口，进入目标文件所在的位置，假设是 "),s("code",[t._v("C:\\")])]),t._v(" "),s("li",[t._v("在命令行窗口输入 "),s("code",[t._v("javac HelloWorld.java")]),t._v(" 按下回车键编译代码。如果代码没有错误，"),s("code",[t._v("cmd")]),t._v(" 命令提示符会进入下一行（假设环境变量都设置好了）。")]),t._v(" "),s("li",[t._v("再键输入 "),s("code",[t._v("java HelloWorld")]),t._v(" 按下回车键就可以运行程序了")])]),t._v(" "),s("p",[t._v("你将会在窗口看到 Hello World")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" javac "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("java\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("C")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" java "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Hello")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("World")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-基本语法"}},[t._v("#")]),t._v(" 2.基本语法")]),t._v(" "),s("p",[t._v("编写 Java 程序时，应注意以下几点：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("大小写敏感")]),t._v("：Java 是大小写敏感的，这就意味着标识符 "),s("code",[t._v("Hello")]),t._v(" 与 "),s("code",[t._v("hello")]),t._v(" 是不同的。")]),t._v(" "),s("li",[s("strong",[t._v("类名")]),t._v("：对于所有的类来说，类名的首字母应该大写。如果类名由若干单词组成，那么每个单词的首字母应该大写，例如 "),s("code",[t._v("MyFirstJavaClass")]),t._v(" 。")]),t._v(" "),s("li",[s("strong",[t._v("方法名")]),t._v("：所有的方法名都应该以小写字母开头。如果方法名含有若干单词，则后面的每个单词首字母大写。")]),t._v(" "),s("li",[s("strong",[t._v("源文件名")]),t._v("：源文件名必须和类名相同。当保存文件的时候，你应该使用类名作为文件名保存（切记 Java 是大小写敏感的），文件名的后缀为 .java。（如果文件名和类名不相同则会导致编译错误）。")]),t._v(" "),s("li",[s("strong",[t._v("主方法入口")]),t._v("：所有的 Java 程序由 public static void main(String[] args) 方法开始执行。")])]),t._v(" "),s("h2",{attrs:{id:"_3-java标识符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-java标识符"}},[t._v("#")]),t._v(" 3.Java标识符")]),t._v(" "),s("p",[t._v("Java 所有的组成部分都需要名字。类名、变量名以及方法名都被称为标识符。")]),t._v(" "),s("p",[t._v("关于 Java 标识符，有以下几点需要注意：")]),t._v(" "),s("ul",[s("li",[t._v("所有的标识符都应该以字母（A-Z 或者 a-z）,美元符（$）、或者下划线（_）开始")]),t._v(" "),s("li",[t._v("首字符之后可以是字母（A-Z 或者 a-z）,美元符（$）、下划线（_）或数字的任何字符组")]),t._v(" "),s("li",[t._v("关键字不能用作标识符")]),t._v(" "),s("li",[t._v("标识符是大小写敏感的")]),t._v(" "),s("li",[t._v("合法标识符举例："),s("code",[t._v("age")]),t._v("、"),s("code",[t._v("$salary")]),t._v("、"),s("code",[t._v("_value")]),t._v("、"),s("code",[t._v("__1_value")])]),t._v(" "),s("li",[t._v("非法标识符举例："),s("code",[t._v("123abc")]),t._v("、"),s("code",[t._v("-salary")])])]),t._v(" "),s("h2",{attrs:{id:"_4-java修饰符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-java修饰符"}},[t._v("#")]),t._v(" 4.Java修饰符")]),t._v(" "),s("p",[t._v("像其他语言一样，Java 可以使用修饰符来修饰类中方法和属性。主要有两类修饰符：")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("访问控制修饰符")]),t._v(":\n"),s("ul",[s("li",[t._v("default")]),t._v(" "),s("li",[t._v("public")]),t._v(" "),s("li",[t._v("protected")]),t._v(" "),s("li",[t._v("private")])])]),t._v(" "),s("li",[s("strong",[t._v("非访问控制修饰符")]),t._v(":\n"),s("ul",[s("li",[t._v("final")]),t._v(" "),s("li",[t._v("abstract")]),t._v(" "),s("li",[t._v("static")]),t._v(" "),s("li",[t._v("synchronized")])])])]),t._v(" "),s("p",[t._v("在后面的章节中我们会深入讨论 Java 修饰符。")]),t._v(" "),s("h2",{attrs:{id:"_5-java变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-java变量"}},[t._v("#")]),t._v(" 5.Java变量")]),t._v(" "),s("p",[t._v("Java 中主要有如下几种类型的变量：")]),t._v(" "),s("ul",[s("li",[t._v("局部变量")]),t._v(" "),s("li",[t._v("类变量（静态变量）")]),t._v(" "),s("li",[t._v("成员变量（非静态变量）")])]),t._v(" "),s("h2",{attrs:{id:"_6-java数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-java数组"}},[t._v("#")]),t._v(" 6.Java数组")]),t._v(" "),s("p",[t._v("数组是储存在堆上的对象，可以保存多个同类型变量。在后面的章节中，我们将会学到如何声明、构造以及初始化一个数组。")]),t._v(" "),s("ol",[s("li",[t._v("直接给每个元素赋值")])]),t._v(" "),s("p",[t._v("int array[4] = {1,2,3,4};")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("给一部分赋值，后面的全部为0")])]),t._v(" "),s("p",[t._v("int array[4] = {1,2};")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("由赋值参数个数决定数组的个数")])]),t._v(" "),s("p",[t._v("int array[] = {1,2};")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("数组元素的值是随机分配的")])]),t._v(" "),s("p",[t._v("int array[4] = {};")]),t._v(" "),s("p",[t._v("当初始化参数时，推荐使用 int array[4] = {0};")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"//"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qDebug")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"array = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1. 直接给每个元素赋值")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2. 给一部分赋值，后面的全部为0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3. 由赋值参数个数决定数组的个数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4. 数组元素的值是随机分配的")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" array4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("array4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"静态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态初始化"}},[t._v("#")]),t._v(" 静态初始化")]),t._v(" "),s("p",[t._v("静态初始化是指由程序员在初始化数组时为数组每个元素赋值，由系统决定数组的长度。")]),t._v(" "),s("p",[t._v("数组的静态初始化有两种方式，具体示例如下：")]),t._v(" "),s("p",[t._v("array = new int[ ]{1,2,3,4,5};")]),t._v(" "),s("p",[t._v("int[ ] array = {1,2,3,4,5};")]),t._v(" "),s("p",[t._v("上面的2种方式都可以实现数组的静态初始化，其中花括号包含数组元素值，元素值之间用逗号“,”分隔。此处注意只有在定义数组的同时执行数组初始化才支持使用简化的静态初始化。为了简便，建议采用第二种方式。")]),t._v(" "),s("h3",{attrs:{id:"动态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态初始化"}},[t._v("#")]),t._v(" 动态初始化")]),t._v(" "),s("p",[t._v("动态初始化是指由程序员在初始化数组时指定数组的长度，由系统为数组元素分配初始值。")]),t._v(" "),s("p",[t._v("数组动态初始化，具体示例如下：")]),t._v(" "),s("p",[t._v("int[ ] array = new int[10]; // 动态初始化数组")]),t._v(" "),s("p",[t._v("上述示例中的格式会在数组声明的同时分配一块内存空间供该数组使用，其中数组长度是10，由于每个元素都为int型数据类型，因此上例中数组占用的内存共有10*4=40个字节。此外，动态初始化数组时，其元素会根据它的数据类型被设置为默认的初始值。本例数组中每个元素的默认值为0，其他常见的数据类型默认值如下表所示：")]),t._v(" "),s("h2",{attrs:{id:"_7-java枚举"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-java枚举"}},[t._v("#")]),t._v(" 7.Java枚举")]),t._v(" "),s("p",[t._v("Java 5.0 引入了枚举，枚举限制变量只能是预先设定好的值。使用枚举可以减少代码中的 bug。")]),t._v(" "),s("p",[t._v("例如，我们为果汁店设计一个程序，它将限制果汁为"),s("code",[t._v("小杯")]),t._v("、"),s("code",[t._v("中杯")]),t._v("、"),s("code",[t._v("大杯")]),t._v("。这就意味着它不允许顾客点除了这三种尺寸外的果汁。")]),t._v(" "),s("p",[t._v("实例：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuiceSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" SMALL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MEDIUM "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LARGE "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuiceSize")]),t._v(" size"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuiceTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice")]),t._v(" juice "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      juice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("size "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FreshJuice"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FreshJuiceSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MEDIUM  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：枚举可以单独声明或者声明在类里面。方法、变量、构造函数也可以在枚举中定义。")])]),t._v(" "),s("h2",{attrs:{id:"_8-java关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-java关键字"}},[t._v("#")]),t._v(" 8.Java关键字")]),t._v(" "),s("p",[t._v("下面列出了 Java 关键字。这些保留字不能用于常量、变量、和任何标识符的名称。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("关键字")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("访问控制")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("private")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("私有的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("protected")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("受保护的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("public")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("公共的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("类、方法和变量修饰符")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("abstract")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("声明抽象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("class")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("extends")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("扩充,继承")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("final")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("最终值,不可改变的")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("implements")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("实现（接口）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("interface")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("接口")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("native")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("本地，原生方法（非 Java 实现）")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("new")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("新,创建")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("static")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("静态")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("strictfp")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("严格,精准")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("synchronized")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("线程,同步")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("transient")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("短暂")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("volatile")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("易失")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("程序控制语句")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("break")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("跳出循环")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("case")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("定义一个值以供 switch 选择")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("continue")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("继续")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("default")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("默认")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("do")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("运行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("else")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("否则")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("for")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("循环")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("if")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("如果")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("instanceof")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("实例")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("return")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("返回")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("switch")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("根据值选择执行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("while")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("循环")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("错误处理")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("assert")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("断言表达式是否为真")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("catch")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("捕捉异常")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("finally")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("有没有异常都执行")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("throw")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("抛出一个异常对象")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("throws")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("声明一个异常可能被抛出")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("try")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("捕获异常")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("包相关")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("import")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("引入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("package")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("包")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("基本类型")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("boolean")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("布尔型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("byte")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字节型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("char")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("字符型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("double")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("双精度浮点")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("float")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("单精度浮点")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("int")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("整型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("long")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("长整型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("short")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("短整型")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("变量引用")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("super")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("父类,超类")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("this")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("本类")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("void")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("无返回值")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("保留关键字")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("goto")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是关键字，但不能使用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("const")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("是关键字，但不能使用")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v(".")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("null")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("空")])])])]),t._v(" "),s("h2",{attrs:{id:"_9-java注释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-java注释"}},[t._v("#")]),t._v(" 9.Java注释")]),t._v(" "),s("p",[t._v("类似于 "),s("code",[t._v("C/C++")]),t._v("、Java 也支持单行以及多行注释。注释中的字符将被 Java 编译器忽略。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HelloWorld")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** \n    * 这是第一个Java程序\n    * 它将打印Hello World\n    * 这是一个多行注释的示例\n    */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这是单行注释的示例")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 这个也是单行注释的示例 */")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_10-java空行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-java空行"}},[t._v("#")]),t._v(" 10.Java空行")]),t._v(" "),s("p",[t._v("空白行或者有注释的行，Java 编译器都会忽略掉。")]),t._v(" "),s("h2",{attrs:{id:"_11-继承"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-继承"}},[t._v("#")]),t._v(" 11.继承")]),t._v(" "),s("p",[t._v("在 Java 中，一个类可以由其他类派生。如果你要创建一个类，而且已经存在一个类具有你所需要的属性或方法，那么你可以将新创建的类继承该类。")]),t._v(" "),s("p",[t._v("利用继承的方法，可以重用已存在类的方法和属性，而不用重写这些代码。被继承的类称为超类（"),s("code",[t._v("super class")]),t._v("），派生类称为子类（"),s("code",[t._v("sub class")]),t._v("）。")]),t._v(" "),s("h2",{attrs:{id:"_12-接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-接口"}},[t._v("#")]),t._v(" 12.接口")]),t._v(" "),s("p",[t._v("在 Java 中，接口可理解为对象间相互通信的协议。接口在继承中扮演着很重要的角色。")]),t._v(" "),s("p",[t._v("接口只定义派生要用到的方法，但是方法的具体实现完全取决于派生类。")]),t._v(" "),s("h2",{attrs:{id:"_13-java源程序与编译型运行区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-java源程序与编译型运行区别"}},[t._v("#")]),t._v(" 13.Java源程序与编译型运行区别")]),t._v(" "),s("p",[t._v("如下图所示：")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/java/intro/grammer_1.jpg"),alt:"wxmp"}}),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[t._v("https://www.cnblogs.com/liuxiaojun/p/training-java-basic-syntax.html")])])])}),[],!1,null,null,null);a.default=n.exports}}]);