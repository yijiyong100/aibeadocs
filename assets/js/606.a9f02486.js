(window.webpackJsonp=window.webpackJsonp||[]).push([[606],{1122:function(t,a,s){"use strict";s.r(a);var n=s(53),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本文主要是介绍 Java正则表达式 。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#_1-概述"}},[t._v("1.概述")]),s("ul",[s("li",[s("a",{attrs:{href:"#正则表达式实例"}},[t._v("正则表达式实例")])])])]),s("li",[s("a",{attrs:{href:"#_2-捕获组"}},[t._v("2.捕获组")]),s("ul",[s("li",[s("a",{attrs:{href:"#实例"}},[t._v("实例")])])])]),s("li",[s("a",{attrs:{href:"#数字校验-正则案例"}},[t._v("数字校验 正则案例")])]),s("li",[s("a",{attrs:{href:"#java正则表达式判断数字"}},[t._v("java正则表达式判断数字")])]),s("li",[s("a",{attrs:{href:"#_3-正则表达式语法"}},[t._v("3.正则表达式语法")])]),s("li",[s("a",{attrs:{href:"#_4-matcher类的方法"}},[t._v("4.Matcher类的方法")]),s("ul",[s("li",[s("a",{attrs:{href:"#索引方法"}},[t._v("索引方法")])]),s("li",[s("a",{attrs:{href:"#研究方法"}},[t._v("研究方法")])]),s("li",[s("a",{attrs:{href:"#替换方法"}},[t._v("替换方法")])]),s("li",[s("a",{attrs:{href:"#start和end方法"}},[t._v("start和end方法")])]),s("li",[s("a",{attrs:{href:"#matches和lookingat方法"}},[t._v("matches和lookingAt方法")])]),s("li",[s("a",{attrs:{href:"#replacefirst和replaceall方法"}},[t._v("replaceFirst和replaceAll方法")])]),s("li",[s("a",{attrs:{href:"#appendreplacement和appendtail方法"}},[t._v("appendReplacement和appendTail方法")])]),s("li",[s("a",{attrs:{href:"#patternsyntaxexception类的方法"}},[t._v("PatternSyntaxException类的方法")])])])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/java/exception/exception_1.jpg"),alt:"wxmp"}}),t._v(" "),s("h1",{attrs:{id:"正则表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),s("h2",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1.概述")]),t._v(" "),s("p",[t._v("正则表达式定义了字符串的模式。")]),t._v(" "),s("p",[t._v("正则表达式可以用来搜索、编辑或处理文本。")]),t._v(" "),s("p",[t._v("正则表达式并不仅限于某一种语言，但是在每种语言中有细微的差别。")]),t._v(" "),s("h3",{attrs:{id:"正则表达式实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式实例"}},[t._v("#")]),t._v(" 正则表达式实例")]),t._v(" "),s("p",[t._v("一个字符串其实就是一个简单的正则表达式，例如 "),s("code",[t._v("Hello World")]),t._v(' 正则表达式匹配 "'),s("code",[t._v("Hello World")]),t._v('" 字符串。')]),t._v(" "),s("p",[s("code",[t._v(".")]),t._v('（点号）也是一个正则表达式，它匹配任何一个字符如："'),s("code",[t._v("a")]),t._v('" 或 "'),s("code",[t._v("1")]),t._v('"。')]),t._v(" "),s("p",[t._v("下表列出了一些正则表达式的实例及描述：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("正则表达式")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("this is text")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('匹配字符串 "'),s("code",[t._v("this is text")]),t._v('"')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("this\\s+is\\s+text")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("注意字符串中的 "),s("code",[t._v("\\s+")]),t._v('。 匹配单词 "'),s("code",[t._v("this")]),t._v('" 后面的 '),s("code",[t._v("\\s+")]),t._v(" 可以匹配多个空格，之后匹配 "),s("code",[t._v("is")]),t._v(" 字符串，再之后 "),s("code",[t._v("\\s+")]),t._v(" 匹配多个空格然后再跟上 "),s("code",[t._v("text")]),t._v(" 字符串。 可以匹配这个实例："),s("code",[t._v("this is text")])])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("^\\d+(\\.\\d+)?")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("^")]),t._v(" 定义了以什么开始 "),s("code",[t._v("\\d+")]),t._v(" 匹配一个或多个数字 "),s("code",[t._v("?")]),t._v(" 设置括号内的选项是可选的 "),s("code",[t._v("\\.")]),t._v(' 匹配 "'),s("code",[t._v(".")]),t._v('" 可以匹配的实例："'),s("code",[t._v("5")]),t._v('", "'),s("code",[t._v("1.5")]),t._v('" 和 "'),s("code",[t._v("2.21")]),t._v('"。')])])])]),t._v(" "),s("p",[t._v("Java 正则表达式和 Perl 的是最为相似的。")]),t._v(" "),s("p",[s("code",[t._v("java.util.regex")]),t._v(" 包主要包括以下三个类：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("Pattern")]),t._v(" 类：")]),t._v(" "),s("p",[s("code",[t._v("pattern")]),t._v(" 对象是一个正则表达式的编译表示。"),s("code",[t._v("Pattern")]),t._v(" 类没有公共构造方法。要创建一个 "),s("code",[t._v("Pattern")]),t._v(" 对象，你必须首先调用其公共静态编译方法，它返回一个 "),s("code",[t._v("Pattern")]),t._v(" 对象。该方法接受一个正则表达式作为它的第一个参数。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Matcher")]),t._v(" 类：")]),t._v(" "),s("p",[s("code",[t._v("Matcher")]),t._v(" 对象是对输入字符串进行解释和匹配操作的引擎。与 "),s("code",[t._v("Pattern")]),t._v(" 类一样，"),s("code",[t._v("Matcher")]),t._v(" 也没有公共构造方法。你需要调用 "),s("code",[t._v("Pattern")]),t._v(" 对象的 "),s("code",[t._v("matcher")]),t._v(" 方法来获得一个 "),s("code",[t._v("Matcher")]),t._v(" 对象。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("PatternSyntaxException")]),t._v(" 类：")]),t._v(" "),s("p",[s("code",[t._v("PatternSyntaxException")]),t._v(" 是一个非强制异常类，它表示一个正则表达式模式中的语法错误。")])])]),t._v(" "),s("p",[t._v("以下实例中使用了正则表达式 "),s("code",[t._v(".*work100.*")]),t._v(" 用于查找字符串中是否包了 "),s("code",[t._v("work100")]),t._v(" 子串：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegexExample1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" content "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I am xiaojun from work100.net"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".*work100.*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" isMatch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"字符串中是否包含了 'work100' 子字符串? \"")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" isMatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("实例输出结果为：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("字符串中是否包含了 work100 子字符串"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])]),s("h2",{attrs:{id:"_2-捕获组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-捕获组"}},[t._v("#")]),t._v(" 2.捕获组")]),t._v(" "),s("p",[t._v("捕获组是把多个字符当一个单独单元进行处理的方法，它通过对括号内的字符分组来创建。")]),t._v(" "),s("p",[t._v("例如，正则表达式 ("),s("code",[t._v("dog")]),t._v(') 创建了单一分组，组里包含"'),s("code",[t._v("d")]),t._v('"，"'),s("code",[t._v("o")]),t._v('"，和"'),s("code",[t._v("g")]),t._v('"。')]),t._v(" "),s("p",[t._v("捕获组是通过从左至右计算其开括号来编号。例如，在表达式"),s("code",[t._v("（（A）（B（C）））")]),t._v("，有四个这样的组：")]),t._v(" "),s("ul",[s("li",[t._v("((A)(B(C)))")]),t._v(" "),s("li",[t._v("(A)")]),t._v(" "),s("li",[t._v("(B(C))")]),t._v(" "),s("li",[t._v("(C)")])]),t._v(" "),s("p",[t._v("可以通过调用 "),s("code",[t._v("matcher")]),t._v(" 对象的 "),s("code",[t._v("groupCount")]),t._v(" 方法来查看表达式有多少个分组。"),s("code",[t._v("groupCount")]),t._v(" 方法返回一个 "),s("code",[t._v("int")]),t._v(" 值，表示 "),s("code",[t._v("matcher")]),t._v(" 对象当前有多个捕获组。")]),t._v(" "),s("p",[t._v("还有一个特殊的组（"),s("code",[t._v("group(0)")]),t._v("），它总是代表整个表达式。该组不包括在 "),s("code",[t._v("groupCount")]),t._v(" 的返回值中。")]),t._v(" "),s("h3",{attrs:{id:"实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),s("p",[t._v("下面的例子说明如何从一个给定的字符串中找到数字串：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegexMatches")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 按指定模式在字符串查找")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" line "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This order was placed for QT3000! OK?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"(\\\\D*)(\\\\d+)(.*)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建 Pattern 对象")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" r "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 现在创建 matcher 对象")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" r"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found value: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found value: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found value: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found value: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("group")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"NO MATCH"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上实例编译运行结果如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Found")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("This")]),t._v(" order was placed "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" QT3000"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" OK"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Found")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("This")]),t._v(" order was placed "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" QT\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Found")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Found")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" OK"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n")])])]),s("h2",{attrs:{id:"数字校验-正则案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字校验-正则案例"}},[t._v("#")]),t._v(" 数字校验 正则案例")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNumeric")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//Pattern pattern = Pattern.compile("^-?[0-9]+"); //这个也行')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^-?\\\\d+(\\\\.\\\\d+)?$"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//这个也行")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" isNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isNum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"java正则表达式判断数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java正则表达式判断数字"}},[t._v("#")]),t._v(" java正则表达式判断数字")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^\\\\d+$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非负整数（正整数   +   0）     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^[0-9]*[1-9][0-9]*$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正整数     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^((-\\\\d+)|(0+))$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非正整数（负整数   +   0）     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^-[0-9]*[1-9][0-9]*$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//负整数     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^-?\\\\d+$"')]),t._v("　　　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//整数     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^\\\\d+(\\\\.\\\\d+)?$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非负浮点数（正浮点数   +   0）     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(([0-9]+\\\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\\\.[0-9]+)|([0-9]*[1-9][0-9]*))$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正浮点数    ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^((-\\\\d+(\\\\.\\\\d+)?)|(0+(\\\\.0+)?))$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非正浮点数（负浮点数   +   0）     ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(-(([0-9]+\\\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//负浮点数    ")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^(-?\\\\d+)(\\\\.\\\\d+)?$"')]),t._v("　　"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//浮点数")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-正则表达式语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-正则表达式语法"}},[t._v("#")]),t._v(" 3.正则表达式语法")]),t._v(" "),s("p",[t._v("在其他语言中，"),s("code",[t._v("\\\\")]),t._v(" 表示：我想要在正则表达式中插入一个普通的（字面上的）反斜杠，请不要给它任何特殊的意义。")]),t._v(" "),s("p",[t._v("在 Java 中，"),s("code",[t._v("\\\\")]),t._v(" 表示：我要插入一个正则表达式的反斜线，所以其后的字符具有特殊的意义。")]),t._v(" "),s("p",[t._v("所以，在其他的语言中（如Perl），一个反斜杠 "),s("code",[t._v("\\")]),t._v(" 就足以具有转义的作用，而在 Java 中正则表达式中则需要有两个反斜杠才能被解析为其他语言中的转义作用。也可以简单的理解在 Java 的正则表达式中，两个 "),s("code",[t._v("\\\\")]),t._v(" 代表其他语言中的一个 "),s("code",[t._v("\\")]),t._v("，这也就是为什么表示一位数字的正则表达式是 "),s("code",[t._v("\\\\d")]),t._v("，而表示一个普通的反斜杠是 "),s("code",[t._v("\\\\\\\\")]),t._v("。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("字符")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('将下一字符标记为特殊字符、文本、反向引用或八进制转义符。例如，"'),s("code",[t._v("n")]),t._v('"匹配字符"'),s("code",[t._v("n")]),t._v('"。"'),s("code",[t._v("\\n")]),t._v('"匹配换行符。序列"'),s("code",[t._v("\\\\\\\\")]),t._v('"匹配"'),s("code",[t._v("\\\\")]),t._v('"，"'),s("code",[t._v("\\\\(")]),t._v('"匹配"'),s("code",[t._v("(")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("^")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配输入字符串开始的位置。如果设置了 "),s("code",[t._v("RegExp")]),t._v(" 对象的 "),s("code",[t._v("Multiline")]),t._v(" 属性，"),s("code",[t._v("^")]),t._v(' 还会与"'),s("code",[t._v("\\n")]),t._v('"或"'),s("code",[t._v("\\r")]),t._v('"之后的位置匹配。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("$")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配输入字符串结尾的位置。如果设置了 "),s("code",[t._v("RegExp")]),t._v(" 对象的 "),s("code",[t._v("Multiline")]),t._v(" 属性，"),s("code",[t._v("$")]),t._v(' 还会与"'),s("code",[t._v("\\n")]),t._v('"或"'),s("code",[t._v("\\r")]),t._v('"之前的位置匹配。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("*")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("零次或多次匹配前面的字符或子表达式。例如，"),s("code",[t._v("zo*")]),t._v(' 匹配"'),s("code",[t._v("z")]),t._v('"和"'),s("code",[t._v("zoo")]),t._v('"。'),s("code",[t._v("*")]),t._v(" 等效于 "),s("code",[t._v("{0,}")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("+")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('一次或多次匹配前面的字符或子表达式。例如，"'),s("code",[t._v("zo+")]),t._v('"与"'),s("code",[t._v("zo")]),t._v('"和"'),s("code",[t._v("zoo")]),t._v('"匹配，但与"'),s("code",[t._v("z")]),t._v('"不匹配。'),s("code",[t._v("+")]),t._v(" 等效于 "),s("code",[t._v("{1,}")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("?")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('零次或一次匹配前面的字符或子表达式。例如，"'),s("code",[t._v("do(es)?")]),t._v('"匹配"'),s("code",[t._v("do")]),t._v('"或"'),s("code",[t._v("does")]),t._v('"中的"'),s("code",[t._v("do")]),t._v('"。'),s("code",[t._v("?")]),t._v(" 等效于 "),s("code",[t._v("{0,1}")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("{n}")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("n")]),t._v(" 是非负整数。正好匹配 "),s("code",[t._v("n")]),t._v(' 次。例如，"'),s("code",[t._v("o{2}")]),t._v('"与"'),s("code",[t._v("Bob")]),t._v('"中的"'),s("code",[t._v("o")]),t._v('"不匹配，但与"'),s("code",[t._v("food")]),t._v('"中的两个"'),s("code",[t._v("o")]),t._v('"匹配。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("{n,}")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("n")]),t._v(" 是非负整数。至少匹配 "),s("code",[t._v("n")]),t._v(' 次。例如，"'),s("code",[t._v("o{2,}")]),t._v('"不匹配"'),s("code",[t._v("Bob")]),t._v('"中的"'),s("code",[t._v("o")]),t._v('"，而匹配"'),s("code",[t._v("foooood")]),t._v('"中的所有 '),s("code",[t._v("o")]),t._v('。"'),s("code",[t._v("o{1,}")]),t._v('"等效于"'),s("code",[t._v("o+")]),t._v('"。"'),s("code",[t._v("o{0,}")]),t._v('"等效于"'),s("code",[t._v("o*")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("{n,m}")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("m")]),t._v(" 和 "),s("code",[t._v("n")]),t._v(" 是非负整数，其中 "),s("code",[t._v("n <= m")]),t._v("。匹配至少 "),s("code",[t._v("n")]),t._v(" 次，至多 "),s("code",[t._v("m")]),t._v(' 次。例如，"'),s("code",[t._v("o{1,3}")]),t._v('"匹配"'),s("code",[t._v("fooooood")]),t._v('"中的头三个 '),s("code",[t._v("o")]),t._v("。'"),s("code",[t._v("o{0,1}")]),t._v("' 等效于 '"),s("code",[t._v("o?")]),t._v("'。注意：您不能将空格插入逗号和数字之间。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("?")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当此字符紧随任何其他限定符（"),s("code",[t._v("*")]),t._v("、"),s("code",[t._v("+")]),t._v("、"),s("code",[t._v("?")]),t._v("、"),s("code",[t._v("{n}")]),t._v("、"),s("code",[t._v("{n,}")]),t._v("、"),s("code",[t._v("{n,m}")]),t._v('）之后时，匹配模式是"'),s("code",[t._v("非贪心的")]),t._v('"。"'),s("code",[t._v("非贪心的")]),t._v('"模式匹配搜索到的、尽可能短的字符串，而默认的"'),s("code",[t._v("贪心的")]),t._v('"模式匹配搜索到的、尽可能长的字符串。例如，在字符串"'),s("code",[t._v("oooo")]),t._v('"中，"'),s("code",[t._v("o+?")]),t._v('"只匹配单个"'),s("code",[t._v("o")]),t._v('"，而"'),s("code",[t._v("o+")]),t._v('"匹配所有"'),s("code",[t._v("o")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v(".")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('匹配除"'),s("code",[t._v("\\r\\n")]),t._v('"之外的任何单个字符。若要匹配包括"'),s("code",[t._v("\\r\\n")]),t._v('"在内的任意字符，请使用诸如"'),s("code",[t._v("[\\s\\S]")]),t._v('"之类的模式。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("(pattern)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("pattern")]),t._v(" 并捕获该匹配的子表达式。可以使用 "),s("code",[t._v("$0…$9")]),t._v(' 属性从结果"匹配"集合中检索捕获的匹配。若要匹配括号字符 '),s("code",[t._v("( )")]),t._v('，请使用"'),s("code",[t._v("\\(")]),t._v('"或者"'),s("code",[t._v("\\)")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("(?:pattern)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("pattern")]),t._v(' 但不捕获该匹配的子表达式，即它是一个非捕获匹配，不存储供以后使用的匹配。这对于用"'),s("code",[t._v("or")]),t._v('"字符 "'),s("code",[t._v("(|)")]),t._v(' "组合模式部件的情况很有用。例如，"'),s("code",[t._v("industr(?:y|ies)")]),t._v(' "是比 "'),s("code",[t._v("industry|industries")]),t._v('" 更经济的表达式。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("(?=pattern)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("执行正向预测先行搜索的子表达式，该表达式匹配处于匹配 "),s("code",[t._v("pattern")]),t._v(" 的字符串的起始点的字符串。它是一个非捕获匹配，即不能捕获供以后使用的匹配。例如，'"),s("code",[t._v("Windows (?=95|98|NT|2000)")]),t._v("' 匹配\""),s("code",[t._v("Windows 2000")]),t._v('"中的"'),s("code",[t._v("Windows")]),t._v('"，但不匹配"'),s("code",[t._v("Windows 3.1")]),t._v('"中的"'),s("code",[t._v("Windows")]),t._v('"。预测先行不占用字符，即发生匹配后，下一匹配的搜索紧随上一匹配之后，而不是在组成预测先行的字符后。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("(?!pattern)")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("执行反向预测先行搜索的子表达式，该表达式匹配不处于匹配 "),s("code",[t._v("pattern")]),t._v(" 的字符串的起始点的搜索字符串。它是一个非捕获匹配，即不能捕获供以后使用的匹配。例如，'"),s("code",[t._v("Windows (?!95|98|NT|2000)")]),t._v("' 匹配\""),s("code",[t._v("Windows 3.1")]),t._v('"中的 "'),s("code",[t._v("Windows")]),t._v('"，但不匹配"'),s("code",[t._v("Windows 2000")]),t._v('"中的"'),s("code",[t._v("Windows")]),t._v('"。预测先行不占用字符，即发生匹配后，下一匹配的搜索紧随上一匹配之后，而不是在组成预测先行的字符后。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("x|y")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("x")]),t._v(" 或 "),s("code",[t._v("y")]),t._v("。例如，'"),s("code",[t._v("z|food")]),t._v("' 匹配\""),s("code",[t._v("z")]),t._v('"或"'),s("code",[t._v("food")]),t._v("\"。'"),s("code",[t._v("(z|f)ood")]),t._v("' 匹配\""),s("code",[t._v("zood")]),t._v('"或"'),s("code",[t._v("food")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("[xyz]")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('字符集。匹配包含的任一字符。例如，"'),s("code",[t._v("[abc]")]),t._v('" 匹配 "'),s("code",[t._v("plain")]),t._v('"中的"'),s("code",[t._v("a")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("[^xyz]")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('反向字符集。匹配未包含的任何字符。例如，"[^abc]"匹配"plain"中"p"，"l"，"i"，"n"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("[a-z]")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('字符范围。匹配指定范围内的任何字符。例如，"'),s("code",[t._v("[a-z]")]),t._v('" 匹配 "'),s("code",[t._v("a")]),t._v('" 到 "'),s("code",[t._v("z")]),t._v('" 范围内的任何小写字母。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("[^a-z]")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('反向范围字符。匹配不在指定的范围内的任何字符。例如，"'),s("code",[t._v("[^a-z]")]),t._v('" 匹配任何不在 "'),s("code",[t._v("a")]),t._v('" 到 "'),s("code",[t._v("z")]),t._v('" 范围内的任何字符。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\b")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('匹配一个字边界，即字与空格间的位置。例如，"'),s("code",[t._v("er\\b")]),t._v('" 匹配 "'),s("code",[t._v("never")]),t._v('" 中的"'),s("code",[t._v("er")]),t._v('"，但不匹配"'),s("code",[t._v("verb")]),t._v('"中的"'),s("code",[t._v("er")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\B")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('非字边界匹配。"'),s("code",[t._v("er\\B")]),t._v('"匹配"'),s("code",[t._v("verb")]),t._v('"中的"'),s("code",[t._v("er")]),t._v('"，但不匹配"'),s("code",[t._v("never")]),t._v('"中的"'),s("code",[t._v("er")]),t._v('"。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\cx")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("x")]),t._v(" 指示的控制字符。例如，"),s("code",[t._v("\\cM")]),t._v(" 匹配 "),s("code",[t._v("Control-M")]),t._v(" 或"),s("code",[t._v("回车符")]),t._v("。"),s("code",[t._v("x")]),t._v(" 的值必须在 "),s("code",[t._v("A-Z")]),t._v(" 或 "),s("code",[t._v("a-z")]),t._v(" 之间。如果不是这样，则假定 "),s("code",[t._v("c")]),t._v(' 就是"'),s("code",[t._v("c")]),t._v('"字符本身。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\d")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("数字字符匹配。等效于 "),s("code",[t._v("[0-9]")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\D")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("非数字字符匹配。等效于 "),s("code",[t._v("[^0-9]")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\f")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("换页符匹配。等效于 "),s("code",[t._v("\\x0c")]),t._v(" 和 "),s("code",[t._v("\\cL")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("换行符匹配。等效于 "),s("code",[t._v("\\x0a")]),t._v(" 和 "),s("code",[t._v("\\cJ")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\r")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配一个回车符。等效于 "),s("code",[t._v("\\x0d")]),t._v(" 和 "),s("code",[t._v("\\cM")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\s")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何空白字符，包括空格、制表符、换页符等。与 "),s("code",[t._v("[ \\f\\n\\r\\t\\v]")]),t._v(" 等效。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\S")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配任何非空白字符。与 "),s("code",[t._v("[^ \\f\\n\\r\\t\\v]")]),t._v(" 等效。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\t")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("制表符匹配。与 "),s("code",[t._v("\\x09")]),t._v(" 和 "),s("code",[t._v("\\cI")]),t._v(" 等效。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\v")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("垂直制表符匹配。与 "),s("code",[t._v("\\x0b")]),t._v(" 和 "),s("code",[t._v("\\cK")]),t._v(" 等效。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\w")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('匹配任何字类字符，包括下划线。与"'),s("code",[t._v("[A-Za-z0-9_]")]),t._v('"等效。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\W")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v('与任何非单词字符匹配。与"'),s("code",[t._v("[^A-Za-z0-9_]")]),t._v('"等效。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\xn")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("n")]),t._v("，此处的 "),s("code",[t._v("n")]),t._v(' 是一个十六进制转义码。十六进制转义码必须正好是两位数长。例如，"'),s("code",[t._v("\\x41")]),t._v('"匹配"'),s("code",[t._v("A")]),t._v('"。"'),s("code",[t._v("\\x041")]),t._v('"与"'),s("code",[t._v("\\x04")]),t._v('"&"'),s("code",[t._v("1")]),t._v('"等效。允许在正则表达式中使用 ASCII 代码。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\num")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("num")]),t._v("，此处的 "),s("code",[t._v("num")]),t._v(' 是一个正整数。到捕获匹配的反向引用。例如，"'),s("code",[t._v("(.)\\1")]),t._v('"匹配两个连续的相同字符。')])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\n")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("标识一个八进制转义码或反向引用。如果 "),s("code",[t._v("\\n")]),t._v(" 前面至少有 "),s("code",[t._v("n")]),t._v(" 个捕获子表达式，那么 "),s("code",[t._v("n")]),t._v(" 是反向引用。否则，如果 "),s("code",[t._v("n")]),t._v(" 是八进制数 "),s("code",[t._v("(0-7)")]),t._v("，那么 "),s("code",[t._v("n")]),t._v(" 是八进制转义码。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\nm")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("标识一个八进制转义码或反向引用。如果 "),s("code",[t._v("\\nm")]),t._v(" 前面至少有 "),s("code",[t._v("nm")]),t._v(" 个捕获子表达式，那么 "),s("code",[t._v("nm")]),t._v(" 是反向引用。如果 "),s("code",[t._v("\\nm")]),t._v(" 前面至少有 "),s("code",[t._v("n")]),t._v(" 个捕获，则 "),s("code",[t._v("n")]),t._v(" 是反向引用，后面跟有字符 "),s("code",[t._v("m")]),t._v("。如果两种前面的情况都不存在，则 "),s("code",[t._v("\\nm")]),t._v(" 匹配八进制值 "),s("code",[t._v("nm")]),t._v("，其中 "),s("code",[t._v("n")]),t._v(" 和 "),s("code",[t._v("m")]),t._v(" 是八进制数字 ("),s("code",[t._v("0-7")]),t._v(")。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\nml")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("当 "),s("code",[t._v("n")]),t._v(" 是八进制数 "),s("code",[t._v("(0-3)")]),t._v("，"),s("code",[t._v("m")]),t._v(" 和 "),s("code",[t._v("l")]),t._v(" 是八进制数 ("),s("code",[t._v("0-7")]),t._v(") 时，匹配八进制转义码 "),s("code",[t._v("nml")]),t._v("。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("\\un")])]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("匹配 "),s("code",[t._v("n")]),t._v("，其中 "),s("code",[t._v("n")]),t._v(" 是以四位十六进制数表示的 Unicode 字符。例如，"),s("code",[t._v("\\u00A9")]),t._v(" 匹配版权符号 ("),s("code",[t._v("©")]),t._v(")。")])])])]),t._v(" "),s("blockquote",[s("p",[t._v('根据 Java Language Specification 的要求，Java 源代码的字符串中的反斜线被解释为 Unicode 转义或其他字符转义。因此必须在字符串字面值中使用两个反斜线，表示正则表达式受到保护，不被 Java 字节码编译器解释。例如，当解释为正则表达式时，字符串字面值 "'),s("code",[t._v("\\b")]),t._v('" 与单个退格字符匹配，而 "'),s("code",[t._v("\\\\b")]),t._v('" 与单词边界匹配。字符串字面值 "'),s("code",[t._v("\\(hello\\)")]),t._v('" 是非法的，将导致编译时错误；要与字符串 '),s("code",[t._v("(hello)")]),t._v(' 匹配，必须使用字符串字面值 "'),s("code",[t._v("\\\\(hello\\\\)")]),t._v('"。')])]),t._v(" "),s("h2",{attrs:{id:"_4-matcher类的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-matcher类的方法"}},[t._v("#")]),t._v(" 4.Matcher类的方法")]),t._v(" "),s("h3",{attrs:{id:"索引方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引方法"}},[t._v("#")]),t._v(" 索引方法")]),t._v(" "),s("p",[t._v("索引方法提供了有用的索引值，精确表明输入字符串中在哪能找到匹配：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("方法及说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public int start()")]),t._v(" 返回以前匹配的初始索引。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public int start(int group)")]),t._v(" 返回在以前的匹配操作期间，由给定组所捕获的子序列的初始索引")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public int end()")]),t._v(" 返回最后匹配字符之后的偏移量。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public int end(int group)")]),t._v(" 返回在以前的匹配操作期间，由给定组所捕获子序列的最后字符之后的偏移量。")])])])]),t._v(" "),s("h3",{attrs:{id:"研究方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#研究方法"}},[t._v("#")]),t._v(" 研究方法")]),t._v(" "),s("p",[t._v("研究方法用来检查输入字符串并返回一个布尔值，表示是否找到该模式：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("方法及说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public boolean lookingAt()")]),t._v(" 尝试将从区域开头开始的输入序列与该模式匹配。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public boolean find()")]),t._v(" 尝试查找与该模式匹配的输入序列的下一个子序列。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public boolean find(int start)")]),t._v(" 重置此匹配器，然后尝试查找匹配该模式、从指定索引开始的输入序列的下一个子序列。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public boolean matches()")]),t._v(" 尝试将整个区域与模式匹配。")])])])]),t._v(" "),s("h3",{attrs:{id:"替换方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换方法"}},[t._v("#")]),t._v(" 替换方法")]),t._v(" "),s("p",[t._v("替换方法是替换输入字符串里文本的方法：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("方法及说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public Matcher appendReplacement(StringBuffer sb, String replacement)")]),t._v(" 实现非终端添加和替换步骤。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public StringBuffer appendTail(StringBuffer sb)")]),t._v(" 实现终端添加和替换步骤。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public String replaceAll(String replacement)")]),t._v(" 替换模式与给定替换字符串相匹配的输入序列的每个子序列。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public String replaceFirst(String replacement)")]),t._v(" 替换模式与给定替换字符串匹配的输入序列的第一个子序列。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public static String quoteReplacement(String s)")]),t._v(" 返回指定字符串的字面替换字符串。这个方法返回一个字符串，就像传递给 "),s("code",[t._v("Matcher")]),t._v(" 类的 "),s("code",[t._v("appendReplacement")]),t._v(" 方法一个字面字符串一样工作。")])])])]),t._v(" "),s("h3",{attrs:{id:"start和end方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start和end方法"}},[t._v("#")]),t._v(" start和end方法")]),t._v(" "),s("p",[t._v('下面是一个对单词 "cat" 出现在输入字符串中出现次数进行计数的例子：')]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegexMatches")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" REGEX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\bcat\\\\b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" INPUT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n                                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cat cat cat cattie cat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REGEX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 matcher 对象")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Match number "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"start(): "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end(): "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上实例编译运行结果如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Match")]),t._v(" number "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n")])])]),s("p",[t._v('可以看到这个例子是使用单词边界，以确保字母 "'),s("code",[t._v("c")]),t._v('" "'),s("code",[t._v("a")]),t._v('" "'),s("code",[t._v("t")]),t._v('" 并非仅是一个较长的词的子串。它也提供了一些关于输入字符串中匹配发生位置的有用信息。')]),t._v(" "),s("p",[s("code",[t._v("Start")]),t._v(" 方法返回在以前的匹配操作期间，由给定组所捕获的子序列的初始索引，"),s("code",[t._v("end")]),t._v(" 方法最后一个匹配字符的索引加 "),s("code",[t._v("1")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"matches和lookingat方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#matches和lookingat方法"}},[t._v("#")]),t._v(" matches和lookingAt方法")]),t._v(" "),s("p",[s("code",[t._v("matches")]),t._v(" 和 "),s("code",[t._v("lookingAt")]),t._v(" 方法都用来尝试匹配一个输入序列模式。它们的不同是 "),s("code",[t._v("matches")]),t._v(" 要求整个序列都匹配，而 "),s("code",[t._v("lookingAt")]),t._v(" 不要求。")]),t._v(" "),s("p",[s("code",[t._v("lookingAt")]),t._v(" 方法虽然不需要整句都匹配，但是需要从第一个字符开始匹配。")]),t._v(" "),s("p",[t._v("这两个方法经常在输入字符串的开始使用。")]),t._v(" "),s("p",[t._v("我们通过下面这个例子，来解释这个功能：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegexMatches")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" REGEX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" INPUT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fooooooooooooooooo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" INPUT2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ooooofoooooooooooo"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" matcher2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REGEX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       matcher "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       matcher2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INPUT2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Current REGEX is: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("REGEX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Current INPUT is: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Current INPUT2 is: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("INPUT2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lookingAt(): "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookingAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"matches(): "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("matcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lookingAt(): "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("matcher2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookingAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上实例编译运行结果如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Current")]),t._v(" REGEX is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" foo\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Current")]),t._v(" INPUT is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fooooooooooooooooo\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Current")]),t._v(" INPUT2 is"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ooooofoooooooooooo\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookingAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lookingAt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),s("h3",{attrs:{id:"replacefirst和replaceall方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replacefirst和replaceall方法"}},[t._v("#")]),t._v(" replaceFirst和replaceAll方法")]),t._v(" "),s("p",[s("code",[t._v("replaceFirst")]),t._v(" 和 "),s("code",[t._v("replaceAll")]),t._v(" 方法用来替换匹配正则表达式的文本。不同的是，"),s("code",[t._v("replaceFirst")]),t._v(" 替换首次匹配，"),s("code",[t._v("replaceAll")]),t._v(" 替换所有匹配。")]),t._v(" "),s("p",[t._v("下面的例子来解释这个功能：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegexMatches")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" REGEX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dog"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" INPUT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The dog says meow. "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("                                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All dogs say meow."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" REPLACE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REGEX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get a matcher object       Matcher m = p.matcher(INPUT);        INPUT = m.replaceAll(REPLACE);       System.out.println(INPUT);   }}")]),t._v("\n")])])]),s("p",[t._v("以上实例编译运行结果如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("The")]),t._v(" cat says "),s("span",{pre:!0,attrs:{class:"token class-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("meow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),t._v(" All")]),t._v(" cats say meow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h3",{attrs:{id:"appendreplacement和appendtail方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#appendreplacement和appendtail方法"}},[t._v("#")]),t._v(" appendReplacement和appendTail方法")]),t._v(" "),s("p",[s("code",[t._v("Matcher")]),t._v(" 类也提供了 "),s("code",[t._v("appendReplacement")]),t._v(" 和 "),s("code",[t._v("appendTail")]),t._v(" 方法用于文本替换：")]),t._v(" "),s("p",[t._v("看下面的例子来解释这个功能：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RegexMatches")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" REGEX "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a*b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" INPUT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aabfooaabfooabfoobkkk"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" REPLACE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),t._v(" p "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("compile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("REGEX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 matcher 对象")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Matcher")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" p"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("matcher")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("INPUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendReplacement")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("REPLACE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendTail")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上实例编译运行结果如下：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("foo"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("kkk\n")])])]),s("h3",{attrs:{id:"patternsyntaxexception类的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patternsyntaxexception类的方法"}},[t._v("#")]),t._v(" PatternSyntaxException类的方法")]),t._v(" "),s("p",[s("code",[t._v("PatternSyntaxException")]),t._v(" 是一个非强制异常类，它指示一个正则表达式模式中的语法错误。")]),t._v(" "),s("p",[s("code",[t._v("PatternSyntaxException")]),t._v(" 类提供了下面的方法来帮助我们查看发生了什么错误。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("序号")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("方法及说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public String getDescription()")]),t._v(" 获取错误的描述。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public int getIndex()")]),t._v(" 获取错误的索引。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public String getPattern()")]),t._v(" 获取错误的正则表达式模式。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[s("code",[t._v("public String getMessage()")]),t._v(" 返回多行字符串，包含语法错误及其索引的描述、错误的正则表达式模式和模式中错误索引的可视化指示。")])])])]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[t._v("https://www.cnblogs.com/liuxiaojun/p/training-java-regular-expression.html")])])])}),[],!1,null,null,null);a.default=e.exports}}]);