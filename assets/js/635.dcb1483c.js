(window.webpackJsonp=window.webpackJsonp||[]).push([[635],{1151:function(a,s,t){"use strict";t.r(s);var n=t(53),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("本文主要是介绍 JVM-类加载过程 。")])]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#jvm-类的加载过程"}},[a._v("JVM——类的加载过程")]),t("ul",[t("li",[t("a",{attrs:{href:"#附一张图方便理解-一个类的执行过程"}},[a._v("附一张图方便理解，一个类的执行过程")])])])]),t("li",[t("a",{attrs:{href:"#类的加载过程-简明的来说"}},[a._v("类的加载过程，简明的来说")])]),t("li",[t("a",{attrs:{href:"#一、加载"}},[a._v("一、加载")])]),t("li",[t("a",{attrs:{href:"#二、验证"}},[a._v("二、验证")])]),t("li",[t("a",{attrs:{href:"#三、准备"}},[a._v("三、准备")])]),t("li",[t("a",{attrs:{href:"#四、解析"}},[a._v("四、解析")])]),t("li",[t("a",{attrs:{href:"#五、初始化"}},[a._v("五、初始化")])]),t("li",[t("a",{attrs:{href:"#【-】"}},[a._v("【----------------------------】")])]),t("li",[t("a",{attrs:{href:"#jvm-三个classloader详解"}},[a._v("JVM——三个ClassLoader详解")])]),t("li",[t("a",{attrs:{href:"#classloader重要方法"}},[a._v("ClassLoader重要方法")])]),t("li",[t("a",{attrs:{href:"#【-】"}},[a._v("【----------------------------】")])]),t("li",[t("a",{attrs:{href:"#jvm-类加载器的双亲委派模型"}},[a._v("JVM——类加载器的双亲委派模型")])]),t("li",[t("a",{attrs:{href:"#类加载器双亲委派模型-如下图所示"}},[a._v("类加载器双亲委派模型，如下图所示：")]),t("ul",[t("li",[t("a",{attrs:{href:"#双亲委派模型的工作过程"}},[a._v("双亲委派模型的工作过程")])]),t("li",[t("a",{attrs:{href:"#好处"}},[a._v("好处")])])])]),t("li",[t("a",{attrs:{href:"#【-】"}},[a._v("【----------------------------】")])]),t("li",[t("a",{attrs:{href:"#面试官-java双亲委派机制及作用"}},[a._v("面试官：java双亲委派机制及作用")])]),t("li",[t("a",{attrs:{href:"#什么是双亲委派机制"}},[a._v("什么是双亲委派机制")]),t("ul",[t("li",[t("a",{attrs:{href:"#类加载器的类别"}},[a._v("类加载器的类别")])]),t("li",[t("a",{attrs:{href:"#委派机制的流程图"}},[a._v("委派机制的流程图")])])])]),t("li",[t("a",{attrs:{href:"#双亲委派机制的作用"}},[a._v("双亲委派机制的作用")])]),t("li",[t("a",{attrs:{href:"#参考文章"}},[a._v("参考文章")])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"jvm-类的加载过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-类的加载过程"}},[a._v("#")]),a._v(" JVM——类的加载过程")]),a._v(" "),t("h3",{attrs:{id:"附一张图方便理解-一个类的执行过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附一张图方便理解-一个类的执行过程"}},[a._v("#")]),a._v(" 附一张图方便理解，一个类的执行过程")]),a._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:a.$withBase("/assets/img/java/jvm/classloaderprocedure-1.png"),alt:"wxmp"}}),a._v(" "),t("h2",{attrs:{id:"类的加载过程-简明的来说"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的加载过程-简明的来说"}},[a._v("#")]),a._v(" 类的加载过程，简明的来说")]),a._v(" "),t("p",[a._v("类装饰器就是寻找类的字节码文件并构造出类在JVM内部表示的对象组件。在Java中，类装载器把一个类装入JVM中，要经过以下步骤：")]),a._v(" "),t("ul",[t("li",[t("ol",[t("li",[a._v("装载：查找和导入Class文件；")])])]),a._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[a._v("链接：执行校验、准备和解析步骤，其中解析步骤是可以选择的：")]),a._v(" "),t("li",[a._v("校验：检查载入Class文件数据的正确性；")]),a._v(" "),t("li",[a._v("准备：给类的静态变量分配存储空间；")]),a._v(" "),t("li",[a._v("解析：将符号引用转成直接引用；")])])]),a._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[a._v("初始化：对类的静态变量、静态代码块执行初始化工作。")])])])]),a._v(" "),t("p",[a._v("类装载工作由ClassLoader及其子类负责，ClassLoader是一个重要的Java执行时系统组件，它负责在运行时查找和装入Class字节码文件。JVM在运行时会产生三个ClassLoader：根装载器、ExtClassLoader（扩展类装载器）和AppClassLoader（系统类装载器）。其中，根装载器不是ClassLoader的子类，它使用C++编写，因此我们在Java中看不到它，根装载器负责装载JRE的核心类库，如JRE目标下的rt.jar、charsets.jar等。ExtClassLoader和AppClassLoader都是ClassLoader的子类。其中ExtClassLoader负责装载JRE目录ext中的JAR类包；AppClassLoader负责装载ClassPath路径下的类包。")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://www.cnblogs.com/zhengbin/p/5631987.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("关于这三个ClassLoader的详解博客链接"),t("OutboundLink")],1)]),a._v(" "),t("h2",{attrs:{id:"一、加载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、加载"}},[a._v("#")]),a._v(" 一、加载")]),a._v(" "),t("p",[a._v("“加载” 是“类加载”过程的一个阶段。在加载阶段，虚拟机需要完成以下3件事情：")]),a._v(" "),t("ul",[t("li",[t("ol",[t("li",[a._v("通过一个类的全限定名来获取定义此类的二进制字节流。")])])]),a._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[a._v("将这个字节流所代表的静态存储结构转化为方法区的运行时数据结构。")])])]),a._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[a._v("在内存中生成一个代表这个类的java.lang.Class对象，作为方法区这个类的各种数据的访问入口。")])])])]),a._v(" "),t("p",[a._v("虚拟机规范的这3点要求其实并不算具体，因此虚拟机实现与具体应用的灵活度都是相当大的。")]),a._v(" "),t("p",[a._v("相对于类加载过程的其他阶段，一个非数组类的加载阶段（准确地说，是加载阶段中获取类的二进制字节流的动作）是开发人员可控性最强的，因为加载阶段既可以使用系统提供的引导类加载器来完成，也可以由用户自定义的类加载器区完成，开发人员可以通过定义自己的类加载器去控制字节流的获取方式（即重写一个类加载器的loadClass()方法）。")]),a._v(" "),t("p",[a._v("对于数组类而言，数组类本身不通过类加载器创建，它是由Java虚拟机直接创建的。但数组类与类加载器任然有很密切的关系，因为数组类的元素类型最终是要靠类加载器去创建。")]),a._v(" "),t("p",[a._v("加载阶段完成后，虚拟机外部的二进制字节流就按照虚拟机所需的格式存储在方法区之中，方法区中的数据存储格式由虚拟机实现自行定义，虚拟机规范未规定此区域的具体数据结构。然后在内存中实例化一个java.lang.Class类的对象（并没有明确规定是在Java堆中，对于HotSpot虚拟机而言，Class对象比较特殊，它虽然是对象，但是存放在方法区里面），这个对象将作为程序访问方法区中的这些类型数据的外部接口。")]),a._v(" "),t("p",[a._v("加载阶段与连接阶段的部分内容（如一部分字节码文件格式验证动作）是交叉进行的，加载阶段尚未完成，连接阶段可能已经开始，但这些夹在加载阶段之中进行的动作，仍然属于连接阶段的内容，这两个阶段的开始时间仍然保持着固定的先后顺序。")]),a._v(" "),t("h2",{attrs:{id:"二、验证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、验证"}},[a._v("#")]),a._v(" 二、验证")]),a._v(" "),t("p",[a._v("验证是连接阶段的第一步，这一阶段的目的是为了确保Class文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。")]),a._v(" "),t("p",[a._v("Java语言本身是相对安全的语言，使用纯粹的Java代码无法做到注入访问数组边界意外的数据、将一个对象转型为它并未实现的类型、跳转到不存在的代码行之类的事情，如果这样做了，编译器将拒绝编译。")]),a._v(" "),t("p",[a._v("但前面已经说过，Class文件并不一定要求用Java源码编译而来，可以使用任何途径产生，甚至包括用十六进制编辑器直接编写来产生Class文件。在字节码语言层面上，上述Java代码无法做到的事情都是可以实现的，至少语义上是可以表达出来的。")]),a._v(" "),t("p",[a._v("虚拟机如果不检查输入的字节流，对其完全信任的话，很可能会因为载入了有害的字节流而导致系统崩溃，所以验证是虚拟机对自身保护的一项重要工作。")]),a._v(" "),t("h2",{attrs:{id:"三、准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、准备"}},[a._v("#")]),a._v(" 三、准备")]),a._v(" "),t("p",[a._v("准备阶段是正式为类变量分配内存并设置类变量初始值得阶段，这些变量所使用的内存都讲在方法区中进行分配。这时候进行内存分配的仅包括类变量（被static修饰的变量），而不包括实例变量，实例变量将会在对象实例化时随着对象一起分配在Java堆中。其次，这里所说的初始值“通常情况”下是数据类型的零值，假设一个类变量的定义为：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("123")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),t("p",[a._v("那变量value在准备阶段过后的初始值为0而不是123，因为这时候尚未开始执行任何Java方法，而把value赋值为123的putstatic指令是程序被编译后，存放于类构造器"),t("code",[a._v("<clinit>()")]),a._v("方法之中，所以把value赋值为123的动作将在初始化阶段才会执行。")]),a._v(" "),t("h2",{attrs:{id:"四、解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、解析"}},[a._v("#")]),a._v(" 四、解析")]),a._v(" "),t("p",[a._v("解析阶段是虚拟机将常量池内的符号引用替换为直接引用的过程。")]),a._v(" "),t("h2",{attrs:{id:"五、初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、初始化"}},[a._v("#")]),a._v(" 五、初始化")]),a._v(" "),t("p",[a._v("类初始化阶段是类加载过程的最后一步，前面的类加载过程中，除了在加载阶段用户应用程序可以通过自定义类加载器参与之外，其余动作完全由虚拟机主导和控制。到了初始化阶段，才真正开始执行类中定义的Java程序代码（或者说是字节码）。")]),a._v(" "),t("p",[a._v("在准备阶段，变量已经赋过一次系统要求的初始值，而在初始化阶段，则根据程序员通过程序制定的主观计划去初始化类变量和其他资源，或者可以从另外一个角度来表达：初始化阶段是执行类构造器<clinit()>方法的过程。")]),a._v(" "),t("h2",{attrs:{id:"【-】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【-】"}},[a._v("#")]),a._v(" 【----------------------------】")]),a._v(" "),t("h2",{attrs:{id:"jvm-三个classloader详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-三个classloader详解"}},[a._v("#")]),a._v(" JVM——三个ClassLoader详解")]),a._v(" "),t("p",[a._v("类装载工作由ClassLoader及其子类负责，ClassLoader是一个重要的Java执行时系统组件，它负责在运行时查找和装入Class字节码文件。JVM在运行时会产生三个ClassLoader：根装载器、ExtClassLoader（扩展类装载器）和AppClassLoader（系统类装载器）。其中，根装载器不是ClassLoader的子类，它使用C++编写，因此我们在Java中看不到它，根装载器负责装载JRE的核心类库，如JRE目标下的rt.jar、charsets.jar等。ExtClassLoader和AppClassLoader都是ClassLoader的子类。其中ExtClassLoader负责装载JRE目录ext中的JAR类包；AppClassLoader负责装载ClassPath路径下的类包。")]),a._v(" "),t("ul",[t("li",[a._v("启动类加载器（Bootstrap ClassLoader）：这个类加载器负责将存放在<JAVA_HOME>\\lib目录中的。启动类加载器无法被Java程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给引导类加载器，那直接使用null代替即可。")]),a._v(" "),t("li",[a._v("扩展类加载器（Extension ClassLoader）：这个加载器由sun.misc.Launcher$ExtClassLoader实现，它负责加载<JAVA_HOME>\\lib\\ext目录中的，或者被java.ext.dirs系统变量所指定的路径中的所有类库，开发者可以直接使用扩展类加载器。")]),a._v(" "),t("li",[a._v("应用程序类加载器（Application ClassLoader）：这个类加载器由sun.misc.Launcher$AppClassLoader实现。由于这个类加载器是ClassLoader中的getSystemClassLoader()方法的返回值，所以一般也称它为系统类加载器。它负责加载用户类路径（ClassPath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义自己的类加载器，一般情况下这个就是程序中默认的类加载器。")])]),a._v(" "),t("p",[a._v("我们的应用程序都是由这3种类加载器互相配合进行加载的，如果有必要，还可以加入自己定义的类加载器。这些类加载器之间的关系一般为：")]),a._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:a.$withBase("/assets/img/java/jvm/classloaderprocedure-2.png"),alt:"wxmp"}}),a._v(" "),t("p",[a._v("上图展示的类加载器之间的这种层次关系，称为类加载器的双亲委派模型。双亲委派模型要求除了顶层的启动类加载器外，其余的类加载器都应当有自己的父类加载器。这里类加载器之间的父子关系一般不会以继承的关系来实现，而是都使用组合关系来复用父加载器的代码。")]),a._v(" "),t("p",[t("a",{attrs:{href:"http://www.cnblogs.com/zhengbin/p/5632691.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("类加载器的双亲委派模型详解博客链接"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("这三个类装载器之间存在父子层级关系，即根装载器是ExtClassLoader的父装载器，ExtClassLoader是父类装载器。默认情况下，使用AppClassLoader装载应用程序的类，用以下代码证明：")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n 2  * @author zhengbinMac\n 3  */")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoaderTest")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),a._v(" \n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassLoader")]),a._v(" loader "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("currentThread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getContextClassLoader")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"current loader:"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"parent loader:"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v("         "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"grandparent loader:"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v(" loader"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("11")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),a._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n13      * output:\n14      *    current loader:sun.misc.Launcher$AppClassLoader@1b6d3586\n15      *    parent loader:sun.misc.Launcher$ExtClassLoader@1540e19d \n16      *    grandparent loader:null // 因为根类装载器在Java中访问不到，所有返回null\n17      */")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("18")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("p",[a._v("Thread.currentThread():返回对当前正在执行的线程对象的引用。")]),a._v(" "),t("p",[a._v("getContextClassLoader():返回该线程的上下文 ClassLoader。")]),a._v(" "),t("p",[a._v("通过以上的输出信息，可以明白，ClassLoader是AppClassLoader，父ClassLoader是ExtClassLoader，祖父ClassLoader是根类装载器，因为在Java中无法获得它的句柄，所以直接返回null。")]),a._v(" "),t("p",[a._v("除了JVM默认的三个ClassLoader以外，可以编写自己的第三方类装载器，以实现一些特殊的需求。类文件被装载并解析后，在JVM内将拥有一个对应的java.lang.Class类描述对象，该类的实例都拥有指向这个类描述对象的引用，而类描述对象又拥有指向关联ClassLoader的引用。如下图所示：")]),a._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:a.$withBase("/assets/img/java/jvm/classloaderprocedure-3.png"),alt:"wxmp"}}),a._v(" "),t("h2",{attrs:{id:"classloader重要方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#classloader重要方法"}},[a._v("#")]),a._v(" ClassLoader重要方法")]),a._v(" "),t("p",[a._v("在Java中，ClassLoader是一个抽象类，位于java.lang包中。下面对该类的一些重要接口方法进行介绍：")]),a._v(" "),t("ul",[t("li",[a._v("Class loadClass(String name)")])]),a._v(" "),t("p",[a._v("name参数指定类装载器需要装载类的名字，必须使用全限定类名，如com.zhengbin.entity.Student。该方法有一个重载方法loadClass(String name, boolean resolve)，resolve参数告诉类装载器是否需要解析该类。在初始化类之前，应考虑进行类解析的工作，但并不是所有的类都需要解析，如果JVM只需要知道该类是否存在或找出该类的超类，那么就不需要进行解析。")]),a._v(" "),t("ul",[t("li",[a._v("Class defineClass(String name, byte[] b, int off, int len)")])]),a._v(" "),t("p",[a._v("将类文件的字节数组转换成JVM内部的java.lang.Class对象。字节数组可以从本地文件系统、远程网络获取。name为字节数组对应的全限定类名。")]),a._v(" "),t("ul",[t("li",[a._v("Class findSystemClass(String name)")])]),a._v(" "),t("p",[a._v("从本地文件系统载入Class文件，如果本地文件系统不存在该Class文件，将抛出ClassNotFoundException异常。该方法是JVM默认使用的装载机制。")]),a._v(" "),t("ul",[t("li",[a._v("ClassLoader getParent()")])]),a._v(" "),t("p",[a._v("获取类装载器的父装载器，除根装载器外，所有的类装载器都有且仅有一个父装载器，ExtClassLoader的父装载器是根装载器，因为根装载器非Java编写，所以无法获得，将返回null。")]),a._v(" "),t("h2",{attrs:{id:"【-】-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【-】-2"}},[a._v("#")]),a._v(" 【----------------------------】")]),a._v(" "),t("h2",{attrs:{id:"jvm-类加载器的双亲委派模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jvm-类加载器的双亲委派模型"}},[a._v("#")]),a._v(" JVM——类加载器的双亲委派模型")]),a._v(" "),t("h2",{attrs:{id:"类加载器双亲委派模型-如下图所示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载器双亲委派模型-如下图所示"}},[a._v("#")]),a._v(" 类加载器双亲委派模型，如下图所示：")]),a._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:a.$withBase("/assets/img/java/jvm/classloaderprocedure-2.png"),alt:"wxmp"}}),a._v(" "),t("h3",{attrs:{id:"双亲委派模型的工作过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派模型的工作过程"}},[a._v("#")]),a._v(" 双亲委派模型的工作过程")]),a._v(" "),t("p",[a._v("如果一个类加载器收到了类加载的请求，它首先不会自己去尝试加载这个类，而是把这个请求委派给父类加载器去完成，每一个层次的类加载器都是如此，因此所有的加载请求最终都应该送到顶层的启动类加载器中，只有当父加载器反馈自己无法完成这个加载请求（它的搜索范围中没有找到所需的类）时，子加载器才会尝试自己去加载。")]),a._v(" "),t("h3",{attrs:{id:"好处"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#好处"}},[a._v("#")]),a._v(" 好处")]),a._v(" "),t("p",[a._v("使用双亲委派模型来组织类加载器之间的关系，有一个显而易见得好处就是Java类随着它的类加载器一起具备了一种带有优先级的层次关系。例如类java.lang.Object，它存放在rt.jar之中，无论哪一个类加载器要加载这个类，最终都是委派给处于模型最顶端的启动类加载器进行加载，因此Object类在程序的各种类加载器环境中都是同一个类。相反，如果没有使用双亲委派模型，由各个类加载器自行去加载的话，如果用户自己编写一个称谓java.lang.Object的类，并放在程序的ClassPath中，那系统中将会出现多个不同的Object类，Java类型体系中最基础的行为也就无法保证，应用程序也将会变得一片混乱。")]),a._v(" "),t("h2",{attrs:{id:"【-】-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#【-】-3"}},[a._v("#")]),a._v(" 【----------------------------】")]),a._v(" "),t("h2",{attrs:{id:"面试官-java双亲委派机制及作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试官-java双亲委派机制及作用"}},[a._v("#")]),a._v(" 面试官：java双亲委派机制及作用")]),a._v(" "),t("h2",{attrs:{id:"什么是双亲委派机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是双亲委派机制"}},[a._v("#")]),a._v(" 什么是双亲委派机制")]),a._v(" "),t("p",[a._v("当某个类加载器需要加载某个"),t("code",[a._v(".class")]),a._v("文件时，它首先把这个任务委托给他的上级类加载器，递归这个操作，如果上级的类加载器没有加载，自己才会去加载这个类。")]),a._v(" "),t("h3",{attrs:{id:"类加载器的类别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类加载器的类别"}},[a._v("#")]),a._v(" 类加载器的类别")]),a._v(" "),t("h4",{attrs:{id:"bootstrapclassloader-启动类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bootstrapclassloader-启动类加载器"}},[a._v("#")]),a._v(" BootstrapClassLoader（启动类加载器）")]),a._v(" "),t("p",[t("code",[a._v("c++")]),a._v("编写，加载"),t("code",[a._v("java")]),a._v("核心库 "),t("code",[a._v("java.*")]),a._v(",构造"),t("code",[a._v("ExtClassLoader")]),a._v("和"),t("code",[a._v("AppClassLoader")]),a._v("。由于引导类加载器涉及到虚拟机本地实现细节，开发者无法直接获取到启动类加载器的引用，所以不允许直接通过引用进行操作")]),a._v(" "),t("h4",{attrs:{id:"extclassloader-标准扩展类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#extclassloader-标准扩展类加载器"}},[a._v("#")]),a._v(" ExtClassLoader （标准扩展类加载器）")]),a._v(" "),t("p",[t("code",[a._v("java")]),a._v("编写，加载扩展库，如"),t("code",[a._v("classpath")]),a._v("中的"),t("code",[a._v("jre")]),a._v(" ，"),t("code",[a._v("javax.*")]),a._v("或者\n"),t("code",[a._v("java.ext.dir")]),a._v(" 指定位置中的类，开发者可以直接使用标准扩展类加载器。")]),a._v(" "),t("h4",{attrs:{id:"appclassloader-系统类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#appclassloader-系统类加载器"}},[a._v("#")]),a._v(" AppClassLoader（系统类加载器）")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("java`编写，加载程序所在的目录，如`user.dir`所在的位置的`class\n")])])]),t("h4",{attrs:{id:"customclassloader-用户自定义类加载器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#customclassloader-用户自定义类加载器"}},[a._v("#")]),a._v(" CustomClassLoader（用户自定义类加载器）")]),a._v(" "),t("p",[t("code",[a._v("java")]),a._v("编写,用户自定义的类加载器,可加载指定路径的"),t("code",[a._v("class")]),a._v("文件")]),a._v(" "),t("h4",{attrs:{id:"源码分析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[a._v("#")]),a._v(" 源码分析")]),a._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("protected")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("boolean")]),a._v(" resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("throws")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("synchronized")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getClassLoadingLock")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 首先检查这个classsh是否已经加载过了")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Class")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("?")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findLoadedClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" t0 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nanoTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// c==null表示没有加载，如果有父类的加载器则让父类加载器加载")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("loadClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("else")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//如果父类的加载器为空 则说明递归到bootStrapClassloader了")]),a._v("\n                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//bootStrapClassloader比较特殊无法通过get获取")]),a._v("\n                        c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findBootstrapClassOrNull")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("catch")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ClassNotFoundException")]),a._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("==")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//如果bootstrapClassLoader 仍然没有加载过，则递归回来，尝试自己去加载class")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("long")]),a._v(" t1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("nanoTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    c "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("findClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("misc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("PerfCounter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getParentDelegationTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("addTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" t0"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("misc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("PerfCounter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getFindClassTime")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("addElapsedTimeFrom")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("t1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[a._v("sun"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("misc"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")])]),a._v("PerfCounter")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getFindClasses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n                "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("resolveClass")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" c"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),t("h3",{attrs:{id:"委派机制的流程图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#委派机制的流程图"}},[a._v("#")]),a._v(" 委派机制的流程图")]),a._v(" "),t("img",{staticClass:"zoom-custom-imgs",attrs:{src:a.$withBase("/assets/img/java/jvm/classloaderprocedure-4.png"),alt:"wxmp"}}),a._v(" "),t("p",[a._v("image.png")]),a._v(" "),t("h2",{attrs:{id:"双亲委派机制的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#双亲委派机制的作用"}},[a._v("#")]),a._v(" 双亲委派机制的作用")]),a._v(" "),t("ul",[t("li",[a._v("1、防止重复加载同一个"),t("code",[a._v(".class")]),a._v("。通过委托去向上面问一问，加载过了，就不用再加载一遍。保证数据安全。")]),a._v(" "),t("li",[a._v("2、保证核心"),t("code",[a._v(".class")]),a._v("不能被篡改。通过委托方式，不会去篡改核心"),t("code",[a._v(".clas")]),a._v("，即使篡改也不会去加载，即使加载也不会是同一个"),t("code",[a._v(".class")]),a._v("对象了。不同的加载器加载同一个"),t("code",[a._v(".class")]),a._v("也不是同一个"),t("code",[a._v("Class")]),a._v("对象。这样保证了"),t("code",[a._v("Class")]),a._v("执行安全。")])]),a._v(" "),t("h2",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),t("ul",[t("li",[a._v("https://www.cnblogs.com/zhengbin/p/5631363.html#autoid-0-1-0")]),a._v(" "),t("li",[a._v("https://www.cnblogs.com/zhengbin/p/5631987.html")]),a._v(" "),t("li",[a._v("https://www.cnblogs.com/zhengbin/p/5632691.html")]),a._v(" "),t("li",[a._v("https://www.jianshu.com/p/1e4011617650")])])])}),[],!1,null,null,null);s.default=e.exports}}]);