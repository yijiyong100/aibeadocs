(window.webpackJsonp=window.webpackJsonp||[]).push([[715],{1231:function(t,a,s){"use strict";s.r(a);var e=s(53),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本文主要是介绍 Linux命令-Http工具Curl  。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#linux-curl-post-相关详解"}},[t._v("Linux curl post 相关详解")])]),s("li",[s("a",{attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("application/x-www-form-urlencoded")])]),s("li",[s("a",{attrs:{href:"#multipart-form-data"}},[t._v("multipart/form-data")])]),s("li",[s("a",{attrs:{href:"#application-json"}},[t._v("application/json")])]),s("li",[s("a",{attrs:{href:"#文件内容作为要提交的数据"}},[t._v("文件内容作为要提交的数据")])]),s("li",[s("a",{attrs:{href:"#【-】"}},[t._v("【----------------------------】")])]),s("li",[s("a",{attrs:{href:"#linux-curl命令详解"}},[t._v("Linux curl命令详解")])]),s("li",[s("a",{attrs:{href:"#命令-curl"}},[t._v("命令：curl")])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"linux-curl-post-相关详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-curl-post-相关详解"}},[t._v("#")]),t._v(" Linux curl post 相关详解")]),t._v(" "),s("p",[t._v("HTTP 的 POST 请求通常是用于提交数据，可以通过这篇文章来了解各种提交方式："),s("a",{attrs:{href:"https://imququ.com/post/four-ways-to-post-data-in-http.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("四种常见的 POST 提交数据方式"),s("OutboundLink")],1),t._v("。做 Web 后端开发时，不可避免地要自己给自己发请求来调试接口，这里要记录的内容是如何使用命令行工具 "),s("code",[t._v("curl")]),t._v(" 来进行各种方式的 POST 请求。")]),t._v(" "),s("h2",{attrs:{id:"application-x-www-form-urlencoded"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-x-www-form-urlencoded"}},[t._v("#")]),t._v(" "),s("code",[t._v("application/x-www-form-urlencoded")])]),t._v(" "),s("p",[t._v("最常见的一种 POST 请求，用 curl 发起这种请求也很简单。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1")])]),t._v(" "),s("th",[s("code",[t._v("$ curl localhost:3000/api/basic -X POST -d 'hello=world'")])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"multipart-form-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#multipart-form-data"}},[t._v("#")]),t._v(" "),s("code",[t._v("multipart/form-data")])]),t._v(" "),s("p",[t._v("这种请求一般涉及到文件上传。后端对这种类型请求的处理也复杂一些。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1")])]),t._v(" "),s("th",[s("code",[t._v("$ curl localhost:3000/api/multipart -F raw=@raw.data -F hello=world")])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"application-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-json"}},[t._v("#")]),t._v(" "),s("code",[t._v("application/json")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1")])]),t._v(" "),s("th",[s("code",[t._v('$ curl localhost:3000/api/json -X POST -d \'{"hello": "world"}\' --header "Content-Type: application/json"')])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("跟发起 "),s("code",[t._v("application/x-www-form-urlencoded")]),t._v(" 类型的 POST 请求类似，"),s("code",[t._v("-d")]),t._v(" 参数值是 JSON 字符串，并且多了一个 "),s("code",[t._v("Content-Type: application/json")]),t._v(" 指定发送内容的格式。")]),t._v(" "),s("p",[t._v("这个例子和 "),s("code",[t._v("application/x-www-form-urlencoded")]),t._v(" 中的例子发起的请求，到了 Web 后端经过解析后，得到的结果都是 "),s("code",[t._v("hello: world")]),t._v(" 键值对。")]),t._v(" "),s("h2",{attrs:{id:"文件内容作为要提交的数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件内容作为要提交的数据"}},[t._v("#")]),t._v(" 文件内容作为要提交的数据")]),t._v(" "),s("p",[t._v("如果要提交的数据不像前面例子中只有一个 "),s("code",[t._v("hello: world")]),t._v(" 键值对，数据比较多，都写在命令行里很不方便，也容易出错，那么可以把数据内容先写到文件里，通过 "),s("code",[t._v("-d @filename")]),t._v(" 的方式来提交数据。这是 "),s("code",[t._v("-d")]),t._v(" 参数的一种使用方式，所以前面用到 "),s("code",[t._v("-d")]),t._v(" 参数的地方都可以这样用。")]),t._v(" "),s("p",[t._v("实际上就是把 "),s("code",[t._v("-d")]),t._v(" 参数值写在命令行里，变成了写在文件里。跟 "),s("code",[t._v("multipart/form-data")]),t._v(" 中上传文件的 POST 方式"),s("strong",[t._v("不是")]),t._v("一回事。"),s("code",[t._v("@")]),t._v(" 符号表明后面跟的是文件名，要读取这个文件的内容作为 "),s("code",[t._v("-d")]),t._v(" 的参数。")]),t._v(" "),s("p",[t._v("例如，有一个 JSON 文件 "),s("code",[t._v("data.json")]),t._v(" 内容如下:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1 2 3 4 5")])]),t._v(" "),s("th",[s("code",[t._v('{ "hello": "world", "xxx": "yyy", "a": ["ooo", "mmm"] }')])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("就可以通过")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1")])]),t._v(" "),s("th",[s("code",[t._v('$ curl localhost:3000/api/json -X POST -d @data.json --header "Content-Type: application/json"')])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("来提交数据。")]),t._v(" "),s("p",[t._v("如果要用 "),s("code",[t._v("application/x-www-form-urlencoded")]),t._v(" 方式提交，后端解析出来同样的数据，那么 "),s("code",[t._v("-d")]),t._v(" 的参数是这样的（注意数组参数的写法）")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1")])]),t._v(" "),s("th",[s("code",[t._v("hello=world&xxx=yyy&a[]=ooo&a[]=mmm")])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("把这个字符串直接作为 "),s("code",[t._v("-d")]),t._v(" 的参数或者把它写到文件 "),s("code",[t._v("data.txt")]),t._v(" 然后通过 "),s("code",[t._v("-d @data.txt")]),t._v(" 的方式，发起 POST 请求，行为和结果是一样的。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[s("code",[t._v("1 2 3")])]),t._v(" "),s("th",[s("code",[t._v("$ curl localhost:3000/api/basic -X POST -d 'hello=world&xxx=yyy&a[]=ooo&a[]=mmm' $ curl localhost:3000/api/basic -X POST -d @data.txt")])])])]),t._v(" "),s("tbody",[s("tr",[s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h2",{attrs:{id:"【-】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#【-】"}},[t._v("#")]),t._v(" 【----------------------------】")]),t._v(" "),s("h2",{attrs:{id:"linux-curl命令详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-curl命令详解"}},[t._v("#")]),t._v(" Linux curl命令详解")]),t._v(" "),s("h2",{attrs:{id:"命令-curl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命令-curl"}},[t._v("#")]),t._v(" 命令：curl")]),t._v(" "),s("p",[t._v("在Linux中curl是一个利用URL规则在命令行下工作的文件传输工具，可以说是一款很强大的http命令行工具。它支持文件的上传和下载，是综合传输工具，但按传统，习惯称url为下载工具。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("语法："),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl [option] [url]")]),t._v("\n")])])]),s("p",[t._v("常见参数：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("-A/--user-agent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              设置用户代理发送给服务器\n-b/--cookie "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("string/file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    cookie字符串或文件读取位置\n-c/--cookie-jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                    操作结束后把cookie写入到这个文件中\n-C/--continue-at "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("offset"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            断点续转\n-D/--dump-header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              把header信息写入到该文件中\n-e/--referer                                  来源网址\n-f/--fail                                          连接失败时不显示http错误\n-o/--output                                  把输出写到该文件中\n-O/--remote-name                      把输出写到该文件中，保留远程文件的文件名\n-r/--range "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("range"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                      检索来自HTTP/1.1或FTP服务器字节范围\n-s/--silent                                    静音模式。不输出任何东西\n-T/--upload-file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  上传文件\n-u/--user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      设置服务器的用户和密码\n-w/--write-out "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("                什么输出完成后\n-x/--proxy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              在给定的端口上使用HTTP代理\n-"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/--progress-bar                        进度条显示当前的传送状态")]),t._v("\n")])])]),s("p",[t._v("例子：\n1、基本用法")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl http://www.linux.com")]),t._v("\n")])])]),s("p",[t._v("执行后，www.linux.com 的html就会显示在屏幕上了\nPs：由于安装linux的时候很多时候是没有安装桌面的，也意味着没有浏览器，因此这个方法也经常用于测试一台服务器是否可以到达一个网站")]),t._v(" "),s("p",[t._v("2、保存访问的网页\n2.1:使用linux的重定向功能保存")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl http://www.linux.com >> linux.html")]),t._v("\n")])])]),s("p",[t._v("2.2:可以使用curl的内置option:-o(小写)保存网页")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -o linux.html http://www.linux.com\n")])])]),s("p",[t._v("执行完成后会显示如下界面，显示100%则表示保存成功")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("% Total    % Received % Xferd  Average Speed  Time    Time    Time  Current\n                                Dload  Upload  Total  Spent    Left  Speed\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("79684")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("79684")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("  3437k      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" --:--:-- --:--:-- --:--:-- 7781k\n")])])]),s("p",[t._v("2.3:可以使用curl的内置option:-O(大写)保存网页中的文件\n要注意这里后面的url要具体到某个文件，不然抓不下来")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -O http://www.linux.com/hello.sh")]),t._v("\n")])])]),s("p",[t._v("3、测试网页返回值")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -o /dev/null -s -w %{http_code} www.linux.com")]),t._v("\n")])])]),s("p",[t._v("Ps:在脚本中，这是很常见的测试网站是否正常的用法")]),t._v(" "),s("p",[t._v("4、指定proxy服务器以及其端口\n很多时候上网需要用到代理服务器(比如是使用代理服务器上网或者因为使用curl别人网站而被别人屏蔽IP地址的时候)，幸运的是curl通过使用内置option：-x来支持设置代理")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -x 192.168.100.100:1080 http://www.linux.com")]),t._v("\n")])])]),s("p",[t._v("5、cookie\n有些网站是使用cookie来记录session信息。对于chrome这样的浏览器，可以轻易处理cookie信息，但在curl中只要增加相关参数也是可以很容易的处理cookie\n5.1:保存http的response里面的cookie信息。内置option:-c（小写）")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -c cookiec.txt  http://www.linux.com")]),t._v("\n")])])]),s("p",[t._v("执行后cookie信息就被存到了cookiec.txt里面了")]),t._v(" "),s("p",[t._v("5.2:保存http的response里面的header信息。内置option: -D")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -D cookied.txt http://www.linux.com")]),t._v("\n")])])]),s("p",[t._v("执行后cookie信息就被存到了cookied.txt里面了")]),t._v(" "),s("p",[t._v("注意：-c(小写)产生的cookie和-D里面的cookie是不一样的。")]),t._v(" "),s("p",[t._v("5.3:使用cookie\n很多网站都是通过监视你的cookie信息来判断你是否按规矩访问他们的网站的，因此我们需要使用保存的cookie信息。内置option: -b")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -b cookiec.txt http://www.linux.com")]),t._v("\n")])])]),s("p",[t._v("6、模仿浏览器\n有些网站需要使用特定的浏览器去访问他们，有些还需要使用某些特定的版本。curl内置option:-A可以让我们指定浏览器去访问网站")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# curl -A "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)" http://www.linux.com')]),t._v("\n")])])]),s("p",[t._v("这样服务器端就会认为是使用IE8.0去访问的")]),t._v(" "),s("p",[t._v("7、伪造referer（盗链）\n很多服务器会检查http访问的referer从而来控制访问。比如：你是先访问首页，然后再访问首页中的邮箱页面，这里访问邮箱的referer地址就是访问首页成功后的页面地址，如果服务器发现对邮箱页面访问的referer地址不是首页的地址，就断定那是个盗连了\ncurl中内置option：-e可以让我们设定referer")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# curl -e "www.linux.com" http://mail.linux.com')]),t._v("\n")])])]),s("p",[t._v("这样就会让服务器其以为你是从www.linux.com点击某个链接过来的")]),t._v(" "),s("p",[t._v("8、下载文件\n8.1：利用curl下载文件。\n#使用内置option：-o(小写)")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -o dodo1.jpg http:www.linux.com/dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("#使用内置option：-O（大写)")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -O http://www.linux.com/dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("这样就会以服务器上的名称保存文件到本地")]),t._v(" "),s("p",[t._v("8.2：循环下载\n有时候下载图片可以能是前面的部分名称是一样的，就最后的尾椎名不一样")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -O http://www.linux.com/dodo[1-5].JPG")]),t._v("\n")])])]),s("p",[t._v("这样就会把dodo1，dodo2，dodo3，dodo4，dodo5全部保存下来")]),t._v(" "),s("p",[t._v("8.3：下载重命名")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -O http://www.linux.com/{hello,bb}/dodo[1-5].JPG")]),t._v("\n")])])]),s("p",[t._v("由于下载的hello与bb中的文件名都是dodo1，dodo2，dodo3，dodo4，dodo5。因此第二次下载的会把第一次下载的覆盖，这样就需要对文件进行重命名。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -o #1_#2.JPG http://www.linux.com/{hello,bb}/dodo[1-5].JPG")]),t._v("\n")])])]),s("p",[t._v("这样在hello/dodo1.JPG的文件下载下来就会变成hello_dodo1.JPG,其他文件依此类推，从而有效的避免了文件被覆盖")]),t._v(" "),s("p",[t._v("8.4：分块下载\n有时候下载的东西会比较大，这个时候我们可以分段下载。使用内置option：-r")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -r 0-100 -o dodo1_part1.JPG http://www.linux.com/dodo1.JPG# curl -r 100-200 -o dodo1_part2.JPG http://www.linux.com/dodo1.JPG# curl -r 200- -o dodo1_part3.JPG http://www.linux.com/dodo1.JPG# cat dodo1_part* > dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("这样就可以查看dodo1.JPG的内容了")]),t._v(" "),s("p",[t._v("8.5：通过ftp下载文件\ncurl可以通过ftp下载文件，curl提供两种从ftp中下载的语法")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -O -u 用户名:密码 ftp://www.linux.com/dodo1.JPG# curl -O ftp://用户名:密码@www.linux.com/dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("8.6：显示下载进度条")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -# -O http://www.linux.com/dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("8.7：不会显示下载进度信息")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -s -O http://www.linux.com/dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("9、断点续传\n在windows中，我们可以使用迅雷这样的软件进行断点续传。curl可以通过内置option:-C同样可以达到相同的效果\n如果在下载dodo1.JPG的过程中突然掉线了，可以使用以下的方式续传")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -C -O http://www.linux.com/dodo1.JPG")]),t._v("\n")])])]),s("p",[t._v("10、上传文件\ncurl不仅仅可以下载文件，还可以上传文件。通过内置option:-T来实现")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -T dodo1.JPG -u 用户名:密码 ftp://www.linux.com/img/")]),t._v("\n")])])]),s("p",[t._v("这样就向ftp服务器上传了文件dodo1.JPG")]),t._v(" "),s("p",[t._v("11、显示抓取错误")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -f http://www.linux.com/error")]),t._v("\n")])])]),s("p",[t._v("其他参数(此处翻译为转载)：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("-a/--append                        上传文件时，附加到目标文件\n--anyauth                            可以使用“任何”身份验证方法\n--basic                                使用HTTP基本验证\n-B/--use-ascii                      使用ASCII文本传输\n-d/--data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  HTTP POST方式传送数据\n--data-ascii "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            以ascii的方式post数据\n--data-binary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          以二进制的方式post数据\n--negotiate                          使用HTTP身份验证\n--digest                        使用数字身份验证\n--disable-eprt                  禁止使用EPRT或LPRT\n--disable-epsv                  禁止使用EPSV\n--egd-file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              为随机数据"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("设置EGD socket路径\n--tcp-nodelay                  使用TCP_NODELAY选项\n-E/--cert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cert"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":passwd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      客户端证书文件和密码 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--cert-type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              证书文件类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DER/PEM/ENG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                    私钥文件名 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--key-type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              私钥文件类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DER/PEM/ENG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--pass  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  私钥密码 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--engine "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("eng"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  加密引擎使用 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(". "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--engine list"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" list\n--cacert "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                CA证书 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--capath "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            CA目   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("made using c_rehash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" to verify peer against "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SSL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--ciphers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                SSL密码\n--compressed                    要求返回是压缩的形势 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("using deflate or "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n--connect-timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    设置最大请求时间\n--create-dirs                  建立本地目录的目录层次结构\n--crlf                          上传是把LF转变成CRLF\n--ftp-create-dirs              如果远程目录不存在，创建远程目录\n--ftp-method "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("multicwd/nocwd/singlecwd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("    控制CWD的使用\n--ftp-pasv                      使用 PASV/EPSV 代替端口\n--ftp-skip-pasv-ip              使用PASV的时候,忽略该IP地址\n--ftp-ssl                      尝试用 SSL/TLS 来进行ftp数据传输\n--ftp-ssl-reqd                  要求用 SSL/TLS 来进行ftp数据传输\n-F/--form "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("content"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        模拟http表单提交数据\n-form-string "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      模拟http表单提交数据\n-g/--globoff                    禁用网址序列和范围使用"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("和"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n-G/--get                        以get的方式来发送数据\n-h/--help                      帮助\n-H/--header "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("line"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              自定义头信息传递给服务器\n--ignore-content-length        忽略的HTTP头信息的长度\n-i/--include                    输出时包括protocol头信息\n-I/--head                      只显示文档信息\n-j/--junk-session-cookies      读取文件时忽略session cookie\n--interface "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("interface"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        使用指定网络接口/地址\n--krb4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("level"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  使用指定安全级别的krb4\n-k/--insecure                  允许不使用证书到SSL站点\n-K/--config                    指定的配置文件读取\n-l/--list-only                  列出ftp目录下的文件名称\n--limit-rate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("rate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            设置传输速度\n--local-port"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NUM"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              强制使用本地端口号\n-m/--max-time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        设置最大传输时间\n--max-redirs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("              设置最大读取的目录数\n--max-filesize "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("bytes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          设置最大下载的文件总量\n-M/--manual                    显示全手动\n-n/--netrc                      从netrc文件中读取用户名和密码\n--netrc-optional                使用 .netrc 或者 URL来覆盖-n\n--ntlm                          使用 HTTP NTLM 身份验证\n-N/--no-buffer                  禁用缓冲输出\n-p/--proxytunnel                使用HTTP代理\n--proxy-anyauth                选择任一代理身份验证方法\n--proxy-basic                  在代理上使用基本身份验证\n--proxy-digest                  在代理上使用数字身份验证\n--proxy-ntlm                    在代理上使用ntlm身份验证\n-P/--ftp-port "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("address"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        使用端口地址，而不是使用PASV\n-Q/--quote "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                文件传输前，发送命令到服务器\n--range-file                    读取（SSL）的随机文件\n-R/--remote-time                在本地生成文件时，保留远程文件时间\n--retry "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  传输出现问题时，重试的次数\n--retry-delay "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("        传输出现问题时，设置重试间隔时间\n--retry-max-time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      传输出现问题时，设置最大重试时间\n-S/--show-error                显示错误\n--socks4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          用socks4代理给定主机和端口\n--socks5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          用socks5代理给定主机和端口\n-t/--telnet-option "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OPT"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("    Telnet选项设置\n--trace "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                  对指定文件进行debug\n--trace-ascii "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            Like --跟踪但没有hex输出\n--trace-time                    跟踪/详细输出时，添加时间戳\n--url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("URL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("                    Spet URL to work with\n-U/--proxy-user "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  设置代理用户名和密码\n-V/--version                    显示版本信息\n-X/--request "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("          指定什么命令\n-y/--speed-time                放弃限速所要的时间。默认为30\n-Y/--speed-limit                停止传输速度的限制，速度时间'秒\n-z/--time-cond                  传送时间设置\n-0/--http1.0                    使用HTTP "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n-1/--tlsv1                      使用TLSv1（SSL）\n-2/--sslv2                      使用SSLv2的（SSL）\n-3/--sslv3                      使用的SSLv3（SSL）\n--3p-quote                      like -Q "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("source")]),t._v(" URL "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" 3rd party transfer\n--3p-url                        使用url，进行第三方传送\n--3p-user                      使用用户名和密码，进行第三方传送\n-4/--ipv4                      使用IP4\n-6/--ipv6                      使用IP6\n")])])]),s("p",[t._v("转自：http://www.linuxdiyf.com/linux/2800.html")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[t._v("https://www.cnblogs.com/duhuo/p/5695256.html")]),t._v(" "),s("li",[t._v("https://www.cnblogs.com/lyggqm/p/11502835.html")])])])}),[],!1,null,null,null);a.default=r.exports}}]);