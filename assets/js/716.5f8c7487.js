(window.webpackJsonp=window.webpackJsonp||[]).push([[716],{1232:function(s,a,t){"use strict";t.r(a);var e=t(53),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("本文主要是介绍 Linux命令-Shell脚本编程 。")])]),s._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#一篇文章shell脚本快速入门"}},[s._v("一篇文章Shell脚本快速入门")])]),t("li",[t("a",{attrs:{href:"#shell脚本基础入门"}},[s._v("Shell脚本基础入门")]),t("ul",[t("li",[t("a",{attrs:{href:"#bash注释"}},[s._v("Bash注释")])]),t("li",[t("a",{attrs:{href:"#bash基本数据类型"}},[s._v("Bash基本数据类型")])]),t("li",[t("a",{attrs:{href:"#bash字符串串联"}},[s._v("Bash字符串串联")])])])]),t("li",[t("a",{attrs:{href:"#命令基本知识"}},[s._v("命令基本知识")]),t("ul",[t("li",[t("a",{attrs:{href:"#变量赋值和引用变量"}},[s._v("变量赋值和引用变量")])]),t("li",[t("a",{attrs:{href:"#变量替换"}},[s._v("变量替换")])]),t("li",[t("a",{attrs:{href:"#命令替换"}},[s._v("命令替换")])]),t("li",[t("a",{attrs:{href:"#算术运算"}},[s._v("算术运算")])]),t("li",[t("a",{attrs:{href:"#退出状态码"}},[s._v("退出状态码")])]),t("li",[t("a",{attrs:{href:"#exit命令"}},[s._v("exit命令")])]),t("li",[t("a",{attrs:{href:"#后台执行命令"}},[s._v("后台执行命令&")])]),t("li",[t("a",{attrs:{href:"#多命令组合"}},[s._v("多命令组合")])]),t("li",[t("a",{attrs:{href:"#基本重定向"}},[s._v("基本重定向")])]),t("li",[t("a",{attrs:{href:"#管道"}},[s._v("管道")])]),t("li",[t("a",{attrs:{href:"#tee命令"}},[s._v("tee命令")])]),t("li",[t("a",{attrs:{href:"#进程替换"}},[s._v("进程替换")])]),t("li",[t("a",{attrs:{href:"#条件测试语句"}},[s._v("条件测试语句")])]),t("li",[t("a",{attrs:{href:"#if语句"}},[s._v("if语句")])]),t("li",[t("a",{attrs:{href:"#case"}},[s._v("case")])]),t("li",[t("a",{attrs:{href:"#for循环"}},[s._v("for循环")])]),t("li",[t("a",{attrs:{href:"#while循环"}},[s._v("while循环")])]),t("li",[t("a",{attrs:{href:"#shell函数"}},[s._v("Shell函数")])]),t("li",[t("a",{attrs:{href:"#参考文章"}},[s._v("参考文章")])])])])])]),t("p"),s._v(" "),t("h2",{attrs:{id:"一篇文章shell脚本快速入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一篇文章shell脚本快速入门"}},[s._v("#")]),s._v(" 一篇文章Shell脚本快速入门")]),s._v(" "),t("h2",{attrs:{id:"shell脚本基础入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell脚本基础入门"}},[s._v("#")]),s._v(" Shell脚本基础入门")]),s._v(" "),t("h3",{attrs:{id:"bash注释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bash注释"}},[s._v("#")]),s._v(" Bash注释")]),s._v(" "),t("p",[s._v("Bash只支持单行注释，使用"),t("code",[s._v("#")]),s._v("开头的都被当作注释语句：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 整行注释")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 行尾注释")]),s._v("\n")])])]),t("p",[s._v("通过Bash的一些特性，可以取巧实现多行注释：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\n注释1\n注释2\n'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'EOF'\n注释1\n注释2\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("____")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\n注释1\n注释2\n'")]),s._v("\n")])])]),t("p",[s._v("但是，别闲的蛋疼去用取巧的多行注释，安心用"),t("code",[s._v("#")]),s._v("来注释。")]),s._v(" "),t("h3",{attrs:{id:"bash基本数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bash基本数据类型"}},[s._v("#")]),s._v(" Bash基本数据类型")]),s._v(" "),t("p",[s._v("Bash中基本数据类型只有字符串类型，连数值类型都没有("),t("code",[s._v("declare -i")]),s._v("可强制声明数值类型)。")]),s._v(" "),t("p",[s._v("比如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 都会当作字符串")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" haha\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n")])])]),t("h3",{attrs:{id:"bash字符串串联"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#bash字符串串联"}},[s._v("#")]),s._v(" Bash字符串串联")]),s._v(" "),t("p",[s._v("Bash中字符串的串联操作，直接将两段数据连接在一起即可，不需要任何操作符。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"junma"')]),s._v('"jinlong"\n'),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5678")]),s._v("\n")])])]),t("h2",{attrs:{id:"命令基本知识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令基本知识"}},[s._v("#")]),s._v(" 命令基本知识")]),s._v(" "),t("h3",{attrs:{id:"变量赋值和引用变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量赋值和引用变量"}},[s._v("#")]),s._v(" 变量赋值和引用变量")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"www.junmajinlong.com"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n")])])]),t("p",[s._v("Shell中可以引用未定义的变量：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$xyzdefabc")]),s._v("\n")])])]),t("p",[s._v("可以定义空变量：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n")])])]),t("h3",{attrs:{id:"变量替换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量替换"}},[s._v("#")]),s._v(" 变量替换")]),s._v(" "),t("p",[s._v("变量替换是指在命令开始执行前，Shell会先将变量的值替换到引用变量的位置处。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(" world\n")])])]),t("p",[s._v("在echo命令开始执行前，Shell会取得变量a的值hello，并将它替换到命令行的"),t("code",[s._v("$a")]),s._v("处。于是，在echo命令开始执行时，命令行已经变成：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world\n")])])]),t("p",[s._v("除了变量替换，Shell还会做其它替换：")]),s._v(" "),t("ul",[t("li",[s._v("命令替换")]),s._v(" "),t("li",[s._v("进程替换")]),s._v(" "),t("li",[s._v("算术运算替换")]),s._v(" "),t("li",[s._v("大括号扩展")]),s._v(" "),t("li",[s._v("波浪号扩展")]),s._v(" "),t("li",[s._v("路径扩展")])]),s._v(" "),t("p",[s._v("这些扩展和替换，都是Shell在调用命令之前就完成的，这和其它语言解析代码的方式不一样。")]),s._v(" "),t("p",[s._v("学习Shell如何做命令行解析很重要，如果不掌握命令行解析，当遇到命令行语法错误后很可能会花掉大量无谓的时间去调试命令。而掌握命令行解析后，就会对命令生命周期了如执掌，不敢说一次就能写对所有命令行，但能节省大量调试时间，对写命令行和写脚本的能力也会上升一个层次。")]),s._v(" "),t("h3",{attrs:{id:"命令替换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令替换"}},[s._v("#")]),s._v(" 命令替换")]),s._v(" "),t("p",[s._v("使用反引号或"),t("code",[s._v("$()")]),s._v("可以执行命令替换。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("cmd"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("cmd"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("p",[s._v("命令替换是指先执行cmd，将cmd的输出结果替换到"),t("code",[s._v("$()")]),s._v("或反引号位置处。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("p",[s._v("在echo命令执行前，会先执行id命令，id命令的执行结果：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" root\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("所以会将结果"),t("code",[s._v("uid=0(root) gid=0(root) groups=0(root)")]),s._v("替换"),t("code",[s._v("$(id root)")]),s._v("。于是，echo命令开始执行时，命令行已经变成了：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h3",{attrs:{id:"算术运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#算术运算"}},[s._v("#")]),s._v(" 算术运算")]),s._v(" "),t("p",[t("code",[s._v("$[]")]),s._v("或"),t("code",[s._v("$(())")]),s._v("或let命令可以做算术运算。")]),s._v(" "),t("p",[s._v("let是单独的命令，不能写在其它命令行中。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("a+1\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n")])])]),t("p",[t("code",[s._v("$[]")]),s._v("和"),t("code",[s._v("$(())")]),s._v("可以写在命令行内部，Shell在解析命令行的时候，会对它们做算术运算，然后将运算结果替换到命令行中。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("33")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a+3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n")])])]),t("p",[s._v("因为变量替换先于算术替换，所以，使用变量名或引用变量的方式都可以：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("333")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("+3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$((")]),s._v("$a"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("))")])]),s._v("\n")])])]),t("h3",{attrs:{id:"退出状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#退出状态码"}},[s._v("#")]),s._v(" 退出状态码")]),s._v(" "),t("p",[s._v("每个命令执行后都会有对应的进程退出状态码，用来表示该进程是否是正常退出。")]),s._v(" "),t("p",[s._v("所以，在命令行中，在Shell脚本中，经常会使用特殊变量"),t("code",[s._v("$?")]),s._v("判断最近一个前台命令是否正常退出。")]),s._v(" "),t("p",[s._v("通常情况下，如果"),t("code",[s._v("$?")]),s._v("的值：")]),s._v(" "),t("ul",[t("li",[s._v("为0，表示进程成功执行，即正常退出")]),s._v(" "),t("li",[s._v("非0，表示进程未成功执行，即非正常退出")]),s._v(" "),t("li",[s._v("但非0退出状态码并不一定表示错误，也可能是正常逻辑的退出")])]),s._v(" "),t("p",[s._v("另外，在Shell脚本中，所有条件判断(比如if语句、while语句)都以0退出状态码表示True，以非0退出状态码为False。")]),s._v(" "),t("h3",{attrs:{id:"exit命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#exit命令"}},[s._v("#")]),s._v(" exit命令")]),s._v(" "),t("p",[s._v("exit命令可用于退出当前Shell进程，比如退出当前Shell终端、退出Shell脚本，等等。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("exit可指定退出状态码N，如果省略N，则默认退出状态码为0，即表示正确退出。")]),s._v(" "),t("h3",{attrs:{id:"后台执行命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#后台执行命令"}},[s._v("#")]),s._v(" 后台执行命令&")]),s._v(" "),t("p",[s._v("在命令的结尾使用"),t("code",[s._v("&")]),s._v("符号，可以将这个命令放入后台执行。")]),s._v(" "),t("p",[s._v("命令放入后台后，会立即回到Shell进程，Shell进程会立即执行下一条命令(如果有)或退出。")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("$!")]),s._v("可以获取最近一个后台进程的PID。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$!")]),s._v("\n")])])]),t("p",[s._v("使用"),t("code",[s._v("wait")]),s._v("命令可以等待后台进程(当前Shell进程的子进程)完成：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("wait [n1 n2 n3 ...]\n")])])]),t("p",[s._v("不给定任何参数时，会等待所有子进程(即所有后台进程)完成。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" haha\n")])])]),t("h3",{attrs:{id:"多命令组合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多命令组合"}},[s._v("#")]),s._v(" 多命令组合")]),s._v(" "),t("p",[s._v("Shell中有多种组合多个命令的方式。")]),s._v(" "),t("p",[s._v("1.cmd1退出后，执行cmd2")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("cmd1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("cmd2\n")])])]),t("p",[s._v("2.cmd1正确退出(退出状态码为0)后，执行cmd2")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("cmd1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" cmd2\n")])])]),t("p",[s._v("3.cmd1不正确退出后，执行cmd2")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("cmd1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" cmd2\n")])])]),t("p",[s._v("4.逻辑结合："),t("code",[s._v("&&")]),s._v("和"),t("code",[s._v("||")]),s._v("可以随意结合")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd1正确退出后执行cmd2，cmd2正确退出后执行cmd3")]),s._v("\ncmd1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" cmd2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" cmd3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd1正确退出则执行cmd2，cmd1不正确退出会执行cmd3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd1正确退出，但cmd2不正确退出，也会执行cmd3")]),s._v("\ncmd1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" cmd2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" cmd3\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd1正确退出会执行cmd3")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd1不正确退出会执行cmd2，cmd2正确退出会执行cmd3")]),s._v("\ncmd1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" cmd2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" cmd3\n")])])]),t("p",[s._v("5.将多个命令分组：小括号或大括号可以组合多个命令")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 小括号组合的多个命令是在子Shell中执行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 即会先创建一个新的Shell进程，在执行里面的命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cmd1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("cmd2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("cmd3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 大括号组合的多个命令是在当前Shell中执行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 大括号语法特殊，要求：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##   1.开闭括号旁边都有空白，否则语法解析错误(解析成大括号扩展)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##   2.写在同一行时，每个cmd后都要加分号结尾")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##   3.多个命令可分行书写，不要求分号结尾")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" cmd1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("cmd2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("cmd3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  cmd1\n  cmd2\n  cmd3\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("h3",{attrs:{id:"基本重定向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本重定向"}},[s._v("#")]),s._v(" 基本重定向")]),s._v(" "),t("p",[s._v("软件设计认为，程序应该有一个数据来源、数据出口和报告错误的地方。在Linux系统中，每个程序默认都会打开三个文件描述符(file descriptor,fd)：")]),s._v(" "),t("ul",[t("li",[s._v("fd=0：标准输入，表示程序默认从哪里读取数据")]),s._v(" "),t("li",[s._v("fd=1：标准输出，表示程序默认将数据输出到哪里")]),s._v(" "),t("li",[s._v("fd=2：标准错误，表示程序默认将错误信息输出到哪里")])]),s._v(" "),t("p",[s._v("文件描述符，说白了就是系统为了跟踪打开的文件而分配给它的一个数字，这个数字和文件有对应关系：从文件描述符读取数据，即表示从对应的文件中读取数据，向文件描述符写数据，即表示向对应文件中写入数据。")]),s._v(" "),t("p",[s._v("Linux中万物皆文件，文件描述符也是文件。默认：")]),s._v(" "),t("ul",[t("li",[s._v("fd=0的标准输入是/dev/stdin文件")]),s._v(" "),t("li",[s._v("fd=1的标准输出是/dev/stdout文件")]),s._v(" "),t("li",[s._v("fd=2的标准错误是/dev/stderr文件")])]),s._v(" "),t("p",[s._v("这些文件默认又是各个终端的软链接文件：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l /dev/std*\nlrwxrwxrwx "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" Jan  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(":26 /dev/stderr -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /proc/self/fd/2\nlrwxrwxrwx "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" Jan  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(":26 /dev/stdin -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /proc/self/fd/0\nlrwxrwxrwx "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" Jan  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(":26 /dev/stdout -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /proc/self/fd/1\n\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l /proc/self/fd/\nlrwx------ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" Jan "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":40 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/pts/0\nlrwx------ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" Jan "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":40 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/pts/0\nlrwx------ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" Jan "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":40 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /dev/pts/0\nlr-x------ "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" Jan "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":40 "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" -"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /proc/75220/fd\n")])])]),t("p",[s._v("所以，默认情况下读写数据都是终端，例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 数据输出到终端")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" haha\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/fstab\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 从终端读取数据")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\nhello   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输入")]),s._v("\nhello   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输出")]),s._v("\nworld   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输入")]),s._v("\nworld   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输出")]),s._v("\n^C\n")])])]),t("p",[s._v("改变文件描述符对应的目标，可以改变数据的流向。比如标准输入fd=1默认流向是终端设备，若将其改为/tmp/a.log，便能让数据写入/tmp/a.log文件中而不再是终端设备中。")]),s._v(" "),t("p",[s._v("在Shell中，这种改变文件描述符目标的行为称为"),t("strong",[s._v("重定向")]),s._v("，即重新确定数据的流向。")]),s._v(" "),t("p",[s._v("其实，文件描述符有很多类操作，包括fd的重定向、fd的分配(open，即打开文件)、fd复制(duplicate)、fd的移动(move)、fd的关闭(close)。现在只介绍基础重定向操作。")]),s._v(" "),t("p",[s._v("Shell中，基础重定向操作有以下几种方式：")]),s._v(" "),t("ul",[t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[n]>file\n")])])]),t("p",[s._v("：覆盖式输出重定向，输出到fd=n的数据改变流向输出到file文件中，file不存在则创建，file存在则先清空再写入数据")]),s._v(" "),t("ul",[t("li",[s._v("省略n时"),t("code",[s._v(">file")]),s._v("，等价于"),t("code",[s._v("1>file")]),s._v("，即标准输出覆盖重定向到file文件中")])])]),s._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[n]>>file\n")])])]),t("p",[s._v("：追加式输出重定向，输出到fd=n的数据改变流向输出到file文件的尾部，file不存在则创建，file存在则直接追加在文件尾部")]),s._v(" "),t("ul",[t("li",[s._v("省略n时"),t("code",[s._v(">>file")]),s._v("，等价于"),t("code",[s._v("1>>file")]),s._v("，即标准输出追加重定向到file文件中")])])]),s._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[n]<file\n")])])]),t("p",[s._v("：输入重定向，以读取模式打开file文件并分配fd=n，file不存在则报错")]),s._v(" "),t("ul",[t("li",[s._v("省略n时"),t("code",[s._v("<file")]),s._v("，等价于"),t("code",[s._v("0<file")]),s._v("，即直接从file中读数据")]),s._v(" "),t("li",[s._v("通常程序都只从fd=0中读数据，所以当n不等于0时，需要多做一步操作"),t("code",[s._v("3<file <&3")]),s._v("，看不懂先跳过")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("&>file")]),s._v("：这是特殊的重定向方式，表示将标准错误和标准输出都重定向到file文件中，等价于"),t("code",[s._v(">file 2>&1")])])]),s._v(" "),t("li",[t("p",[t("code",[s._v("&>>file")]),s._v("：这是特殊的重定向方式，表示将标准错误和标准输出都追加到file文件中，等价于"),t("code",[s._v(">>file 2>&1")])])])]),s._v(" "),t("p",[s._v("另外，经常用于输出的一个特殊目标文件是/dev/null，它是空设备，可以直接丢掉所有写入它的数据。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" www.junmajinlong.com "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -I www.junmajinlong.com "),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v("/dev/null "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/tmp/a.log\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/etc/fstab\n")])])]),t("p",[s._v("一个经常用的技巧是清空文件的方式：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /dev/null "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("file\n$ "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("file\n")])])]),t("h4",{attrs:{id:"区分cat-file和cat-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#区分cat-file和cat-file"}},[s._v("#")]),s._v(" 区分cat <file和cat file")]),s._v(" "),t("p",[s._v("cat是一个命令，这个命令的源代码中写了一些代码用来处理选项和参数。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" -n /etc/fstab\n")])])]),t("p",[s._v("cat命令开始执行后，会识别"),t("code",[s._v("-n")]),s._v("选项，该选项会让cat输出时同时输出行号，cat同时还会识别"),t("code",[s._v("/etc/fstab")]),s._v("参数，cat会读取参数指定的文件然后输出。")]),s._v(" "),t("p",[s._v("如果没有指定cat的文件参数，则cat默认会从标准输入中读取数据。默认的标准输入是终端，所以在没有改变标准输入的流向时，会从终端读取数据，也就是用户输入什么字符，就读取什么字符，然后输出什么字符：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\njunmajinlong   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输入")]),s._v("\njunmajinlong   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输出")]),s._v("\njunma   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输入")]),s._v("\njunma   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 在终端输出")]),s._v("\n^C\n")])])]),t("p",[s._v("但用户可以改变标准输入的来源。比如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/etc/fstab\n")])])]),t("p",[s._v("表示将标准输入来源改为/etc/fstab文件，于是cat会从/etc/fstab中读取数据。")]),s._v(" "),t("p",[s._v("另外，约定俗成的，会使用一个"),t("code",[s._v("-")]),s._v("来表示标准输入或标准输出。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 下面是等价的，都表示从标准输入中读取数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" -\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /dev/stdin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\n")])])]),t("p",[s._v("注：这并非是一贯正确的，只是约定俗成的大多数程序的代码中都定义了"),t("code",[s._v("-")]),s._v("相关的代码处理。可参考相关命令的man手册。如man cat中有一行：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("With no FILE, or when FILE is -, read standard input.\n")])])]),t("h4",{attrs:{id:"here-doc"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#here-doc"}},[s._v("#")]),s._v(" here doc")]),s._v(" "),t("p",[s._v("输入重定向是"),t("code",[s._v("<")]),s._v("，除此之外还有"),t("code",[s._v("<<、<<<")]),s._v("。")]),s._v(" "),t("p",[t("code",[s._v("<<")]),s._v("符号表示here doc。也就是说，它后面跟的是一篇文档，就像一个文件一样，只不过这个文件的内容是临时定义在"),t("code",[s._v("<<")]),s._v("符号后的。here doc常用于指定多行数据输入。")]),s._v(" "),t("p",[s._v("既然是文档，就有文档起始符号表示文档从此开始和文档终止符号表示文档到此结束。起始符和终止符中间的内容全部是文档内容。文档内容会作为标准输入的数据被读取。")]),s._v(" "),t("p",[s._v("文档的起始符和终止符可以随意定义，但两者前后必须一样。常见的符号是：")]),s._v(" "),t("ul",[t("li",[s._v("EOF：end of file")]),s._v(" "),t("li",[s._v("EOL：end of line")]),s._v(" "),t("li",[s._v("EOB：end of block")])]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## here doc作为标准输入被读取，然后被cat输出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nhello\nworld\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## here doc的内容还会被cat覆盖式输出到指定文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("eof"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/tmp/file")]),s._v("\nhello\nworld\neof")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## here doc的内容还会被cat追加式输出到指定文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("eof"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("/tmp/file")]),s._v("\nhello\nworld\neof")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## here doc和重定向符号的前后位置随意")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v("/tmp/file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("eof\n...\neof")]),s._v("\n")])])]),t("p",[s._v("另外，如果将起始符用引号包围，则不会进行变量替换、命令替换、算术替换等。如果不用引号包围起始符，则会进行替换。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("333")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("eof\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\neof")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eof"\n$a\neof')]),s._v("\n")])])]),t("p",[s._v("输出结果：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token number"}},[s._v("333")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n")])])]),t("h4",{attrs:{id:"here-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#here-string"}},[s._v("#")]),s._v(" here string")]),s._v(" "),t("p",[t("code",[s._v("<<<")]),s._v("表示here string。也就是说该符号后面是一个字符串，这个字符串会作为标准输入的内容。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"www.junmajinlong.com"')]),s._v("\n")])])]),t("p",[s._v("使用单引号包围here string时，不会进行变量替换、命令替换等，使用双引号包围时会进行替换。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("a")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3333")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("            \n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3333")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v("\nhello world3333\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("'")]),s._v(" \nhello world"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("\n")])])]),t("p",[s._v("here string常可以替代管道前的echo命令"),t("code",[s._v("echo xxx|")]),s._v("。例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 下面是等价的")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"llo"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"llo"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v("\n")])])]),t("h3",{attrs:{id:"管道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#管道"}},[s._v("#")]),s._v(" 管道")]),s._v(" "),t("p",[s._v("管道的用法：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("cmd1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cmd2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" cmd3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),t("p",[s._v("每个竖线代表一个管道。上面命令行表示cmd1的标准输出会放进管道，cmd2会从管道中读取进行处理，cmd2的标准输出会放入另一个管道，cmd3会从这个管道中读取数据进行处理。后面还可以接任意数量的管道。")]),s._v(" "),t("p",[s._v("Shell管道是Shell中最值得称赞的功能之一，它以非常简洁的形式实现了管道的进程间通信方式，我个人认为Shell处理文本数据的半壁江山都来自于竖线形式的管道。像其它编程语言，打开管道后还要区分哪个进程写管道、哪个进程读管道，为了安全，每个进程还要关闭不用的读端或写端，总之就是麻烦，而Shell的管道非常简洁，竖线左边的就是写管道的，竖线右边的就是读管道的。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sshd'")]),s._v("\n")])])]),t("p",[s._v("ps命令产生的数据(标准输出)会写进管道，只要管道内一有数据，grep命令就从中读取数据进行处理。")]),s._v(" "),t("p",[s._v("那下面的命令中，grep从哪读数据呢？")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#'")]),s._v(" /etc/fstab\n")])])]),t("p",[s._v("那想要让grep既从/etc/fstab读取数据，也从管道中读取数据呢？")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#'")]),s._v(" /etc/fstab /etc/stdin\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#'")]),s._v(" /etc/fstab -\n")])])]),t("h3",{attrs:{id:"tee命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tee命令"}},[s._v("#")]),s._v(" tee命令")]),s._v(" "),t("p",[s._v("tee命令可将一份标准输入原样拷贝到标准输出和0或多个文件中。换句话说，tee的作用是数据多重定向。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("NAME\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" - "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" from standard input and "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" to standard output and files\n\nSYNOPSIS\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("OPTION"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("FILE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\nDESCRIPTION\n    Copy standard input to each FILE, and also to standard output.\n\n    -a, --append\n        ppend to the given FILEs, "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" not overwrite\n")])])]),t("p",[s._v("如图：")]),s._v(" "),t("p",[t("img",{attrs:{src:"",alt:"1581130562081"}})]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /tmp/file1 /tmp/file2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" -a /tmp/file3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null\n")])])]),t("h3",{attrs:{id:"进程替换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程替换"}},[s._v("#")]),s._v(" 进程替换")]),s._v(" "),t("p",[s._v("Bash还支持进程替换(注：有些Shell不支持进程替换)。")]),s._v(" "),t("p",[s._v("进程替换的语法：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cmd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("进程替换和命令替换类似，都是让cmd命令先执行，因为它们都是在Shell解析命令行的阶段执行的。")]),s._v(" "),t("p",[s._v("进程替换先让cmd放入后台异步执行，并且不会等待cmd执行完。")]),s._v(" "),t("p",[s._v("其实，每个进程替换都是一个虚拟文件，只不过这个文件的内容是由cmd命令产生的("),t("code",[s._v("<(cmd)")]),s._v(")或被cmd命令读取的("),t("code",[s._v(">(cmd)")]),s._v(")。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" www.junmajinlong.com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n/dev/fd/63\n")])])]),t("p",[s._v("既然进程替换是文件，那么它就可以像文件一样被操作。比如被读取、被当作标准输入重定向的数据源等等：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd做数据产生者")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" www.junmajinlong.com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 等价于cat /dev/fd/63")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" www.junmajinlong.com"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 等价于cat </dev/fd/63")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## cmd做数据接收者")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'llo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello world "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'llo'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rld'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/dev/null\n")])])]),t("h3",{attrs:{id:"条件测试语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件测试语句"}},[s._v("#")]),s._v(" 条件测试语句")]),s._v(" "),t("p",[s._v("test命令或功能等价的Bash内置命令"),t("code",[s._v("[ ]")]),s._v("可以做条件测试，如果测试的结果为True，则退出状态码为0。")]),s._v(" "),t("p",[s._v("此外，还可以使用"),t("code",[s._v("[[]]")]),s._v("来做条件测试，甚至"),t("code",[s._v("let、$[]、$(())")]),s._v("也可以做条件测试，但这里暂不介绍。")]),s._v(" "),t("p",[s._v("这些条件测试常用在if、while语句中，也常用在"),t("code",[s._v("cmd1 && cmd2 || cmd3")]),s._v("格式的命令行中。")]),s._v(" "),t("p",[s._v("用法示例：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sh_file")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("test.sh\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -x "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sh_file")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" ./"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sh_file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"can\'t execute,exit..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" -x "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sh_file")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" ./"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$sh_file")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"can\'t execute,exit..."')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[t("code",[s._v("[]")]),s._v("中的条件测试需要和开闭中括号使用空格隔开，否则语法解析错误。")]),s._v(" "),t("h4",{attrs:{id:"无测试内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无测试内容"}},[s._v("#")]),s._v(" 无测试内容")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n")])])]),t("p",[s._v("没有任何测试内容时，直接返回false。")]),s._v(" "),t("h4",{attrs:{id:"true和false命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#true和false命令"}},[s._v("#")]),s._v(" true和false命令")]),s._v(" "),t("p",[s._v("true命令直接返回true，即退出状态码为0。")]),s._v(" "),t("p",[s._v("false命令直接返回false，即退出状态码非0。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 0")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 1")]),s._v("\n")])])]),t("h4",{attrs:{id:"文件类测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件类测试"}},[s._v("#")]),s._v(" 文件类测试")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("条件表达式")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-e file")]),s._v(" "),t("td",[s._v("文件是否存在(exist)")])]),s._v(" "),t("tr",[t("td",[s._v("-f file")]),s._v(" "),t("td",[s._v("文件是否存在且为普通文件(file)")])]),s._v(" "),t("tr",[t("td",[s._v("-d file")]),s._v(" "),t("td",[s._v("文件是否存在且为目录(directory)")])]),s._v(" "),t("tr",[t("td",[s._v("-b file")]),s._v(" "),t("td",[s._v("文件是否存在且为块设备block device")])]),s._v(" "),t("tr",[t("td",[s._v("-c file")]),s._v(" "),t("td",[s._v("文件是否存在且为字符设备character device")])]),s._v(" "),t("tr",[t("td",[s._v("-S file")]),s._v(" "),t("td",[s._v("文件是否存在且为套接字文件Socket")])]),s._v(" "),t("tr",[t("td",[s._v("-p file")]),s._v(" "),t("td",[s._v("文件是否存在且为命名管道文件FIFO(pipe)")])]),s._v(" "),t("tr",[t("td",[s._v("-L file")]),s._v(" "),t("td",[s._v("文件是否存在且是一个链接文件(Link)")])])])]),s._v(" "),t("h4",{attrs:{id:"文件属性类测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件属性类测试"}},[s._v("#")]),s._v(" 文件属性类测试")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("条件表达式")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-r file")]),s._v(" "),t("td",[s._v("文件是否存在且当前用户可读")])]),s._v(" "),t("tr",[t("td",[s._v("-w file")]),s._v(" "),t("td",[s._v("文件是否存在且当前用户可写")])]),s._v(" "),t("tr",[t("td",[s._v("-x file")]),s._v(" "),t("td",[s._v("文件是否存在且当前用户可执行")])]),s._v(" "),t("tr",[t("td",[s._v("-s file")]),s._v(" "),t("td",[s._v("文件是否存在且大小大于0字节，即检测文件是否非空文件")])]),s._v(" "),t("tr",[t("td",[s._v("-N file")]),s._v(" "),t("td",[s._v("文件是否存在，且自上次read后是否被modify")])])])]),s._v(" "),t("h4",{attrs:{id:"两文件之间的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两文件之间的比较"}},[s._v("#")]),s._v(" 两文件之间的比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("条件表达式")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("file1 -nt file2")]),s._v(" "),t("td",[s._v("(newer than)判断file1是否比file2新")])]),s._v(" "),t("tr",[t("td",[s._v("file1 -ot file2")]),s._v(" "),t("td",[s._v("(older than)判断file1是否比file2旧")])]),s._v(" "),t("tr",[t("td",[s._v("file1 -ef file2")]),s._v(" "),t("td",[s._v("(equal file)判断file1与file2是否为同一文件")])])])]),s._v(" "),t("h4",{attrs:{id:"数值大小比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数值大小比较"}},[s._v("#")]),s._v(" 数值大小比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("条件表达式")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("int1 -eq int2")]),s._v(" "),t("td",[s._v("两数值相等(equal)")])]),s._v(" "),t("tr",[t("td",[s._v("int1 -ne int2")]),s._v(" "),t("td",[s._v("两数值不等(not equal)")])]),s._v(" "),t("tr",[t("td",[s._v("int1 -gt int2")]),s._v(" "),t("td",[s._v("n1大于n2(greater than)")])]),s._v(" "),t("tr",[t("td",[s._v("int1 -lt int2")]),s._v(" "),t("td",[s._v("n1小于n2(less than)")])]),s._v(" "),t("tr",[t("td",[s._v("int1 -ge int2")]),s._v(" "),t("td",[s._v("n1大于等于n2(greater than or equal)")])]),s._v(" "),t("tr",[t("td",[s._v("int1 -le int2")]),s._v(" "),t("td",[s._v("n1小于等于n2(less than or equal)")])])])]),s._v(" "),t("h4",{attrs:{id:"字符串比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串比较"}},[s._v("#")]),s._v(" 字符串比较")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("条件表达式")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-z str")]),s._v(" "),t("td",[s._v("(zero)判定字符串是否为空？str为空串，则true")])]),s._v(" "),t("tr",[t("td",[s._v("str -n str")]),s._v(" "),t("td",[s._v("判定字符串是否非空？str为串，则false。注：-n可省略")])]),s._v(" "),t("tr",[t("td",[s._v("str1 = str2 str1 == str2")]),s._v(" "),t("td",[s._v('str1和str2是否相同，相同则返回true。"=="和"="等价')])]),s._v(" "),t("tr",[t("td",[s._v("str1 != str2")]),s._v(" "),t("td",[s._v("str1是否不等于str2，若不等，则返回true")])]),s._v(" "),t("tr",[t("td",[s._v("str1 > str2")]),s._v(" "),t("td",[s._v("str1字母顺序是否大于str2，若大于则返回true")])]),s._v(" "),t("tr",[t("td",[s._v("str1 < str2")]),s._v(" "),t("td",[s._v("str1字母顺序是否小于str2，若小于则返回true")])])])]),s._v(" "),t("h4",{attrs:{id:"逻辑运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[s._v("#")]),s._v(" 逻辑运算符")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("条件表达式")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("-a或&&")]),s._v(" "),t("td",[s._v('(and)两表达式同时为true时才为true。 "-a"只能在test或[]中使用，&&只能在[[]]中使用')])]),s._v(" "),t("tr",[t("td",[s._v("-o或||")]),s._v(" "),t("td",[s._v('(or)两表达式任何一个true则为true。 "-o"只能在test或[]中使用，||只能在[[]]中使用')])]),s._v(" "),t("tr",[t("td",[s._v("!")]),s._v(" "),t("td",[s._v("对表达式取反")])]),s._v(" "),t("tr",[t("td",[s._v("( )")]),s._v(" "),t("td",[s._v("改变表达式的优先级，"),t("strong",[s._v("为了防止被shell解析，应加上反斜线转义( )")])])])])]),s._v(" "),t("h3",{attrs:{id:"if语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[s._v("#")]),s._v(" if语句")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" test-commands"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  consequent-commands"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("elif more-test-commands"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  more-consequents"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("else alternate-consequents"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("p",[s._v("test-commands既可以是test测试或"),t("code",[s._v("[]、[[]]")]),s._v("测试，也可以是任何其它命令，test-commands用于条件测试，它只判断命令的退出状态码是否为0，为0则为true。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("'")]),s._v(" is not none"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v("'")]),s._v(" undefined or empty"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" -d ~/.ssh "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" ~/.ssh\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v(" ~/.ssh\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("700")]),s._v(" ~/.ssh\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'junmajinlong'")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'User \"junmajinlong\" already exists...'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("elif")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'malongshuai'")]),s._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&>")]),s._v("/dev/null"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'User \"malongshuai\" already exists...'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'you should create user,exit...'")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])])]),t("h3",{attrs:{id:"case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#case"}},[s._v("#")]),s._v(" case")]),s._v(" "),t("p",[s._v("case常用于确定的分支判断。比如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("#")]),s._v("@}")]),s._v(" -gt "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("\n    start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" start"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    stop"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" stop\n    \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    restart"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" restart\n    \t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    reload "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" force-reload"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" reload"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" status"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    *"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$0")]),s._v(' {start|stop|status|restart|reload|force-reload}"')]),s._v("\n    \t"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("case用法基本要求：")]),s._v(" "),t("ul",[t("li",[s._v("除最后一个分支外，每个分支都以"),t("code",[s._v(";;")]),s._v("结尾，否则出现分支穿透(所以"),t("code",[s._v(";;")]),s._v("不是必须的)")]),s._v(" "),t("li",[s._v("分支条件可以使用通配符号")]),s._v(" "),t("li",[s._v("分支条件中可使用竖线隔开多个条件，表示只要匹配其中之一就执行该分支")]),s._v(" "),t("li",[s._v("最后一般会定义一个能匹配其它任意条件的默认分支，即"),t("code",[s._v("*)")])])]),s._v(" "),t("p",[s._v("下面是为ping命令自定义设计选项的脚本：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" \n    -c"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("--count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shift")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    -t"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("--timeout"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("timeout")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shift")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    -h"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("--host"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("host")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("shift")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    *"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wrong options or arguments"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("esac")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" -c "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$count")]),s._v(" -W "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("timeout")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$host")]),s._v("\n")])])]),t("p",[s._v("执行：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x ping.sh\n$ ./ping.sh -c "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" -t "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" -h www.baidu.com\n")])])]),t("h3",{attrs:{id:"for循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for循环"}},[s._v("#")]),s._v(" for循环")]),s._v(" "),t("p",[s._v("有两种for循环结构：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 成员测试类语法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[s._v("i")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" word1 word2 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" cmd_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## C语言for语法")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v(" expr1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("expr2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("expr3 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" cmd_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("成员测试类的for循环中，in关键字后是使用空格分隔的一个或多个元素，for循环时，每次从in关键字后面取一个元素并赋值给i变量。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('\n$ for i in 1 2 3 4;do echo $i;done\n\n$ for i in 1 2 "3 4";do echo $i;done\n\n')])])]),t("p",[s._v("C语言型的for语法中，expr1是初始化语句，expr2是循环终点条件判断语句，expr3是每轮循环后执行的语句，一般用来更改条件判断相关的变量。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n")])])]),t("h3",{attrs:{id:"while循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#while循环"}},[s._v("#")]),s._v(" while循环")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" test_cmd_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" cmd_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("while循环，开始时会测试"),t("code",[s._v("test_cmd_list")]),s._v("，如果测试的退出状态码为0，则执行一次循环体语句"),t("code",[s._v("cmd_list")]),s._v("，然后再测试"),t("code",[s._v("test_cmd_list")]),s._v("，一直循环，直到测试退出状态码非0，循环退出。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(",sum"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$i")]),s._v(" -le "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" \n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sum+i\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" ++i\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("还有until循环语句，但在Shell中用的很少。")]),s._v(" "),t("p",[s._v("while循环经常会和read命令一起使用，read是Bash的内置命令，可用来读取文件，通常会按行读取：每次读一行。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/fstab "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" line"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n")])])]),t("p",[s._v("上面的命令行中，首先cat进程和while结构开始运行，while结构中的read命令从标准输入中读取，也就是从管道中读取数据，每次读取一行，因为管道中最初没有数据，所以read命令被阻塞处于数据等待状态。当cat命令读完文件所有数据后，将数据放入到管道中，于是read命令从管道中每次读取一行并将所读行赋值给变量line，然后执行循环体，然后继续循环，直到read读完所有数据，循环退出。")]),s._v(" "),t("p",[s._v("但注意，管道两边的命令默认是在子Shell中执行的，所以其设置的变量在命令执行完成后就消失。换句话说，在父Shell中无法访问这些变量。比如上面的num变量是在管道的while结构中设置的，除了在while中能访问该变量，其它任何地方都无法访问它。")]),s._v(" "),t("p",[s._v("如果想要访问while中赋值的变量，就不能使用管道。如果是直接从文件读取，可使用输入重定向，如果是读取命令产生的数据，可使用进程替换。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" line"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num1")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/etc/fstab\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" line"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("num2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$num2")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$line")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'UUID'")]),s._v(" /etc/fstab"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h3",{attrs:{id:"shell函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell函数"}},[s._v("#")]),s._v(" Shell函数")]),s._v(" "),t("p",[s._v("Shell函数可以当作命令一样执行，它是一个或多个命令的组合结构体。通常，可以为每个功能定义一个函数，该函数中包含实现这个功能相关的所有命令和逻辑。")]),s._v(" "),t("p",[s._v("因为可以组合多个命令，并且定义之后就可以直接在当前Shell中调用，所以函数具有一次定义多次调用且代码复用的功能。")]),s._v(" "),t("p",[s._v("Shell函数的定义风格有下面几种：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func_name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("CMD_LIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("CMD_LIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("func_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("CMD_LIST"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("函数定义后，可以直接使用函数名来调用函数，同时还可以向函数传递零个或多个参数。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 不传递参数")]),s._v("\nfunc_name\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 传递多个参数")]),s._v("\nfunc_name arg1 arg2 arg3\n")])])]),t("p",[s._v("在函数中，那些位置变量将有特殊的意义：")]),s._v(" "),t("ul",[t("li",[t("p",[t("code",[s._v("$1、$2、$3...")]),s._v("：传递给函数的第一个参数保存在"),t("code",[s._v("$1")]),s._v("中，第二个参数保存在"),t("code",[s._v("$2")]),s._v("中...")])]),s._v(" "),t("li",[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$@\n")])])]),t("p",[s._v("和")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("$*\n")])])]),t("p",[s._v("：保存了所有参数，各参数使用空格分隔")]),s._v(" "),t("ul",[t("li",[s._v("不用双引号包围时，两者没区别")]),s._v(" "),t("li",[s._v("双引号包围时，"),t("code",[s._v("$@")]),s._v("的各个元素都被双引号包围，"),t("code",[s._v("$*")]),s._v("的所有元素一次性被双引号包围")])])])]),s._v(" "),t("p",[s._v("例如，定义一个函数专门用来设置和代理相关的变量：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("proxy_addr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:8118\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("proxy_set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("local")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("p_addr")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("http_proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$p_addr")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("https_proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$p_addr")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ftp_proxy")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$p_addr")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 调用函数")]),s._v("\nproxy_set "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$proxy_addr")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 各代理变量已设置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$http_proxy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$https_proxy")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ftp_proxy")]),s._v("\n")])])]),t("p",[s._v("上面在函数定义的代码中使用了"),t("code",[s._v("local")]),s._v("，它可以用在函数内部表示定义一个局部变量，局部变量在函数执行完毕后就消失，不会影响函数外部的环境。")]),s._v(" "),t("p",[s._v("另外，函数中可以使用return语句来定义函数的返回值，每当执行到函数内的return时，函数就会终止执行，直接退出函数。在Shell中，函数的返回值其实就是退出状态码。")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("N"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("如果不指定N，则默认退出状态码为0。")]),s._v(" "),t("p",[s._v("例如：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("sayhello")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"give me a name please!"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\nsayhello "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"junma"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\nsayhello "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jinlong"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\nsayhello "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$?")]),s._v("\n")])])]),t("p",[t("strong",[s._v("转载请注明出处：https://www.cnblogs.com/f-ck-need-u/p/12275851.html")])]),s._v(" "),t("h3",{attrs:{id:"参考文章"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),t("ul",[t("li",[s._v("https://www.cnblogs.com/f-ck-need-u/p/12275851.html")])])])}),[],!1,null,null,null);a.default=n.exports}}]);