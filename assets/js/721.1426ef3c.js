(window.webpackJsonp=window.webpackJsonp||[]).push([[721],{1237:function(t,s,a){"use strict";a.r(s);var n=a(53),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("本文主要是介绍 Nginx-安装和配置详解 。")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#nginx安装及配置文件详解-linux版本"}},[t._v("Nginx安装及配置文件详解（Linux版本）")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1-nginx安装"}},[t._v("1.Nginx安装")])]),a("li",[a("a",{attrs:{href:"#_2-nginx常用的命令"}},[t._v("2.Nginx常用的命令")])]),a("li",[a("a",{attrs:{href:"#_3-基本概念"}},[t._v("3.基本概念")])]),a("li",[a("a",{attrs:{href:"#_4-nginx文件目录结构及原理图"}},[t._v("4.Nginx文件目录结构及原理图")])]),a("li",[a("a",{attrs:{href:"#_5-配置文件详解"}},[t._v("5.配置文件详解")])]),a("li",[a("a",{attrs:{href:"#_6-nginx的日志文件配置"}},[t._v("6.Nginx的日志文件配置")])]),a("li",[a("a",{attrs:{href:"#_7-nginx的缓存配置"}},[t._v("7.Nginx的缓存配置")])]),a("li",[a("a",{attrs:{href:"#_8-nginx反向代理"}},[t._v("8.Nginx反向代理")])]),a("li",[a("a",{attrs:{href:"#_9-nginx负载均衡"}},[t._v("9.Nginx负载均衡")])]),a("li",[a("a",{attrs:{href:"#_10-http-upsteam模块"}},[t._v("10.HTTP Upsteam模块")])]),a("li",[a("a",{attrs:{href:"#_11-http转https配置"}},[t._v("11.Http转Https配置")])]),a("li",[a("a",{attrs:{href:"#参考资料"}},[t._v("参考资料")])])])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"nginx安装及配置文件详解-linux版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装及配置文件详解-linux版本"}},[t._v("#")]),t._v(" Nginx安装及配置文件详解（Linux版本）")]),t._v(" "),a("blockquote",[a("p",[t._v("之前对Nginx不太熟悉，然后学习了一段时间，中间还是遇到了一点困难的，在这里把nginx的配置文件、反向代理、负载均衡和HTTP转HTTPS都实现了一下，希望对大家有所帮助！")])]),t._v(" "),a("h3",{attrs:{id:"_1-nginx安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-nginx安装"}},[t._v("#")]),t._v(" 1.Nginx安装")]),t._v(" "),a("p",[t._v("可以去看另一篇文章。"),a("a",{attrs:{href:"https://michaeljian.github.io/2017/10/22/Centos7%E7%9A%84%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2%EF%BC%88Java-Tomcat-Mysql-Nginx-Git%EF%BC%89/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx环境安装"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("主要的配置文件解释：")]),t._v(" "),a("ul",[a("li",[t._v("配置文件存放目录："),a("code",[t._v("/etc/nginx")])]),t._v(" "),a("li",[t._v("主配置文件："),a("code",[t._v("/etc/nginx/conf/nginx.conf")])]),t._v(" "),a("li",[t._v("管理脚本："),a("code",[t._v("/usr/lib64/systemd/system/nginx.service")])]),t._v(" "),a("li",[t._v("模块："),a("code",[t._v("/usr/lisb64/nginx/modules")])]),t._v(" "),a("li",[t._v("应用程序："),a("code",[t._v("/usr/sbin/nginx")])]),t._v(" "),a("li",[t._v("程序默认存放位置："),a("code",[t._v("/usr/share/nginx/html")])]),t._v(" "),a("li",[t._v("日志默认存放位置："),a("code",[t._v("/var/log/nginx")])])]),t._v(" "),a("h3",{attrs:{id:"_2-nginx常用的命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-nginx常用的命令"}},[t._v("#")]),t._v(" 2.Nginx常用的命令")]),t._v(" "),a("p",[t._v("检查nginx配置是否正确")]),t._v(" "),a("h4",{attrs:{id:"启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[t._v("#")]),t._v(" 启动")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置环境变量")]),t._v("\nnginx -c nginx配置文件地址\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#通过包管理器安装nginx，比如yum，apt-get")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v(" nginx start\n")])])]),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-1.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("h4",{attrs:{id:"停止"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#停止"}},[t._v("#")]),t._v(" 停止")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" -ef "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从容停止Nginx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -QUIT 主进程号\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#快速停止Nginx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("kill")]),t._v(" -"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("TERM")]),t._v(" 主进程号\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#强制停止Nginx")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pkill")]),t._v(" -9 nginx\n")])])]),a("h4",{attrs:{id:"重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启"}},[t._v("#")]),t._v(" 重启")]),t._v(" "),a("p",[t._v("修改了nginx的配置文件，需要重启下nginx服务。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("nginx -s reload\n")])])]),a("h4",{attrs:{id:"查看日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看日志"}},[t._v("#")]),t._v(" 查看日志")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("nginx -s reopen – 重新打开日志\n")])])]),a("h4",{attrs:{id:"平滑重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#平滑重启"}},[t._v("#")]),t._v(" 平滑重启")]),t._v(" "),a("p",[t._v("如果更改了配置就要重启Nginx，要先关闭Nginx再打开？不是的，可以向Nginx发送信号，平滑重启！平滑重启命令：kill -HUP 主进程号或者进程号文件路径或者使用"),a("code",[t._v("/usr/local/nginx/sbin/nginx -s reload")])]),t._v(" "),a("blockquote",[a("p",[t._v("注意：修改了配置文件后最好先检查一下修改过的配置文件是否正确，以免重启后Nginx出现错误影响服务器稳定运行。判断Nginx配置是否正确命令如下：")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#检查指定的nginx配置文件是否正确")]),t._v("\nnginx -t -c /usr/local/nginx/conf/nginx.conf\nor\nnginx -t\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#检查默认的nginx配置文件")]),t._v("\n/usr/nginx/sbin/nginx -t "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#-t就是检查是否配置正确")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本概念"}},[t._v("#")]),t._v(" 3.基本概念")]),t._v(" "),a("h4",{attrs:{id:"master进程和worker进程概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#master进程和worker进程概念"}},[t._v("#")]),t._v(" master进程和worker进程概念")]),t._v(" "),a("ul",[a("li",[t._v("Master进程:主要用来管理worker进程，包含：接收来自外界的信号，向各worker进程发送信号，监控worker进程的运行状态，当worker进程退出后(异常情况下)，会自动重新启动新的worker进程。")]),t._v(" "),a("li",[t._v("worker进程:基本的网络事件，则是放在worker进程中来处理了。多个worker进程之间是对等的，他们同等竞争来自客户端的请求，各进程互相之间是独立的。一个请求，只可能在一个worker进程中处理。worker进程的个数是可以设置的，一般我们会设置与机器cpu核数一致（更多的worker数，只会导致进程来竞争cpu资源了，从而带来不必要的上下文切换。与cpu核数一样，刚好利用好计算机的资源）")])]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-2.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("h3",{attrs:{id:"_4-nginx文件目录结构及原理图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-nginx文件目录结构及原理图"}},[t._v("#")]),t._v(" 4.Nginx文件目录结构及原理图")]),t._v(" "),a("p",[t._v("下图是nginx目录下的文件：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("├── client_body_temp\n├── conf                              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置文件目录")]),t._v("\n│   ├── fastcgi.conf\n│   ├── fastcgi.conf.default\n│   ├── fastcgi_params\n│   ├── fastcgi_params.default\n│   ├── koi-utf\n│   ├── koi-win\n│   ├── mime.types\n│   ├── mime.types.default\n│   ├── nginx.conf                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#主配置文件")]),t._v("\n│   ├── nginx.conf.default\n│   ├── scgi_params\n│   ├── scgi_params.default\n│   ├── uwsgi_params\n│   ├── uwsgi_params.default\n│   └── win-utf\n├── fastcgi_temp\n├── html                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#初始的静态页面存放目录")]),t._v("\n│   ├── 50x.html\n│   └── index.html\n├── logs                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日志目录")]),t._v("\n│   ├── access.log\n│   ├── error.log\n│   └── nginx.pid\n├── proxy_temp\n├── sbin                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动目录")]),t._v("\n│   └── nginx\n├── scgi_temp\n└── uwsgi_temp\n")])])]),a("p",[a("a",{attrs:{href:"http://tengine.taobao.org/book/chapter_09.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx源码目录结构"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_5-配置文件详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-配置文件详解"}},[t._v("#")]),t._v(" 5.配置文件详解")]),t._v(" "),a("blockquote",[a("p",[t._v("Nginx配置文件结构")])]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-3.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("blockquote",[a("p",[t._v("配置文件实例讲解")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 运行用户")]),t._v("\nuser  nobody"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启动进程，通常设置成和cpu的数量相等")]),t._v("\nworker_processes  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#全局错误日志及PID文件及存放路径")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  notice;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_log  logs/error.log  info;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#pid        logs/nginx.pid;")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#工作模式及连接数上限")]),t._v("\nevents "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单个后台work process进程的最大并发链接数")]),t._v("\n    worker_connections  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#网页信息")]),t._v("\nhttp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定mine类型，类型由mine。type文件定义")]),t._v("\n    include       mime.types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application/octet-stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定日志格式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#                  '$status $body_bytes_sent \"$http_referer\" '")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#                  \'"$http_user_agent" "$http_x_forwarded_for"\';')]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#日志文件存储路径/usr/local/...(nginx的安装目录)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/access.log  main;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#sendfile 指令指定 nginx 是否调用 sendfile 函数（zero copy 方式）来输出文件，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对于普通应用，必须设为 on,")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果用来进行下载等应用磁盘IO重负载应用，可设置为 off，")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以平衡磁盘与网络I/O处理速度，降低系统的uptime.")]),t._v("\n    sendfile        on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#tcp_nopush     on;")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接超时时间")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#keepalive_timeout  0;")]),t._v("\n    keepalive_timeout  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启gzip压缩 如果没有开启gzip，用户访问我们的时候就是以原图来访问。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("gzip")]),t._v("  on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#小于1K的文件不适合压缩,下限是1k")]),t._v("\n    gzip_min_lenth 1k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓存的内存空间--4个16进制数据流")]),t._v("\n    gzip_buffers "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 16k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#http版本")]),t._v("\n    gzip_http_version "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启判断客户端和浏览器是否支持gzip")]),t._v("\n    gzip_vary on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定虚拟主机配置")]),t._v("\n    server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听80端口")]),t._v("\n        listen       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义使用 访问的网址")]),t._v("\n        server_name  localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置字符编码")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#charset koi8-r;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定本虚拟主机的访问日志")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#access_log  logs/host.access.log  main;")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#默认请求，优先级最低的配置")]),t._v("\n        location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义服务器的默认网站根目录位置 这个root目录其实就是/usr/local目录")]),t._v("\n            root   html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 匹配任何请求，因为所有请求都是以"/"开始')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但是更长字符匹配或者正则表达式匹配会优先匹配")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义首页索引文件的名称")]),t._v("\n            index  index.html index.htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置Nginx缓存")]),t._v("\n        location ~.*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jpg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gif"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          expires 30d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓存存放30天，然后自动清除")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        location ~.*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("css"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("? $ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          expires 1h"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓存存放1小时")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#error_page  404              /404.html;")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# redirect server error pages to the static page /50x.html")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定义错误页面")]),t._v("\n        error_page   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  /50x.html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" /50x.html "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 对 “/” 启用反向代理,对上面的实例  ")]),t._v("\n    location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      proxy_pass http://127.0.0.1:3000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置要代理的 uri，注意最后的 /。可以是 Unix 域套接字路径，也可以是正则表达式。")]),t._v("\n      proxy_redirect off"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置后端服务器“Location”响应头和“Refresh”响应头的替换文本")]),t._v("\n      proxy_set_header X-Real-IP "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取用户的真实 IP 地址")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端的Web服务器可以通过 X-Forwarded-For 获取用户真实IP，多个 nginx 反代的情况下，例如 CDN。参见：http://gong1208.iteye.com/blog/1559835 和 http://bbs.linuxtone.org/thread-9050-1-1.html")]),t._v("\n      proxy_set_header X-Forwarded-For "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#以下是一些反向代理的配置，可选。")]),t._v("\n      proxy_set_header Host "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 允许重新定义或者添加发往后端服务器的请求头。")]),t._v("\n      client_max_body_size 10m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#允许客户端请求的最大单文件字节数")]),t._v("\n      client_body_buffer_size 128k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#缓冲区代理缓冲用户端请求的最大字节数，")]),t._v("\n      proxy_connect_timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx跟后端服务器连接超时时间(代理连接超时)")]),t._v("\n      proxy_send_timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#后端服务器数据回传时间(代理发送超时)")]),t._v("\n      proxy_read_timeout "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#连接成功后，后端服务器响应时间(代理接收超时)")]),t._v("\n      proxy_buffer_size 4k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置代理服务器（nginx）保存用户头信息的缓冲区大小")]),t._v("\n      proxy_buffers "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" 32k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#proxy_buffers缓冲区，网页平均在32k以下的设置")]),t._v("\n      proxy_busy_buffers_size 64k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#高负荷下缓冲大小（proxy_buffers*2）")]),t._v("\n      proxy_temp_file_write_size 64k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设定缓存文件夹大小，大于这个值，将从upstream服务器传")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地动静分离反向代理配置")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有 jsp 的页面均交由tomcat或resin处理")]),t._v("\n    location ~ ."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jsp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jspx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("?$ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      proxy_set_header Host "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      proxy_set_header X-Real-IP "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      proxy_set_header X-Forwarded-For "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$proxy_add_x_forwarded_for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      proxy_pass http://127.0.0.1:8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有静态文件由nginx直接读取不经过tomcat或resin")]),t._v("\n    location ~ .*."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("htm"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("gif"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("jpeg"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("png"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("bmp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("swf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ioc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rar")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("zip")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("txt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("flv"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mid"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("doc"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("ppt"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("pdf"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("xls"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("mp3"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("wma"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${\n      root    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("www"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ospring.pw"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("public;\n      expires 15d;\n    }")]),t._v("\n    location ~ ^/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("upload"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("/  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      root    /data/www/ospring.pw/public/html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      expires 30d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    include     vhosts//.conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 分割配置文件，方便管理\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里可以配置多台虚拟主机")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# another virtual host using mix of IP-, name-, and port-based configuration")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置虚拟机")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置监听端口，只要端口不同就是不同的虚拟主机")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       8000;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       somename:8080;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置访问域名")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server_name  somename  alias  another.alias;")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    location / {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root   html;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        index  index.html index.htm;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS server")]),t._v("\n    web服务器配置\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    listen       443 ssl;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    server_name  localhost;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate      cert.pem;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_certificate_key  cert.key;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_cache    shared:SSL:1m;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_session_timeout  5m;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_ciphers  HIGH:!aNULL:!MD5;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    ssl_prefer_server_ciphers  on;")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    location / {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        root   html;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#        index  index.html index.htm;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#    }")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_6-nginx的日志文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-nginx的日志文件配置"}},[t._v("#")]),t._v(" 6.Nginx的日志文件配置")]),t._v(" "),a("h4",{attrs:{id:"日志文件的存储路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志文件的存储路径"}},[t._v("#")]),t._v(" 日志文件的存储路径：")]),t._v(" "),a("p",[t._v("控制日志的参数：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("log_format")]),t._v(" ：用来定义记录日志的格式（可以定义多种日志格式，取不同的名字即可）")]),t._v(" "),a("li",[a("code",[t._v("access_log")]),t._v(" ：用来指定日志文件的路径及使用何种日志格式记录日志")])]),t._v(" "),a("h4",{attrs:{id:"nginx访问日志轮询切割"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx访问日志轮询切割"}},[t._v("#")]),t._v(" Nginx访问日志轮询切割")]),t._v(" "),a("p",[t._v("为了是Nginx的日志文件存储更合理、有序，我们需要将日志文件进行分开存储，比如我们可以按时间来分开，今天的日志文件存储到一个文件中，明天的日志文件则存储到另一个新的文件中等等。这个时候，我们就会用到日志文件切割操作。")]),t._v(" "),a("blockquote",[a("p",[t._v("脚本实现的思想就是将正在写入的Nginx日志（access_"),a("a",{attrs:{href:"http://www.log/",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.log"),a("OutboundLink")],1),t._v("）改名为带日期的格式文件（20171011_access_"),a("a",{attrs:{href:"http://www.log/",target:"_blank",rel:"noopener noreferrer"}},[t._v("www.log"),a("OutboundLink")],1),t._v("），然后平滑重新加载Nginx，生成新的Nginx日志。")])]),t._v(" "),a("p",[t._v("具体切割脚本如下：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@www logs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#cat /server/script/cut_nignx_log.sh")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\nDateformat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'date + %Y%m%d'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Basedir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/application/nginx"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Nginxlogdir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Basedir")]),t._v('/logs"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Logname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"access_www"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-d "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Nginxlogdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Nginxlogdir")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${Logname}")]),t._v(".log "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  \n/bin/mv "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${Logname}")]),t._v(".log "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${Dateformat}")]),t._v("_"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${Logname}")]),t._v(".log\n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Basedir")]),t._v("/sbin/nginx -s reload\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#注意：脚本实现切割Nginx日志的思想为将正在写入的Nginx日志（access_www.log）改名为带日期的格式文件#（20150417_access_www.log），然后平滑重新加载Nginx，生成新的Nginx日志（access_www.log）")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-nginx的缓存配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-nginx的缓存配置"}},[t._v("#")]),t._v(" 7.Nginx的缓存配置")]),t._v(" "),a("h4",{attrs:{id:"缓存配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存配置"}},[t._v("#")]),t._v(" 缓存配置")]),t._v(" "),a("p",[t._v("当我们在浏览器中浏览某网页时，我们会把该网页上的一些信息（比如这个网页上的图片）存储到本地，当我们第二次浏览该网页的时候，这个网页上的某些信息就可以从本地加载，这样速度就会快很多。存储到本地的这些信息我们把其称为缓存。但是缓存过多的时候，缓存文件就会非常大，影响我们正常的上网活动。故而缓存需要定期清理。")]),t._v(" "),a("p",[t._v("进入配置文件中"),a("code",[t._v("/nginx/conf/nginx.conf")]),t._v(" 目录")]),t._v(" "),a("h4",{attrs:{id:"自动列目录配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动列目录配置"}},[t._v("#")]),t._v(" 自动列目录配置")]),t._v(" "),a("p",[t._v("实现自动列目录需要两个条件：")]),t._v(" "),a("ul",[a("li",[t._v("访问的文件夹下不存在index之类的默认首页文件")]),t._v(" "),a("li",[t._v("服务器配置了自动列目录功能")])]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("nginx.conf")]),t._v(" 配置文件中的"),a("code",[t._v("location")]),t._v(" 字段中配置自动列目录：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("    root html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    index index.html index.htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    autoindex on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置自动列目录，列出该目录下的所有文件}")]),t._v("\n")])])]),a("p",[t._v("然后停掉nginx服务，最后重新启动nginx服务。")]),t._v(" "),a("h3",{attrs:{id:"_8-nginx反向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-nginx反向代理"}},[t._v("#")]),t._v(" 8.Nginx反向代理")]),t._v(" "),a("blockquote",[a("p",[t._v("注意反向代理和负载均衡的问题时，需要在"),a("code",[t._v("nginx/nginx-1.10.1/conf/")]),t._v(" 文件夹下新建一个配置文件，然后在重启的时候将这个配置文件加载到主配置文件中"),a("code",[t._v("nginx.conf")]),t._v(" 中，使用"),a("code",[t._v("/usr/local/nginx/sbin/nginx - c /usr/local/nginx/nginx-1.10.1/conf/fzjh.conf")]),t._v(" 命令即可实现。")])]),t._v(" "),a("h4",{attrs:{id:"什么是正向代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是正向代理"}},[t._v("#")]),t._v(" 什么是正向代理？")]),t._v(" "),a("p",[t._v("通俗的解释：我们有时候，用自己的计算机A想访问国外的某个网站B，但是访问不了，此时，有一台中间服务器C可以访问国外的网站B，那么，我们可以用自己的电脑访问服务器C，通过C来访问B这个网站。那么这个时候，服务器C称为代理服务器，这种访问方式叫做正向代理。（例子："),a("strong",[t._v("科学上网 ：为了从外网中获取内容，代理服务器发送一个请求并指定目标（服务器B），然后代理想原始服务器B转交请求并获得的内容返回给客户端，比如你去餐厅的过程是顾客--餐厅1--餐厅2，因为顾客点的食物在餐厅1中没有，但是为了留住顾客，餐厅1到餐厅2中点餐，餐厅2将食物做好后交个餐厅1，最后由餐厅1将食物送到顾客的手里")]),t._v("）")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-4.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("h4",{attrs:{id:"什么是反向代理-reverse-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是反向代理-reverse-proxy"}},[t._v("#")]),t._v(" 什么是反向代理？（Reverse Proxy）")]),t._v(" "),a("p",[t._v("通俗的解释：当我们有一个服务器集群，并且服务器集群中的每一台服务器的内容一样的时候，同样我们要直接从个人电脑访问到服务器集群中的服务器的时候无法访问，且此时第三方服务器能访问集群，这个时候，我们通过第三方服务器访问服务器集群的内容，此时我们并不知道是哪台服务器提供的内容，此时的代理称为反向代理。\n"),a("strong",[t._v("（反向代理服务器对于客户端而言它就是像原始服务器，并且客户端不需要进行任何特别的设置，比如你去餐厅点餐的过程顾客--服务员--厨师。顾客在某餐厅点餐，将要吃的食物菜单交给服务员，服务员只负责将这个菜单交给厨师，自己不负责做菜，厨师将菜做好了之后叫服务员把食物送到顾客的手里）")])]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-5.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_pass       http://localhost:8000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#需要被代理的地址")]),t._v("\n    proxy_set_header Host      "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n    proxy_set_header X-Real-IP "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$remote_addr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-nginx负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-nginx负载均衡"}},[t._v("#")]),t._v(" 9.Nginx负载均衡")]),t._v(" "),a("h4",{attrs:{id:"什么是负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是负载均衡"}},[t._v("#")]),t._v(" 什么是负载均衡？")]),t._v(" "),a("p",[t._v("通俗的解释：我们可以建立很多很多服务器，这些服务器组成一个服务器集群，然后，当用户访问我们网站的时候，先访问一个中间服务器，在让这个中间服务器在服务器选择一个压力较小的服务器，然后将该访问请求引入该选择的服务器。这样，用户每次访问，都会保证服务器集群中的每个服务器的压力趋于平衡，分担了服务器压力，避免了服务器崩溃的情况。")]),t._v(" "),a("h4",{attrs:{id:"负载均衡的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡的实现"}},[t._v("#")]),t._v(" 负载均衡的实现")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#负载均衡配置文件")]),t._v("\nuser  nobody"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nevents"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   worker_connections  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置多台代理服务器地址")]),t._v("\n   upstream myproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59.68")]),t._v(".29.103"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#server backend1.example.com       weight=5;")]),t._v("\n       server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59.68")]),t._v(".29.108"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#在此处添加域名映射的规则")]),t._v("\n       server_name localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           proxy_pass http://myproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n           "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("p",[t._v("配置完后，重新加载Nginx配置文件")]),t._v(" "),a("h3",{attrs:{id:"_10-http-upsteam模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-http-upsteam模块"}},[t._v("#")]),t._v(" 10.HTTP Upsteam模块")]),t._v(" "),a("p",[t._v("Upstream模块实现在轮询和客户端ip之间实现后端的负载均衡。常用的指令有"),a("code",[t._v("ip_hash")]),t._v("指令、"),a("code",[t._v("server")]),t._v("指令和"),a("code",[t._v("upstream")]),t._v("指令。")]),t._v(" "),a("h4",{attrs:{id:"ip-hash指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-hash指令"}},[t._v("#")]),t._v(" ip_hash指令")]),t._v(" "),a("p",[t._v("在负载均衡系统中，假如用户在某台服务器上登录，那么如果该用户第二次请求的时候，因为我们是负载均衡 系统，每次请求都会重新定位到服务器集群中的一个服务器，那么此时如果将已经登录服务器A的用户在定位到其他服务器，显然不妥。故而，我们可以采用"),a("code",[t._v("ip_hash")]),t._v("指令解决这个问题，如果客户端请求已经访问了服务器A并登录，那么第二次请求的时候，会将该请求通过哈希算法自动定位到该后端服务器中。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#负载均衡的服务器列表")]),t._v("\n    upstream myproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置ip_hash指令：将同一个用户引向同一个服务器")]),t._v("\n        ip_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器集群中服务器地址")]),t._v("\n        server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59.68")]),t._v(".29.103:80"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("59.68")]),t._v(".29.108"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"server指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#server指令"}},[t._v("#")]),t._v(" server指令")]),t._v(" "),a("p",[t._v("server指令主要用于指定服务器的名称和参数。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("     upstream myproject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#服务器集群中服务器地址")]),t._v("\n        server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("182.18")]),t._v(".22.2:80 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("weight")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#权重越大，被访问的概率越大")]),t._v("\n        server "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("118.144")]),t._v(".78.52"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"upstream指令及相关变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upstream指令及相关变量"}},[t._v("#")]),t._v(" upstream指令及相关变量")]),t._v(" "),a("p",[t._v("upstream指令主要是用于设置一组可以在"),a("code",[t._v("proxy_pass")]),t._v("和"),a("code",[t._v("fastgi_pass")]),t._v("指令中使用代理服务器，默认负载均衡方式为轮询。")]),t._v(" "),a("h3",{attrs:{id:"_11-http转https配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-http转https配置"}},[t._v("#")]),t._v(" 11.Http转Https配置")]),t._v(" "),a("p",[t._v("如果是购买的是阿里云的服务器，在个人信息中选中--安全（云盾）--CA证书服务--购买证书。")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-6.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("p",[t._v("申请证书需要自己先购买一个域名，将域名和证书进行绑定。")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-7.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("p",[t._v("将以上的基本信息提交之后，阿里云会在几分钟之后自动审核通过。通过之后下载证书，按照阿里云的官方文档进行配置即可。")]),t._v(" "),a("h4",{attrs:{id:"安装证书-参照阿里云提供的文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装证书-参照阿里云提供的文档"}},[t._v("#")]),t._v(" 安装证书（参照阿里云提供的文档）")]),t._v(" "),a("p",[t._v("文件说明：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("证书文件214328891580424.pem，包含两段内容，请不要删除任何一段内容。")])]),t._v(" "),a("li",[a("p",[t._v("如果是证书系统创建的CSR，还包含：证书私钥文件214328891580424.key。")])])]),t._v(" "),a("p",[t._v("( 1 ) 在Nginx的安装目录下创建cert目录，并且将下载的全部文件拷贝到cert目录中。如果申请证书时是自己创建的CSR文件，请将对应的私钥文件放到cert目录下并且命名为214328891580424.key；")]),t._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/operation/ng/installconfig-8.png"),alt:"wxmp"}}),t._v(" "),a("p",[t._v("image.png")]),t._v(" "),a("p",[t._v("( 2 ) 打开 Nginx 安装目录下 conf 目录中的 nginx.conf 文件，找到：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HTTPS server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# #server {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# listen 443;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# server_name localhost;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl on;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_certificate cert.pem;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_certificate_key cert.key;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_session_timeout 5m;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_protocols SSLv2 SSLv3 TLSv1;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ssl_prefer_server_ciphers on;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location / {")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#}")]),t._v("\n")])])]),a("p",[t._v("( 3 ) 将其修改为 (以下属性中ssl开头的属性与证书配置有直接关系，其它属性请结合自己的实际情况复制或调整) :")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    server_name localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可以配置为绑定的域名，如www.michaeljian.top")]),t._v("\n    ssl on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    root html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    index index.html index.htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate   cert/214328891580424.pem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_certificate_key  cert/214328891580424.key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_session_timeout 5m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("NULL:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aNULL:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("MD5:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("ADH:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("RC4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    ssl_prefer_server_ciphers on"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        root html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        index index.html index.htm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("保存退出。")]),t._v(" "),a("p",[t._v("( 4 )重启 Nginx。")]),t._v(" "),a("p",[t._v("( 5 ) 通过 https 方式访问您的站点，测试站点证书的安装配置。如遇到证书不信任问题，请"),a("a",{attrs:{href:"https://help.aliyun.com/video_detail/54216.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看帮助视频"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.cnblogs.com/wang-meng/p/5861174.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx负载均衡的详细配置及使用案例详解"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.nginx.cn/doc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx中文文档"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://nginx.org/en/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx官方文档"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("ul",[a("li",[t._v("https://www.jianshu.com/p/e64539590865")])])])}),[],!1,null,null,null);s.default=e.exports}}]);