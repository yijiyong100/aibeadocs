(window.webpackJsonp=window.webpackJsonp||[]).push([[722],{1238:function(s,t,a){"use strict";a.r(t);var e=a(53),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("本文主要是介绍 Nginx-负载均衡配置案例 。")])]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#nginx搭建简易负载均衡服务"}},[s._v("nginx搭建简易负载均衡服务")])]),a("li",[a("a",{attrs:{href:"#什么是负载均衡"}},[s._v("什么是负载均衡")])]),a("li",[a("a",{attrs:{href:"#基本环境"}},[s._v("基本环境")]),a("ul",[a("li",[a("a",{attrs:{href:"#步骤"}},[s._v("步骤")])]),a("li",[a("a",{attrs:{href:"#主服务器配置"}},[s._v("主服务器配置")])]),a("li",[a("a",{attrs:{href:"#其他两台服务器配置"}},[s._v("其他两台服务器配置")])]),a("li",[a("a",{attrs:{href:"#测试"}},[s._v("测试")])])])]),a("li",[a("a",{attrs:{href:"#负载均衡的几种常用方式"}},[s._v("负载均衡的几种常用方式")]),a("ul",[a("li",[a("a",{attrs:{href:"#_1、-轮询-默认"}},[s._v("1、 轮询(默认)")])]),a("li",[a("a",{attrs:{href:"#_2、weight"}},[s._v("2、weight")])]),a("li",[a("a",{attrs:{href:"#_3、-ip-hash"}},[s._v("3、 ip_hash")])]),a("li",[a("a",{attrs:{href:"#_4、-fair-第三方"}},[s._v("4、 fair (第三方)")])]),a("li",[a("a",{attrs:{href:"#_5、url-hash-第三方"}},[s._v("5、url_hash (第三方)")])])])]),a("li",[a("a",{attrs:{href:"#参考文章"}},[s._v("参考文章")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"nginx搭建简易负载均衡服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx搭建简易负载均衡服务"}},[s._v("#")]),s._v(" nginx搭建简易负载均衡服务")]),s._v(" "),a("p",[a("strong",[s._v("简介")]),s._v(": 本文介绍如何在nginx服务器上实现均衡服务,从而缓解部分高并发问题。")]),s._v(" "),a("h2",{attrs:{id:"什么是负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是负载均衡"}},[s._v("#")]),s._v(" 什么是负载均衡")]),s._v(" "),a("p",[s._v("​    当一台服务器的性能达到极限时，我们可以使用服务器集群来提高网站的整体性能。那么，在服务器集群中，需要有一台服务器充当调度者的角色，用户的所有请求都会首先由它接收，调度者再根据每台服务器的负载情况将请求分配给某一台后端服务器去处理。")]),s._v(" "),a("p",[s._v("​    那么在这个过程中，调度者如何合理分配任务，保证所有后端服务器都将性能充分发挥，从而保持服务器集群的整体性能最优，这就是负载均衡问题。")]),s._v(" "),a("h2",{attrs:{id:"基本环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本环境"}},[s._v("#")]),s._v(" 基本环境")]),s._v(" "),a("p",[s._v("三台"),a("code",[s._v("centos")]),s._v("虚拟机(windows也可以)，都搭建好了"),a("code",[s._v("nginx")]),s._v("环境。当然也可以使用"),a("code",[s._v("docker")]),s._v("映射三个不同端口的"),a("code",[s._v("nginx")]),s._v("容器进行。"),a("code",[s._v("centos")]),s._v("使用"),a("code",[s._v("docker")]),s._v("搭建"),a("code",[s._v("nginx")]),s._v("环境方法。")]),s._v(" "),a("p",[s._v("三台主机分别是：")]),s._v(" "),a("p",[a("strong",[s._v("192.168.73.128")]),s._v(" 主")]),s._v(" "),a("p",[a("strong",[s._v("192.168.73.130")])]),s._v(" "),a("p",[a("strong",[s._v("192.168.73.131")])]),s._v(" "),a("p",[s._v("首先我们解析个域名"),a("code",[s._v("codehui.net")]),s._v("到主服务器"),a("code",[s._v("192.168.73.128")]),s._v("上")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.128 codehui.net\n")])])]),a("h3",{attrs:{id:"步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[s._v("#")]),s._v(" 步骤")]),s._v(" "),a("h3",{attrs:{id:"主服务器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主服务器配置"}},[s._v("#")]),s._v(" 主服务器配置")]),s._v(" "),a("p",[s._v("编辑"),a("code",[s._v("nginx")]),s._v("配置文件")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /etc/nginx/nginx.conf\n")])])]),a("p",[s._v("在http节点中加入下面配置，"),a("a",{attrs:{href:"https://www.codehui.net/info/63.html#%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E5%87%A0%E7%A7%8D%E5%B8%B8%E7%94%A8%E6%96%B9%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"}},[s._v("负载均衡的几种常用方式"),a("OutboundLink")],1),s._v("查看文尾。")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 负载均衡服务器列表")]),s._v("\n    upstream codehui.net "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.130:80"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".73.131:80"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监听80端口的访问")]),s._v("\n    server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        listen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        server_name codehui.net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        location / "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            proxy_pass      http://codehui.net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"其他两台服务器配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他两台服务器配置"}},[s._v("#")]),s._v(" 其他两台服务器配置")]),s._v(" "),a("p",[s._v("我们"),a("code",[s._v("分别")]),s._v("在两台服务器上新建个入口文件，作为区分")]),s._v(" "),a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[s._v('echo "'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("?php")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v('"我是一号服务器:')]),s._v('192.168.73.130";"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(' index.php\necho "'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("?php")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v('"我是二号服务器:')]),s._v('192.168.73.131";"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" index.php\n")])])]),a("p",[s._v("如果要配置其他功能，可以在"),a("code",[s._v("nginx.conf")]),s._v("中加入如下方法")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("server{\n   listen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   server_name codehui"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   root "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("share")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" {\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("php "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n   }\n}\n")])])]),a("p",[s._v("注意重启"),a("code",[s._v("nginx")]),s._v("服务")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("service nginx reload\n")])])]),a("h3",{attrs:{id:"测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),a("p",[s._v("可以看到两次请求分发到了不同服务器")]),s._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s.$withBase("/assets/img/operation/ng/ngloadbalancecase-1.png"),alt:"wxmp"}}),s._v(" "),a("img",{staticClass:"zoom-custom-imgs",attrs:{src:s.$withBase("/assets/img/operation/ng/ngloadbalancecase-2.png"),alt:"wxmp"}}),s._v(" "),a("h2",{attrs:{id:"负载均衡的几种常用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡的几种常用方式"}},[s._v("#")]),s._v(" 负载均衡的几种常用方式")]),s._v(" "),a("h3",{attrs:{id:"_1、-轮询-默认"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、-轮询-默认"}},[s._v("#")]),s._v(" 1、 轮询(默认)")]),s._v(" "),a("p",[s._v("每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("upstream nginx_server {\n    server server1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server server1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n}\n")])])]),a("h3",{attrs:{id:"_2、weight"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、weight"}},[s._v("#")]),s._v(" 2、weight")]),s._v(" "),a("p",[s._v("指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("upstream nginx_server {\n    server server1 weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server server2 weight"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n}\n")])])]),a("p",[s._v("权重越高，在被访问的概率越大，如上例，分别是40%，60%。")]),s._v(" "),a("h3",{attrs:{id:"_3、-ip-hash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、-ip-hash"}},[s._v("#")]),s._v(" 3、 ip_hash")]),s._v(" "),a("p",[s._v("上述方式存在一个问题就是说，在负载均衡系统中，假如用户在某台服务器上登录了，那么该用户第二次请求的时候，因为我们是负载均衡系统，每次请求都会重新定位到服务器集群中的某一个，那么已经登录某一个服务器的用户再重新定位到另一个服务器，其登录信息将会丢失，这样显然是不妥的。")]),s._v(" "),a("p",[s._v("我们可以采用ip_hash指令解决这个问题，如果客户已经访问了某个服务器，当用户再次访问时，会将该请求通过哈希算法，自动定位到该服务器。")]),s._v(" "),a("p",[s._v("每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("upstream nginx_server {\n    ip_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server server1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server server2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n}\n")])])]),a("h3",{attrs:{id:"_4、-fair-第三方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、-fair-第三方"}},[s._v("#")]),s._v(" 4、 fair (第三方)")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("upstream nginx_server {\n    server server1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server server2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    fair"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n}\n")])])]),a("h3",{attrs:{id:"_5、url-hash-第三方"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、url-hash-第三方"}},[s._v("#")]),s._v(" 5、url_hash (第三方)")]),s._v(" "),a("p",[s._v("按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("upstream backserver {\n    server squid1:"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    server squid2:"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("hash")]),s._v(" $request_uri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    hash_method crc32"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n}\n")])])]),a("p",[s._v("每个设备的状态设置为:")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("down 表示单前的server暂时不参与负载")])]),s._v(" "),a("li",[a("p",[s._v("weight 默认为1.weight越大，负载的权重就越大")])]),s._v(" "),a("li",[a("p",[s._v("max_fails：允许请求失败的次数默认为1.当超过最大次数时，返回proxy_next_upstream模块定义的错误")])]),s._v(" "),a("li",[a("p",[s._v("fail_timeout : max_fails次失败后，暂停的时间")])]),s._v(" "),a("li",[a("p",[s._v("backup： 其它所有的非backup机器down或者忙的时候，请求backup机器。所以这台机器压力会最轻。\n配置实例：")])])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#user  nobody;")]),s._v("\nworker_processes  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nevents {\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最大并发数")]),s._v("\n worker_connections  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n}\nhttp{\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 待选服务器列表")]),s._v("\n upstream myproject{\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ip_hash指令，将同一用户引入同一服务器。")]),s._v("\n     ip_hash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("125.219")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".42")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".4")]),s._v(" fail_timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.31")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".183")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n }\n server{\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监听端口")]),s._v("\n      listen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根目录下")]),s._v("\n      location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" {\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择哪个服务器列表")]),s._v("\n            proxy_pass http:"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//myproject;")]),s._v("\n      }\n }\n}\n\n")])])]),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("ul",[a("li",[s._v("https://www.codehui.net/info/63.html")])])])}),[],!1,null,null,null);t.default=n.exports}}]);