(window.webpackJsonp=window.webpackJsonp||[]).push([[743],{1259:function(t,a,s){"use strict";s.r(a);var e=s(53),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本文主要是介绍 MyBatis面试题，面试题和相关解答来自网络，难免有纰漏和疏忽，阅读的时候，发现有疑问的地方，建议多方求证，也可以关注原文评论区，也欢迎在本站"),s("a",{attrs:{href:"https://www.yijiyong.com/about/aboutqa.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("【问题反馈页面】"),s("OutboundLink")],1),t._v("留言反馈。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#mybatis面试汇总"}},[t._v("MyBatis面试汇总")])]),s("li",[s("a",{attrs:{href:"#mybatis简介"}},[t._v("MyBatis简介")]),s("ul",[s("li",[s("a",{attrs:{href:"#mybatis是什么"}},[t._v("MyBatis是什么？")])]),s("li",[s("a",{attrs:{href:"#orm是什么"}},[t._v("ORM是什么")])]),s("li",[s("a",{attrs:{href:"#为什么说mybatis是半自动orm映射工具-它与全自动的区别在哪里"}},[t._v("为什么说Mybatis是半自动ORM映射工具？它与全自动的区别在哪里？")])]),s("li",[s("a",{attrs:{href:"#传统jdbc开发存在的问题"}},[t._v("传统JDBC开发存在的问题")])]),s("li",[s("a",{attrs:{href:"#jdbc编程有哪些不足之处-mybatis是如何解决这些问题的"}},[t._v("JDBC编程有哪些不足之处，MyBatis是如何解决这些问题的？")])]),s("li",[s("a",{attrs:{href:"#mybatis优缺点"}},[t._v("Mybatis优缺点")])]),s("li",[s("a",{attrs:{href:"#mybatis框架适用场景"}},[t._v("MyBatis框架适用场景")])]),s("li",[s("a",{attrs:{href:"#hibernate-和-mybatis-的区别"}},[t._v("Hibernate 和 MyBatis 的区别")])])])]),s("li",[s("a",{attrs:{href:"#mybatis的解析和运行原理"}},[t._v("MyBatis的解析和运行原理")]),s("ul",[s("li",[s("a",{attrs:{href:"#mybatis编程步骤是什么样的"}},[t._v("MyBatis编程步骤是什么样的？")])]),s("li",[s("a",{attrs:{href:"#请说说mybatis的工作原理"}},[t._v("请说说MyBatis的工作原理")])]),s("li",[s("a",{attrs:{href:"#mybatis的功能架构是怎样的"}},[t._v("MyBatis的功能架构是怎样的")])]),s("li",[s("a",{attrs:{href:"#mybatis的框架架构设计是怎么样的"}},[t._v("MyBatis的框架架构设计是怎么样的")])]),s("li",[s("a",{attrs:{href:"#为什么需要预编译"}},[t._v("为什么需要预编译")])]),s("li",[s("a",{attrs:{href:"#mybatis都有哪些executor执行器-它们之间的区别是什么"}},[t._v("Mybatis都有哪些Executor执行器？它们之间的区别是什么？")])]),s("li",[s("a",{attrs:{href:"#mybatis中如何指定使用哪一种executor执行器"}},[t._v("Mybatis中如何指定使用哪一种Executor执行器？")])]),s("li",[s("a",{attrs:{href:"#mybatis是否支持延迟加载-如果支持-它的实现原理是什么"}},[t._v("Mybatis是否支持延迟加载？如果支持，它的实现原理是什么？")])])])]),s("li",[s("a",{attrs:{href:"#映射器"}},[t._v("映射器")]),s("ul",[s("li",[s("a",{attrs:{href:"#和-的区别"}},[t._v("#{}和${}的区别")])]),s("li",[s("a",{attrs:{href:"#模糊查询like语句该怎么写"}},[t._v("模糊查询like语句该怎么写")])]),s("li",[s("a",{attrs:{href:"#在mapper中如何传递多个参数"}},[t._v("在mapper中如何传递多个参数")])]),s("li",[s("a",{attrs:{href:"#mybatis如何执行批量操作"}},[t._v("Mybatis如何执行批量操作")])]),s("li",[s("a",{attrs:{href:"#如何获取生成的主键"}},[t._v("如何获取生成的主键")])]),s("li",[s("a",{attrs:{href:"#当实体类中的属性名和表中的字段名不一样-怎么办"}},[t._v("当实体类中的属性名和表中的字段名不一样 ，怎么办")])]),s("li",[s("a",{attrs:{href:"#mapper-编写有哪几种方式"}},[t._v("Mapper 编写有哪几种方式？")])]),s("li",[s("a",{attrs:{href:"#什么是mybatis的接口绑定-有哪些实现方式"}},[t._v("什么是MyBatis的接口绑定？有哪些实现方式？")])]),s("li",[s("a",{attrs:{href:"#使用mybatis的mapper接口调用时有哪些要求"}},[t._v("使用MyBatis的mapper接口调用时有哪些要求？")])]),s("li",[s("a",{attrs:{href:"#最佳实践中-通常一个xml映射文件-都会写一个dao接口与之对应-请问-这个dao接口的工作原理是什么-dao接口里的方法-参数不同时-方法能重载吗"}},[t._v("最佳实践中，通常一个Xml映射文件，都会写一个Dao接口与之对应，请问，这个Dao接口的工作原理是什么？Dao接口里的方法，参数不同时，方法能重载吗")])]),s("li",[s("a",{attrs:{href:"#mybatis的xml映射文件中-不同的xml映射文件-id是否可以重复"}},[t._v("Mybatis的Xml映射文件中，不同的Xml映射文件，id是否可以重复？")])]),s("li",[s("a",{attrs:{href:"#简述mybatis的xml映射文件和mybatis内部数据结构之间的映射关系"}},[t._v("简述Mybatis的Xml映射文件和Mybatis内部数据结构之间的映射关系？")])]),s("li",[s("a",{attrs:{href:"#mybatis是如何将sql执行结果封装为目标对象并返回的-都有哪些映射形式"}},[t._v("Mybatis是如何将sql执行结果封装为目标对象并返回的？都有哪些映射形式？")])]),s("li",[s("a",{attrs:{href:"#xml映射文件中-除了常见的select-insert-updae-delete标签之外-还有哪些标签"}},[t._v("Xml映射文件中，除了常见的select|insert|updae|delete标签之外，还有哪些标签？")])]),s("li",[s("a",{attrs:{href:"#mybatis映射文件中-如果a标签通过include引用了b标签的内容-请问-b标签能否定义在a标签的后面-还是说必须定义在a标签的前面"}},[t._v("Mybatis映射文件中，如果A标签通过include引用了B标签的内容，请问，B标签能否定义在A标签的后面，还是说必须定义在A标签的前面？")])])])]),s("li",[s("a",{attrs:{href:"#高级查询"}},[t._v("高级查询")]),s("ul",[s("li",[s("a",{attrs:{href:"#mybatis实现一对一-一对多有几种方式-怎么操作的"}},[t._v("MyBatis实现一对一，一对多有几种方式，怎么操作的？")])]),s("li",[s("a",{attrs:{href:"#mybatis是否可以映射enum枚举类"}},[t._v("Mybatis是否可以映射Enum枚举类？")])])])]),s("li",[s("a",{attrs:{href:"#动态sql"}},[t._v("动态SQL")]),s("ul",[s("li",[s("a",{attrs:{href:"#mybatis动态sql是做什么的-都有哪些动态sql-能简述一下动态sql的执行原理不"}},[t._v("Mybatis动态sql是做什么的？都有哪些动态sql？能简述一下动态sql的执行原理不？")])])])]),s("li",[s("a",{attrs:{href:"#插件模块"}},[t._v("插件模块")]),s("ul",[s("li",[s("a",{attrs:{href:"#mybatis是如何进行分页的-分页插件的原理是什么"}},[t._v("Mybatis是如何进行分页的？分页插件的原理是什么？")])]),s("li",[s("a",{attrs:{href:"#简述mybatis的插件运行原理-以及如何编写一个插件。"}},[t._v("简述Mybatis的插件运行原理，以及如何编写一个插件。")])])])]),s("li",[s("a",{attrs:{href:"#缓存"}},[t._v("缓存")]),s("ul",[s("li",[s("a",{attrs:{href:"#mybatis的一级、二级缓存"}},[t._v("Mybatis的一级、二级缓存")])])])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"mybatis面试汇总"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis面试汇总"}},[t._v("#")]),t._v(" MyBatis面试汇总")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/post/dbbasic/mybatis-1.png"),alt:"wxmp"}}),t._v(" "),s("h2",{attrs:{id:"mybatis简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis简介"}},[t._v("#")]),t._v(" MyBatis简介")]),t._v(" "),s("h3",{attrs:{id:"mybatis是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis是什么"}},[t._v("#")]),t._v(" MyBatis是什么？")]),t._v(" "),s("p",[t._v("MyBatis 是一款优秀的持久层框架，一个半 ORM（对象关系映射）框架，它支持定制化 SQL、存储过程以及高级映射。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以使用简单的 XML 或注解来配置和映射原生类型、接口和 Java 的 POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。")]),t._v(" "),s("h3",{attrs:{id:"orm是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#orm是什么"}},[t._v("#")]),t._v(" ORM是什么")]),t._v(" "),s("p",[t._v("ORM（Object Relational Mapping），对象关系映射，是一种为了解决关系型数据库数据与简单Java对象（POJO）的映射关系的技术。简单的说，ORM是通过使用描述对象和数据库之间映射的元数据，将程序中的对象自动持久化到关系型数据库中。")]),t._v(" "),s("h3",{attrs:{id:"为什么说mybatis是半自动orm映射工具-它与全自动的区别在哪里"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么说mybatis是半自动orm映射工具-它与全自动的区别在哪里"}},[t._v("#")]),t._v(" 为什么说Mybatis是半自动ORM映射工具？它与全自动的区别在哪里？")]),t._v(" "),s("p",[t._v("Hibernate属于全自动ORM映射工具，使用Hibernate查询关联对象或者关联集合对象时，可以根据对象关系模型直接获取，所以它是全自动的。")]),t._v(" "),s("p",[t._v("而Mybatis在查询关联对象或关联集合对象时，需要手动编写sql来完成，所以，称之为半自动ORM映射工具。")]),t._v(" "),s("h3",{attrs:{id:"传统jdbc开发存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传统jdbc开发存在的问题"}},[t._v("#")]),t._v(" 传统JDBC开发存在的问题")]),t._v(" "),s("ul",[s("li",[t._v("频繁创建数据库连接对象、释放，容易造成系统资源浪费，影响系统性能。可以使用连接池解决这个问题。但是使用jdbc需要自己实现连接池。")]),t._v(" "),s("li",[t._v("sql语句定义、参数设置、结果集处理存在硬编码。实际项目中sql语句变化的可能性较大，一旦发生变化，需要修改java代码，系统需要重新编译，重新发布。不好维护。")]),t._v(" "),s("li",[t._v("使用preparedStatement向占有位符号传参数存在硬编码，因为sql语句的where条件不一定，可能多也可能少，修改sql还要修改代码，系统不易维护。")]),t._v(" "),s("li",[t._v("结果集处理存在重复代码，处理麻烦。如果可以映射成Java对象会比较方便。")])]),t._v(" "),s("h3",{attrs:{id:"jdbc编程有哪些不足之处-mybatis是如何解决这些问题的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdbc编程有哪些不足之处-mybatis是如何解决这些问题的"}},[t._v("#")]),t._v(" JDBC编程有哪些不足之处，MyBatis是如何解决这些问题的？")]),t._v(" "),s("p",[t._v("1、数据库链接创建、释放频繁造成系统资源浪费从而影响系统性能，如果使用数据库连接池可解决此问题。")]),t._v(" "),s("p",[t._v("解决：在mybatis-config.xml中配置数据链接池，使用连接池管理数据库连接。")]),t._v(" "),s("p",[t._v("2、Sql语句写在代码中造成代码不易维护，实际应用sql变化的可能较大，sql变动需要改变java代码。")]),t._v(" "),s("p",[t._v("解决：将Sql语句配置在XXXXmapper.xml文件中与java代码分离。")]),t._v(" "),s("p",[t._v("3、向sql语句传参数麻烦，因为sql语句的where条件不一定，可能多也可能少，占位符需要和参数一一对应。")]),t._v(" "),s("p",[t._v("解决： Mybatis自动将java对象映射至sql语句。")]),t._v(" "),s("p",[t._v("4、对结果集解析麻烦，sql变化导致解析代码变化，且解析前需要遍历，如果能将数据库记录封装成pojo对象解析比较方便。")]),t._v(" "),s("p",[t._v("解决：Mybatis自动将sql执行结果映射至java对象。")]),t._v(" "),s("h3",{attrs:{id:"mybatis优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis优缺点"}},[t._v("#")]),t._v(" Mybatis优缺点")]),t._v(" "),s("p",[s("strong",[t._v("优点")])]),t._v(" "),s("p",[t._v("与传统的数据库访问技术相比，ORM有以下优点：")]),t._v(" "),s("ul",[s("li",[t._v("基于SQL语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL写在XML里，解除sql与程序代码的耦合，便于统一管理；提供XML标签，支持编写动态SQL语句，并可重用")]),t._v(" "),s("li",[t._v("与JDBC相比，减少了50%以上的代码量，消除了JDBC大量冗余的代码，不需要手动开关连接")]),t._v(" "),s("li",[t._v("很好的与各种数据库兼容（因为MyBatis使用JDBC来连接数据库，所以只要JDBC支持的数据库MyBatis都支持）")]),t._v(" "),s("li",[t._v("提供映射标签，支持对象与数据库的ORM字段关系映射；提供对象关系映射标签，支持对象关系组件维护")]),t._v(" "),s("li",[t._v("能够与Spring很好的集成")])]),t._v(" "),s("p",[s("strong",[t._v("缺点")])]),t._v(" "),s("ul",[s("li",[t._v("SQL语句的编写工作量较大，尤其当字段多、关联表多时，对开发人员编写SQL语句的功底有一定要求")]),t._v(" "),s("li",[t._v("SQL语句依赖于数据库，导致数据库移植性差，不能随意更换数据库")])]),t._v(" "),s("h3",{attrs:{id:"mybatis框架适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis框架适用场景"}},[t._v("#")]),t._v(" MyBatis框架适用场景")]),t._v(" "),s("ul",[s("li",[t._v("MyBatis专注于SQL本身，是一个足够灵活的DAO层解决方案。")]),t._v(" "),s("li",[t._v("对性能的要求很高，或者需求变化较多的项目，如互联网项目，MyBatis将是不错的选择。")])]),t._v(" "),s("h3",{attrs:{id:"hibernate-和-mybatis-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hibernate-和-mybatis-的区别"}},[t._v("#")]),t._v(" Hibernate 和 MyBatis 的区别")]),t._v(" "),s("p",[s("strong",[t._v("相同点")])]),t._v(" "),s("p",[t._v("都是对jdbc的封装，都是持久层的框架，都用于dao层的开发。")]),t._v(" "),s("p",[s("strong",[t._v("不同点")])]),t._v(" "),s("p",[t._v("映射关系")]),t._v(" "),s("ul",[s("li",[t._v("MyBatis 是一个半自动映射的框架，配置Java对象与sql语句执行结果的对应关系，多表关联关系配置简单")]),t._v(" "),s("li",[t._v("Hibernate 是一个全表映射的框架，配置Java对象与数据库表的对应关系，多表关联关系配置复杂")])]),t._v(" "),s("p",[t._v("SQL优化和移植性")]),t._v(" "),s("ul",[s("li",[t._v("Hibernate 对SQL语句封装，提供了日志、缓存、级联（级联比 MyBatis 强大）等特性，此外还提供 HQL（Hibernate Query Language）操作数据库，数据库无关性支持好，但会多消耗性能。如果项目需要支持多种数据库，代码开发量少，但SQL语句优化困难。")]),t._v(" "),s("li",[t._v("MyBatis 需要手动编写 SQL，支持动态 SQL、处理列表、动态生成表名、支持存储过程。开发工作量相对大些。直接使用SQL语句操作数据库，不支持数据库无关性，但sql语句优化容易。")])]),t._v(" "),s("p",[t._v("开发难易程度和学习成本")]),t._v(" "),s("ul",[s("li",[t._v("Hibernate 是重量级框架，学习使用门槛高，适合于需求相对稳定，中小型的项目，比如：办公自动化系统")]),t._v(" "),s("li",[t._v("MyBatis 是轻量级框架，学习使用门槛低，适合于需求变化频繁，大型的项目，比如：互联网电子商务系统")])]),t._v(" "),s("p",[s("strong",[t._v("总结")])]),t._v(" "),s("p",[t._v("MyBatis 是一个小巧、方便、高效、简单、直接、半自动化的持久层框架，")]),t._v(" "),s("p",[t._v("Hibernate 是一个强大、方便、高效、复杂、间接、全自动化的持久层框架。")]),t._v(" "),s("h2",{attrs:{id:"mybatis的解析和运行原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的解析和运行原理"}},[t._v("#")]),t._v(" MyBatis的解析和运行原理")]),t._v(" "),s("h3",{attrs:{id:"mybatis编程步骤是什么样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis编程步骤是什么样的"}},[t._v("#")]),t._v(" MyBatis编程步骤是什么样的？")]),t._v(" "),s("p",[t._v("1、 创建SqlSessionFactory")]),t._v(" "),s("p",[t._v("2、 通过SqlSessionFactory创建SqlSession")]),t._v(" "),s("p",[t._v("3、 通过sqlsession执行数据库操作")]),t._v(" "),s("p",[t._v("4、 调用session.commit()提交事务")]),t._v(" "),s("p",[t._v("5、 调用session.close()关闭会话")]),t._v(" "),s("h3",{attrs:{id:"请说说mybatis的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请说说mybatis的工作原理"}},[t._v("#")]),t._v(" 请说说MyBatis的工作原理")]),t._v(" "),s("p",[t._v("在学习 MyBatis 程序之前，需要了解一下 MyBatis 工作原理，以便于理解程序。MyBatis 的工作原理如下图")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/post/dbbasic/mybatis-2.png"),alt:"wxmp"}}),t._v(" "),s("p",[t._v("1）读取 MyBatis 配置文件：mybatis-config.xml 为 MyBatis 的全局配置文件，配置了 MyBatis 的运行环境等信息，例如数据库连接信息。")]),t._v(" "),s("p",[t._v("2）加载映射文件。映射文件即 SQL 映射文件，该文件中配置了操作数据库的 SQL 语句，需要在 MyBatis 配置文件 mybatis-config.xml 中加载。mybatis-config.xml 文件可以加载多个映射文件，每个文件对应数据库中的一张表。")]),t._v(" "),s("p",[t._v("3）构造会话工厂：通过 MyBatis 的环境等配置信息构建会话工厂 SqlSessionFactory。")]),t._v(" "),s("p",[t._v("4）创建会话对象：由会话工厂创建 SqlSession 对象，该对象中包含了执行 SQL 语句的所有方法。")]),t._v(" "),s("p",[t._v("5）Executor 执行器：MyBatis 底层定义了一个 Executor 接口来操作数据库，它将根据 SqlSession 传递的参数动态地生成需要执行的 SQL 语句，同时负责查询缓存的维护。")]),t._v(" "),s("p",[t._v("6）MappedStatement 对象：在 Executor 接口的执行方法中有一个 MappedStatement 类型的参数，该参数是对映射信息的封装，用于存储要映射的 SQL 语句的 id、参数等信息。")]),t._v(" "),s("p",[t._v("7）输入参数映射：输入参数类型可以是 Map、List 等集合类型，也可以是基本数据类型和 POJO 类型。输入参数映射过程类似于 JDBC 对 preparedStatement 对象设置参数的过程。")]),t._v(" "),s("p",[t._v("8）输出结果映射：输出结果类型可以是 Map、 List 等集合类型，也可以是基本数据类型和 POJO 类型。输出结果映射过程类似于 JDBC 对结果集的解析过程。")]),t._v(" "),s("h3",{attrs:{id:"mybatis的功能架构是怎样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的功能架构是怎样的"}},[t._v("#")]),t._v(" MyBatis的功能架构是怎样的")]),t._v(" "),s("p",[t._v("Mybatis功能框架")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/post/dbbasic/mybatis-3.png"),alt:"wxmp"}}),t._v(" "),s("p",[t._v("我们把Mybatis的功能架构分为三层：")]),t._v(" "),s("ul",[s("li",[t._v("API接口层：提供给外部使用的接口API，开发人员通过这些本地API来操纵数据库。接口层一接收到调用请求就会调用数据处理层来完成具体的数据处理。")]),t._v(" "),s("li",[t._v("数据处理层：负责具体的SQL查找、SQL解析、SQL执行和执行结果映射处理等。它主要的目的是根据调用的请求完成一次数据库操作。")]),t._v(" "),s("li",[t._v("基础支撑层：负责最基础的功能支撑，包括连接管理、事务管理、配置加载和缓存处理，这些都是共用的东西，将他们抽取出来作为最基础的组件。为上层的数据处理层提供最基础的支撑。")])]),t._v(" "),s("h3",{attrs:{id:"mybatis的框架架构设计是怎么样的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的框架架构设计是怎么样的"}},[t._v("#")]),t._v(" MyBatis的框架架构设计是怎么样的")]),t._v(" "),s("p",[t._v("Mybatis框架架构")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/post/dbbasic/mybatis-4.png"),alt:"wxmp"}}),t._v(" "),s("p",[t._v("这张图从上往下看。MyBatis的初始化，会从mybatis-config.xml配置文件，解析构造成Configuration这个类，就是图中的红框。")]),t._v(" "),s("p",[t._v("(1)加载配置：配置来源于两个地方，一处是配置文件，一处是Java代码的注解，将SQL的配置信息加载成为一个个MappedStatement对象（包括了传入参数映射配置、执行的SQL语句、结果映射配置），存储在内存中。")]),t._v(" "),s("p",[t._v("(2)SQL解析：当API接口层接收到调用请求时，会接收到传入SQL的ID和传入对象（可以是Map、JavaBean或者基本数据类型），Mybatis会根据SQL的ID找到对应的MappedStatement，然后根据传入参数对象对MappedStatement进行解析，解析后可以得到最终要执行的SQL语句和参数。")]),t._v(" "),s("p",[t._v("(3)SQL执行：将最终得到的SQL和参数拿到数据库进行执行，得到操作数据库的结果。")]),t._v(" "),s("p",[t._v("(4)结果映射：将操作数据库的结果按照映射的配置进行转换，可以转换成HashMap、JavaBean或者基本数据类型，并将最终结果返回。")]),t._v(" "),s("h3",{attrs:{id:"为什么需要预编译"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要预编译"}},[t._v("#")]),t._v(" 为什么需要预编译")]),t._v(" "),s("ol",[s("li",[t._v("定义：\nSQL 预编译指的是数据库驱动在发送 SQL 语句和参数给 DBMS 之前对 SQL 语句进行编译，这样 DBMS 执行 SQL 时，就不需要重新编译。")]),t._v(" "),s("li",[t._v("为什么需要预编译\nJDBC 中使用对象 PreparedStatement 来抽象预编译语句，使用预编译。预编译阶段可以优化 SQL 的执行。预编译之后的 SQL 多数情况下可以直接执行，DBMS 不需要再次编译，越复杂的SQL，编译的复杂度将越大，预编译阶段可以合并多次操作为一个操作。同时预编译语句对象可以重复利用。把一个 SQL 预编译后产生的 PreparedStatement 对象缓存下来，下次对于同一个SQL，可以直接使用这个缓存的 PreparedState 对象。Mybatis默认情况下，将对所有的 SQL 进行预编译。")])]),t._v(" "),s("h3",{attrs:{id:"mybatis都有哪些executor执行器-它们之间的区别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis都有哪些executor执行器-它们之间的区别是什么"}},[t._v("#")]),t._v(" Mybatis都有哪些Executor执行器？它们之间的区别是什么？")]),t._v(" "),s("p",[t._v("Mybatis有三种基本的Executor执行器，SimpleExecutor、ReuseExecutor、BatchExecutor。")]),t._v(" "),s("p",[s("strong",[t._v("SimpleExecutor")]),t._v("：每执行一次update或select，就开启一个Statement对象，用完立刻关闭Statement对象。")]),t._v(" "),s("p",[s("strong",[t._v("ReuseExecutor")]),t._v("：执行update或select，以sql作为key查找Statement对象，存在就使用，不存在就创建，用完后，不关闭Statement对象，而是放置于Map<String, Statement>内，供下一次使用。简言之，就是重复使用Statement对象。")]),t._v(" "),s("p",[s("strong",[t._v("BatchExecutor")]),t._v("：执行update（没有select，JDBC批处理不支持select），将所有sql都添加到批处理中（addBatch()），等待统一执行（executeBatch()），它缓存了多个Statement对象，每个Statement对象都是addBatch()完毕后，等待逐一执行executeBatch()批处理。与JDBC批处理相同。")]),t._v(" "),s("p",[t._v("作用范围：Executor的这些特点，都严格限制在SqlSession生命周期范围内。")]),t._v(" "),s("h3",{attrs:{id:"mybatis中如何指定使用哪一种executor执行器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis中如何指定使用哪一种executor执行器"}},[t._v("#")]),t._v(" Mybatis中如何指定使用哪一种Executor执行器？")]),t._v(" "),s("p",[t._v("在Mybatis配置文件中，在设置（settings）可以指定默认的ExecutorType执行器类型，也可以手动给DefaultSqlSessionFactory的创建SqlSession的方法传递ExecutorType类型参数，如SqlSession openSession(ExecutorType execType)。")]),t._v(" "),s("p",[t._v("配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新。")]),t._v(" "),s("h3",{attrs:{id:"mybatis是否支持延迟加载-如果支持-它的实现原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis是否支持延迟加载-如果支持-它的实现原理是什么"}},[t._v("#")]),t._v(" Mybatis是否支持延迟加载？如果支持，它的实现原理是什么？")]),t._v(" "),s("p",[t._v("Mybatis仅支持association关联对象和collection关联集合对象的延迟加载，association指的就是一对一，collection指的就是一对多查询。在Mybatis配置文件中，可以配置是否启用延迟加载lazyLoadingEnabled=true|false。")]),t._v(" "),s("p",[t._v("它的原理是，使用CGLIB创建目标对象的代理对象，当调用目标方法时，进入拦截器方法，比如调用a.getB().getName()，拦截器invoke()方法发现a.getB()是null值，那么就会单独发送事先保存好的查询关联B对象的sql，把B查询上来，然后调用a.setB(b)，于是a的对象b属性就有值了，接着完成a.getB().getName()方法的调用。这就是延迟加载的基本原理。")]),t._v(" "),s("p",[t._v("当然了，不光是Mybatis，几乎所有的包括Hibernate，支持延迟加载的原理都是一样的。")]),t._v(" "),s("h2",{attrs:{id:"映射器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射器"}},[t._v("#")]),t._v(" 映射器")]),t._v(" "),s("h3",{attrs:{id:"和-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-的区别"}},[t._v("#")]),t._v(" #{}和"),s("code",[t._v("${}")]),t._v("的区别")]),t._v(" "),s("ul",[s("li",[t._v("#{}是占位符，预编译处理；"),s("code",[t._v("${}")]),t._v("是拼接符，字符串替换，没有预编译处理。")]),t._v(" "),s("li",[t._v("Mybatis在处理#{}时，#{}传入参数是以字符串传入，会将SQL中的#{}替换为?号，调用PreparedStatement的set方法来赋值。")]),t._v(" "),s("li",[t._v("Mybatis在处理时 ， 是 原 值 传 入 ， 就 是 把 {}时，是原值传入，就是把时，是原值传入，就是把{}替换成变量的值，相当于JDBC中的Statement编译")]),t._v(" "),s("li",[t._v("变量替换后，#{} 对应的变量自动加上单引号 ‘’；变量替换后，"),s("code",[t._v("${}")]),t._v(" 对应的变量不会加上单引号 ‘’")]),t._v(" "),s("li",[t._v("#{} 可以有效的防止SQL注入，提高系统安全性；"),s("code",[t._v("${}")]),t._v(" 不能防止SQL 注入")]),t._v(" "),s("li",[t._v("#{} 的变量替换是在DBMS 中；"),s("code",[t._v("${}")]),t._v(" 的变量替换是在 DBMS 外")])]),t._v(" "),s("h3",{attrs:{id:"模糊查询like语句该怎么写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模糊查询like语句该怎么写"}},[t._v("#")]),t._v(" 模糊查询like语句该怎么写")]),t._v(" "),s("p",[t._v("（1）’%"),s("code",[t._v("$")]),t._v("{question}%’ 可能引起SQL注入，不推荐")]),t._v(" "),s("p",[t._v('（2）"%"#{question}"%" 注意：因为#{…}解析成sql语句时候，会在变量外侧自动加单引号’ \'，所以这里 % 需要使用双引号" "，不能使用单引号 ’ \'，不然会查不到任何结果。')]),t._v(" "),s("p",[t._v("（3）CONCAT(’%’,#{question},’%’) 使用CONCAT()函数，推荐")]),t._v(" "),s("p",[t._v("（4）使用bind标签")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("listUserLikeUsername"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.jourwon.pojo.User"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n　　"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bind")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("pattern"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(" + username + "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n　　select id,sex,age,username,password from person where username LIKE #{pattern}\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("select")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"在mapper中如何传递多个参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在mapper中如何传递多个参数"}},[t._v("#")]),t._v(" 在mapper中如何传递多个参数")]),t._v(" "),s("p",[s("strong",[t._v("方法1：顺序传参法")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" deptId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("select id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"selectUser"')]),t._v(" resultMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserResultMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" from user\n    where user_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" and dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("select"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("#{}里面的数字代表传入参数的顺序。")]),t._v(" "),s("p",[t._v("这种方法不建议使用，sql层表达不直观，且一旦顺序调整容易出错。")]),t._v(" "),s("p",[s("strong",[t._v("方法2：@Param注解传参法")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deptId"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" deptId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("select id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"selectUser"')]),t._v(" resultMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserResultMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" from user\n    where user_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" and dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("deptId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("select"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("p",[t._v("#{}里面的名称对应的是注解@Param括号里面修饰的名称。")]),t._v(" "),s("p",[t._v("这种方法在参数不多的情况还是比较直观的，推荐使用。")]),t._v(" "),s("p",[s("strong",[t._v("方法3：Map传参法")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("select id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"selectUser"')]),t._v(" parameterType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"java.util.Map"')]),t._v(" resultMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserResultMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" from user\n    where user_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" and dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("deptId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("select"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[t._v("#{}里面的名称对应的是Map里面的key名称。")]),t._v(" "),s("p",[t._v("这种方法适合传递多个参数，且参数易变能灵活传递的情况。")]),t._v(" "),s("p",[s("strong",[t._v("方法4：Java Bean传参法")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("selectUser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("User")]),t._v(" user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("select id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"selectUser"')]),t._v(" parameterType"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.jourwon.pojo.User"')]),t._v(" resultMap"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UserResultMap"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    select "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" from user\n    where user_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("userName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" and dept_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("deptId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("select"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("p",[t._v("#{}里面的名称对应的是User类里面的成员属性。")]),t._v(" "),s("p",[t._v("这种方法直观，需要建一个实体类，扩展不容易，需要加属性，但代码可读性强，业务逻辑处理方便，推荐使用。")]),t._v(" "),s("h3",{attrs:{id:"mybatis如何执行批量操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis如何执行批量操作"}},[t._v("#")]),t._v(" Mybatis如何执行批量操作")]),t._v(" "),s("p",[s("strong",[t._v("使用foreach标签")])]),t._v(" "),s("p",[t._v("foreach的主要用在构建in条件中，它可以在SQL语句中进行迭代一个集合。foreach标签的属性主要有item，index，collection，open，separator，close。")]),t._v(" "),s("ul",[s("li",[t._v("item　　表示集合中每一个元素进行迭代时的别名，随便起的变量名；")]),t._v(" "),s("li",[t._v("index　　指定一个名字，用于表示在迭代过程中，每次迭代到的位置，不常用；")]),t._v(" "),s("li",[t._v("open　　表示该语句以什么开始，常用“(”；")]),t._v(" "),s("li",[t._v("separator表示在每次进行迭代之间以什么符号作为分隔符，常用“,”；")]),t._v(" "),s("li",[t._v("close　　表示以什么结束，常用“)”。")])]),t._v(" "),s("p",[t._v("在使用foreach的时候最关键的也是最容易出错的就是collection属性，该属性是必须指定的，但是在不同情况下，该属性的值是不一样的，主要有一下3种情况：")]),t._v(" "),s("ol",[s("li",[t._v("如果传入的是单参数且参数类型是一个List的时候，collection属性值为list")]),t._v(" "),s("li",[t._v("如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array")]),t._v(" "),s("li",[t._v("如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，\nmap的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key")])]),t._v(" "),s("p",[t._v("具体用法如下：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('\x3c!-- 批量保存(foreach插入多条数据两种方法)\n       int addEmpsBatch(@Param("emps") List<Employee> emps); --\x3e')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- MySQL下批量保存，可以foreach遍历 mysql支持values(),(),()语法 --\x3e")]),t._v(" //推荐使用\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("addEmpsBatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    INSERT INTO emp(ename,gender,email,did)\n    VALUES\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("foreach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("collection")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("emps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("separator")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(","),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        (#{emp.eName},#{emp.gender},#{emp.email},#{emp.dept.id})\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 这种方式需要数据库连接属性allowMutiQueries=true的支持\n 如jdbc.url=jdbc:mysql://localhost:3306/mybatis?allowMultiQueries=true --\x3e")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("addEmpsBatch"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("foreach")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("collection")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("emps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("item")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("emp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("separator")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(";"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("                                 \n        INSERT INTO emp(ename,gender,email,did)\n        VALUES(#{emp.eName},#{emp.gender},#{emp.email},#{emp.dept.id})\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[s("strong",[t._v("使用ExecutorType.BATCH")])]),t._v(" "),s("p",[t._v("Mybatis内置的ExecutorType有3种，默认为simple,该模式下它为每个语句的执行创建一个新的预处理语句，单条提交sql；而batch模式重复使用已经预处理的语句，并且批量执行所有更新语句，显然batch性能将更优； 但batch模式也有自己的问题，比如在Insert操作时，在事务没有提交之前，是没有办法获取到自增的id，这在某型情形下是不符合业务要求的")]),t._v(" "),s("p",[t._v("具体用法如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//批量保存方法测试")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("testBatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlSessionFactory")]),t._v(" sqlSessionFactory "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSqlSessionFactory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可以执行批量操作的sqlSession")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SqlSession")]),t._v(" openSession "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sqlSessionFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("openSession")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ExecutorType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BATCH"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//批量保存执行前时间")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" start "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EmployeeMapper")]),t._v(" mapper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" openSession"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EmployeeMapper")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            mapper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEmp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UUID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("randomUUID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        openSession"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//批量保存执行后的时间")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"执行时长"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//批量 预编译sql一次==》设置参数==》10000次==》执行1次   677")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//非批量  （预编译=设置参数=执行 ）==》10000次   1121")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        openSession"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("mapper和mapper.xml如下")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EmployeeMapper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//批量保存员工")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEmp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" employee"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mapper namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.jourwon.mapper.EmployeeMapper"')]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("批量保存员工 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("insert id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"addEmp"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n        insert into "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lastName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("lastName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("gender"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("insert"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("mapper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"如何获取生成的主键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何获取生成的主键"}},[t._v("#")]),t._v(" 如何获取生成的主键")]),t._v(" "),s("p",[s("strong",[t._v("对于支持主键自增的数据库（MySQL）")])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("insertUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("useGeneratedKeys")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyProperty")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    insert into user( \n    user_name, user_password, create_time) \n    values(#{userName}, #{userPassword} , #{createTime, jdbcType= TIMESTAMP})\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),s("p",[t._v("parameterType 可以不写，Mybatis可以推断出传入的数据类型。如果想要访问主键，那么应当parameterType 应当是java实体或者Map。这样数据在插入之后 可以通过ava实体或者Map 来获取主键值。通过 getUserId获取主键")]),t._v(" "),s("p",[s("strong",[t._v("不支持主键自增的数据库（Oracle）")])]),t._v(" "),s("p",[t._v("对于像Oracle这样的数据，没有提供主键自增的功能，而是使用序列的方式获取自增主键。\n可以使用"),s("code",[t._v("＜selectKey＞")]),t._v("标签来获取主键的值，这种方式不仅适用于不提供主键自增功能的数据库，也适用于提供主键自增功能的数据库\n"),s("code",[t._v("＜selectKey＞")]),t._v("一般的用法")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("selectKey")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyColumn")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("long"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyProperty")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("BEFORE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("selectKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("keyProperty")]),t._v(" "),s("td",[t._v("selectKey 语句结果应该被设置的目标属性。如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表。")])]),t._v(" "),s("tr",[s("td",[t._v("keyColumn")]),t._v(" "),s("td",[t._v("匹配属性的返回结果集中的列名称。如果希望得到多个生成的列，也可以是逗号分隔的属性名称列表。")])]),t._v(" "),s("tr",[s("td",[t._v("resultType")]),t._v(" "),s("td",[t._v("结果的类型，MyBatis 通常可以推算出来。MyBatis 允许任何简单类型用作主键的类型，包括字符串。如果希望作用于多个生成的列，则可以使用一个包含期望属性的 Object 或一个 Map。")])]),t._v(" "),s("tr",[s("td",[t._v("order")]),t._v(" "),s("td",[t._v("值可为BEFORE 或 AFTER。如果是 BEFORE，那么它会先执行selectKey设置 keyProperty 然后执行插入语句。如果为AFTER则相反。")])]),t._v(" "),s("tr",[s("td",[t._v("statementType")]),t._v(" "),s("td",[t._v("使用何种语句类型，默认PREPARED。 有STATEMENT，PREPARED 和 CALLABLE 语句的映射类型。")])])])]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("insertUser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("selectKey")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyColumn")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("long"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("keyProperty")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("userId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("order")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("BEFORE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\tSELECT USER_ID.nextval as id from dual \n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("selectKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n\tinsert into user( \n\tuser_id,user_name, user_password, create_time) \n\tvalues(#{userId},#{userName}, #{userPassword} , #{createTime, jdbcType= TIMESTAMP})\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("insert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("此时会将Oracle生成的主键值赋予userId变量。这个userId 就是USER对象的属性，这样就可以将生成的主键值返回了。如果仅仅是在insert语句中使用但是不返回，此时keyProperty=“任意自定义变量名”，resultType 可以不写。\nOracle 数据库中的值要设置为 BEFORE ，这是因为 Oracle中需要先从序列获取值，然后将值作为主键插入到数据库中。")]),t._v(" "),s("p",[s("strong",[t._v("扩展")]),t._v("\n如果Mysql 使用selectKey的方式获取主键，需要注意下面两点：")]),t._v(" "),s("p",[t._v("order ： AFTER\n获取递增主键值 ：SELECT LAST_INSERT_ID()")]),t._v(" "),s("h3",{attrs:{id:"当实体类中的属性名和表中的字段名不一样-怎么办"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当实体类中的属性名和表中的字段名不一样-怎么办"}},[t._v("#")]),t._v(" 当实体类中的属性名和表中的字段名不一样 ，怎么办")]),t._v(" "),s("p",[t._v("第1种： 通过在查询的SQL语句中定义字段名的别名，让字段名的别名和实体类的属性名一致。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("getOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.jourwon.pojo.Order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n       select order_id id, order_no orderno ,order_price price form orders where order_id=#{id};\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("select")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第2种： 通过"),s("code",[t._v("<resultMap>")]),t._v("来映射字段名和实体类属性名的一一对应的关系。")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("select")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("getOrder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("parameterType")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("int"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resultMap")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("orderResultMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\tselect * from orders where order_id=#{id}\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("select")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("resultMap")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.jourwon.pojo.Order"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("orderResultMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("!–用id属性来映射主键字段–")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("id")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("column")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("order_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("!–用result属性来映射非主键字段，property为实体类属性名，column为数据库表中的属性–")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("orderno"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("column")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("order_no"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("result")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("column")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("order_price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("reslutMap")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"mapper-编写有哪几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mapper-编写有哪几种方式"}},[t._v("#")]),t._v(" Mapper 编写有哪几种方式？")]),t._v(" "),s("p",[t._v("第一种：接口实现类继承 SqlSessionDaoSupport：使用此种方法需要编写mapper 接口，mapper 接口实现类、mapper.xml 文件。")]),t._v(" "),s("p",[t._v("（1）在 sqlMapConfig.xml 中配置 mapper.xml 的位置")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mappers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mapper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resource")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper.xml 文件的地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mapper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resource")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper.xml 文件的地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mappers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("（2）定义 mapper 接口")]),t._v(" "),s("p",[t._v("（3）实现类集成 SqlSessionDaoSupport")]),t._v(" "),s("p",[t._v("mapper 方法中可以 this.getSqlSession()进行数据增删改查。")]),t._v(" "),s("p",[t._v("（4）spring 配置")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper 接口的实现"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sqlSessionFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sqlSessionFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第二种：使用 org.mybatis.spring.mapper.MapperFactoryBean：")]),t._v(" "),s("p",[t._v("（1）在 sqlMapConfig.xml 中配置 mapper.xml 的位置，如果 mapper.xml 和mappre 接口的名称相同且在同一个目录，这里可以不用配置")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mappers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mapper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resource")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper.xml 文件的地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("mapper")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("resource")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper.xml 文件的地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("mappers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("（2）定义 mapper 接口：")]),t._v(" "),s("p",[t._v("（3）mapper.xml 中的 namespace 为 mapper 接口的地址")]),t._v(" "),s("p",[t._v("（4）mapper 接口中的方法名和 mapper.xml 中的定义的 statement 的 id 保持一致")]),t._v(" "),s("p",[t._v("（5）Spring 中定义")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("org.mybatis.spring.mapper.MapperFactoryBean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapperInterface"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper 接口地址"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sqlSessionFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("ref")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sqlSessionFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("第三种：使用 mapper 扫描器：")]),t._v(" "),s("p",[t._v("（1）mapper.xml 文件编写：")]),t._v(" "),s("p",[t._v("mapper.xml 中的 namespace 为 mapper 接口的地址；")]),t._v(" "),s("p",[t._v("mapper 接口中的方法名和 mapper.xml 中的定义的 statement 的 id 保持一致；")]),t._v(" "),s("p",[t._v("如果将 mapper.xml 和 mapper 接口的名称保持一致则不用在 sqlMapConfig.xml中进行配置。")]),t._v(" "),s("p",[t._v("（2）定义 mapper 接口：")]),t._v(" "),s("p",[t._v("注意 mapper.xml 的文件名和 mapper 的接口名称保持一致，且放在同一个目录")]),t._v(" "),s("p",[t._v("（3）配置 mapper 扫描器：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("org.mybatis.spring.mapper.MapperScannerConfigurer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("basePackage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("mapper 接口包地址\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sqlSessionFactoryBeanName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("sqlSessionFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("（4）使用扫描器后从 spring 容器中获取 mapper 的实现对象。")]),t._v(" "),s("h3",{attrs:{id:"什么是mybatis的接口绑定-有哪些实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是mybatis的接口绑定-有哪些实现方式"}},[t._v("#")]),t._v(" 什么是MyBatis的接口绑定？有哪些实现方式？")]),t._v(" "),s("p",[t._v("接口绑定，就是在MyBatis中任意定义接口，然后把接口里面的方法和SQL语句绑定，我们直接调用接口方法就可以，这样比起原来了SqlSession提供的方法我们可以有更加灵活的选择和设置。")]),t._v(" "),s("p",[t._v("接口绑定有两种实现方式")]),t._v(" "),s("p",[t._v("通过注解绑定，就是在接口的方法上面加上 @Select、@Update等注解，里面包含Sql语句来绑定；")]),t._v(" "),s("p",[t._v("通过xml里面写SQL来绑定， 在这种情况下，要指定xml映射文件里面的namespace必须为接口的全路径名。当Sql语句比较简单时候，用注解绑定， 当SQL语句比较复杂时候，用xml绑定，一般用xml绑定的比较多。")]),t._v(" "),s("h3",{attrs:{id:"使用mybatis的mapper接口调用时有哪些要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用mybatis的mapper接口调用时有哪些要求"}},[t._v("#")]),t._v(" 使用MyBatis的mapper接口调用时有哪些要求？")]),t._v(" "),s("p",[t._v("1、Mapper接口方法名和mapper.xml中定义的每个sql的id相同。")]),t._v(" "),s("p",[t._v("2、Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同。")]),t._v(" "),s("p",[t._v("3、Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同。")]),t._v(" "),s("p",[t._v("4、Mapper.xml文件中的namespace即是mapper接口的类路径。")]),t._v(" "),s("h3",{attrs:{id:"最佳实践中-通常一个xml映射文件-都会写一个dao接口与之对应-请问-这个dao接口的工作原理是什么-dao接口里的方法-参数不同时-方法能重载吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践中-通常一个xml映射文件-都会写一个dao接口与之对应-请问-这个dao接口的工作原理是什么-dao接口里的方法-参数不同时-方法能重载吗"}},[t._v("#")]),t._v(" 最佳实践中，通常一个Xml映射文件，都会写一个Dao接口与之对应，请问，这个Dao接口的工作原理是什么？Dao接口里的方法，参数不同时，方法能重载吗")]),t._v(" "),s("p",[t._v("Dao接口，就是人们常说的Mapper接口，接口的全限名，就是映射文件中的namespace的值，接口的方法名，就是映射文件中MappedStatement的id值，接口方法内的参数，就是传递给sql的参数。Mapper接口是没有实现类的，当调用接口方法时，接口全限名+方法名拼接字符串作为key值，可唯一定位一个MappedStatement，举例：com.mybatis3.mappers.StudentDao.findStudentById，可以唯一找到namespace为com.mybatis3.mappers.StudentDao下面id = findStudentById的MappedStatement。在Mybatis中，每一个"),s("code",[t._v("<select>")]),t._v("、"),s("code",[t._v("<insert>")]),t._v("、"),s("code",[t._v("<update>")]),t._v("、"),s("code",[t._v("<delete>")]),t._v("标签，都会被解析为一个MappedStatement对象。")]),t._v(" "),s("p",[t._v("Dao接口里的方法，是不能重载的，因为是全限名+方法名的保存和寻找策略。")]),t._v(" "),s("p",[t._v("Dao接口的工作原理是JDK动态代理，Mybatis运行时会使用JDK动态代理为Dao接口生成代理proxy对象，代理对象proxy会拦截接口方法，转而执行MappedStatement所代表的sql，然后将sql执行结果返回。")]),t._v(" "),s("h3",{attrs:{id:"mybatis的xml映射文件中-不同的xml映射文件-id是否可以重复"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的xml映射文件中-不同的xml映射文件-id是否可以重复"}},[t._v("#")]),t._v(" Mybatis的Xml映射文件中，不同的Xml映射文件，id是否可以重复？")]),t._v(" "),s("p",[t._v("不同的Xml映射文件，如果配置了namespace，那么id可以重复；如果没有配置namespace，那么id不能重复；毕竟namespace不是必须的，只是最佳实践而已。")]),t._v(" "),s("p",[t._v("原因就是namespace+id是作为Map<String, MappedStatement>的key使用的，如果没有namespace，就剩下id，那么，id重复会导致数据互相覆盖。有了namespace，自然id就可以重复，namespace不同，namespace+id自然也就不同。")]),t._v(" "),s("h3",{attrs:{id:"简述mybatis的xml映射文件和mybatis内部数据结构之间的映射关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述mybatis的xml映射文件和mybatis内部数据结构之间的映射关系"}},[t._v("#")]),t._v(" 简述Mybatis的Xml映射文件和Mybatis内部数据结构之间的映射关系？")]),t._v(" "),s("p",[t._v("答：Mybatis将所有Xml配置信息都封装到All-In-One重量级对象Configuration内部。在Xml映射文件中，"),s("code",[t._v("<parameterMap>")]),t._v("标签会被解析为ParameterMap对象，其每个子元素会被解析为ParameterMapping对象。"),s("code",[t._v("<resultMap>")]),t._v("标签会被解析为ResultMap对象，其每个子元素会被解析为ResultMapping对象。每一个"),s("code",[t._v("<select>")]),t._v("、"),s("code",[t._v("<insert>")]),t._v("、"),s("code",[t._v("<update>")]),t._v("、"),s("code",[t._v("<delete>")]),t._v("标签均会被解析为MappedStatement对象，标签内的sql会被解析为BoundSql对象。")]),t._v(" "),s("h3",{attrs:{id:"mybatis是如何将sql执行结果封装为目标对象并返回的-都有哪些映射形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis是如何将sql执行结果封装为目标对象并返回的-都有哪些映射形式"}},[t._v("#")]),t._v(" Mybatis是如何将sql执行结果封装为目标对象并返回的？都有哪些映射形式？")]),t._v(" "),s("p",[t._v("第一种是使用"),s("code",[t._v("<resultMap>")]),t._v("标签，逐一定义列名和对象属性名之间的映射关系。")]),t._v(" "),s("p",[t._v("第二种是使用sql列的别名功能，将列别名书写为对象属性名，比如T_NAME AS NAME，对象属性名一般是name，小写，但是列名不区分大小写，Mybatis会忽略列名大小写，智能找到与之对应对象属性名，你甚至可以写成T_NAME AS NaMe，Mybatis一样可以正常工作。")]),t._v(" "),s("p",[t._v("有了列名与属性名的映射关系后，Mybatis通过反射创建对象，同时使用反射给对象的属性逐一赋值并返回，那些找不到映射关系的属性，是无法完成赋值的。")]),t._v(" "),s("h3",{attrs:{id:"xml映射文件中-除了常见的select-insert-updae-delete标签之外-还有哪些标签"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xml映射文件中-除了常见的select-insert-updae-delete标签之外-还有哪些标签"}},[t._v("#")]),t._v(" Xml映射文件中，除了常见的select|insert|updae|delete标签之外，还有哪些标签？")]),t._v(" "),s("p",[t._v("还有很多其他的标签，"),s("code",[t._v("<resultMap>")]),t._v("、"),s("code",[t._v("<parameterMap>")]),t._v("、"),s("code",[t._v("<sql>")]),t._v("、"),s("code",[t._v("<include>")]),t._v("、"),s("code",[t._v("<selectKey>")]),t._v("，加上动态sql的9个标签，trim|where|set|foreach|if|choose|when|otherwise|bind等，其中"),s("code",[t._v("<sql>")]),t._v("为sql片段标签，通过"),s("code",[t._v("<include>")]),t._v("标签引入sql片段，"),s("code",[t._v("<selectKey>")]),t._v("为不支持自增的主键生成策略标签。")]),t._v(" "),s("h3",{attrs:{id:"mybatis映射文件中-如果a标签通过include引用了b标签的内容-请问-b标签能否定义在a标签的后面-还是说必须定义在a标签的前面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis映射文件中-如果a标签通过include引用了b标签的内容-请问-b标签能否定义在a标签的后面-还是说必须定义在a标签的前面"}},[t._v("#")]),t._v(" Mybatis映射文件中，如果A标签通过include引用了B标签的内容，请问，B标签能否定义在A标签的后面，还是说必须定义在A标签的前面？")]),t._v(" "),s("p",[t._v("虽然Mybatis解析Xml映射文件是按照顺序解析的，但是，被引用的B标签依然可以定义在任何地方，Mybatis都可以正确识别。")]),t._v(" "),s("p",[t._v("原理是，Mybatis解析A标签，发现A标签引用了B标签，但是B标签尚未解析到，尚不存在，此时，Mybatis会将A标签标记为未解析状态，然后继续解析余下的标签，包含B标签，待所有标签解析完毕，Mybatis会重新解析那些被标记为未解析的标签，此时再解析A标签时，B标签已经存在，A标签也就可以正常解析完成了。")]),t._v(" "),s("h2",{attrs:{id:"高级查询"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级查询"}},[t._v("#")]),t._v(" 高级查询")]),t._v(" "),s("h3",{attrs:{id:"mybatis实现一对一-一对多有几种方式-怎么操作的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis实现一对一-一对多有几种方式-怎么操作的"}},[t._v("#")]),t._v(" MyBatis实现一对一，一对多有几种方式，怎么操作的？")]),t._v(" "),s("p",[t._v("有联合查询和嵌套查询。联合查询是几个表联合查询，只查询一次，通过在resultMap里面的association，collection节点配置一对一，一对多的类就可以完成")]),t._v(" "),s("p",[t._v("嵌套查询是先查一个表，根据这个表里面的结果的外键id，去再另外一个表里面查询数据，也是通过配置association，collection，但另外一个表的查询通过select节点配置。")]),t._v(" "),s("h3",{attrs:{id:"mybatis是否可以映射enum枚举类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis是否可以映射enum枚举类"}},[t._v("#")]),t._v(" Mybatis是否可以映射Enum枚举类？")]),t._v(" "),s("p",[t._v("Mybatis可以映射枚举类，不单可以映射枚举类，Mybatis可以映射任何对象到表的一列上。映射方式为自定义一个TypeHandler，实现TypeHandler的setParameter()和getResult()接口方法。")]),t._v(" "),s("p",[t._v("TypeHandler有两个作用，一是完成从javaType至jdbcType的转换，二是完成jdbcType至javaType的转换，体现为setParameter()和getResult()两个方法，分别代表设置sql问号占位符参数和获取列查询结果。")]),t._v(" "),s("h2",{attrs:{id:"动态sql"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态sql"}},[t._v("#")]),t._v(" 动态SQL")]),t._v(" "),s("h3",{attrs:{id:"mybatis动态sql是做什么的-都有哪些动态sql-能简述一下动态sql的执行原理不"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis动态sql是做什么的-都有哪些动态sql-能简述一下动态sql的执行原理不"}},[t._v("#")]),t._v(" Mybatis动态sql是做什么的？都有哪些动态sql？能简述一下动态sql的执行原理不？")]),t._v(" "),s("p",[t._v("Mybatis动态sql可以让我们在Xml映射文件内，以标签的形式编写动态sql，完成逻辑判断和动态拼接sql的功能，Mybatis提供了9种动态sql标签trim|where|set|foreach|if|choose|when|otherwise|bind。")]),t._v(" "),s("p",[t._v("其执行原理为，使用OGNL从sql参数对象中计算表达式的值，根据表达式的值动态拼接sql，以此来完成动态sql的功能。")]),t._v(" "),s("h2",{attrs:{id:"插件模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#插件模块"}},[t._v("#")]),t._v(" 插件模块")]),t._v(" "),s("h3",{attrs:{id:"mybatis是如何进行分页的-分页插件的原理是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis是如何进行分页的-分页插件的原理是什么"}},[t._v("#")]),t._v(" Mybatis是如何进行分页的？分页插件的原理是什么？")]),t._v(" "),s("p",[t._v("Mybatis使用RowBounds对象进行分页，它是针对ResultSet结果集执行的内存分页，而非物理分页，可以在sql内直接书写带有物理分页的参数来完成物理分页功能，也可以使用分页插件来完成物理分页。")]),t._v(" "),s("p",[t._v("分页插件的基本原理是使用Mybatis提供的插件接口，实现自定义插件，在插件的拦截方法内拦截待执行的sql，然后重写sql，根据dialect方言，添加对应的物理分页语句和物理分页参数。")]),t._v(" "),s("p",[t._v("举例：select * from student，拦截sql后重写为：select t.* from (select * from student) t limit 0, 10")]),t._v(" "),s("h3",{attrs:{id:"简述mybatis的插件运行原理-以及如何编写一个插件。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简述mybatis的插件运行原理-以及如何编写一个插件。"}},[t._v("#")]),t._v(" 简述Mybatis的插件运行原理，以及如何编写一个插件。")]),t._v(" "),s("p",[t._v("Mybatis仅可以编写针对ParameterHandler、ResultSetHandler、StatementHandler、Executor这4种接口的插件，Mybatis使用JDK的动态代理，为需要拦截的接口生成代理对象以实现接口方法拦截功能，每当执行这4种接口对象的方法时，就会进入拦截方法，具体就是InvocationHandler的invoke()方法，当然，只会拦截那些你指定需要拦截的方法。")]),t._v(" "),s("p",[t._v("实现Mybatis的Interceptor接口并复写intercept()方法，然后在给插件编写注解，指定要拦截哪一个接口的哪些方法即可，记住，别忘了在配置文件中配置你编写的插件。")]),t._v(" "),s("h2",{attrs:{id:"缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),s("h3",{attrs:{id:"mybatis的一级、二级缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的一级、二级缓存"}},[t._v("#")]),t._v(" Mybatis的一级、二级缓存")]),t._v(" "),s("p",[t._v("1）一级缓存: 基于 PerpetualCache 的 HashMap 本地缓存，其存储作用域为 Session，当 Session flush 或 close 之后，该 Session 中的所有 Cache 就将清空，默认打开一级缓存。")]),t._v(" "),s("p",[t._v("2）二级缓存与一级缓存其机制相同，默认也是采用 PerpetualCache，HashMap 存储，不同在于其存储作用域为 Mapper(Namespace)，并且可自定义存储源，如 Ehcache。默认不打开二级缓存，要开启二级缓存，使用二级缓存属性类需要实现Serializable序列化接口(可用来保存对象的状态),可在它的映射文件中配置"),s("code",[t._v("<cache/>")]),t._v(" ；")]),t._v(" "),s("p",[t._v("3）对于缓存数据更新机制，当某一个作用域(一级缓存 Session/二级缓存Namespaces)的进行了C/U/D 操作后，默认该作用域下所有 select 中的缓存将被 clear。")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[t._v("https://thinkwon.blog.csdn.net/article/details/101292950")])])])}),[],!1,null,null,null);a.default=n.exports}}]);