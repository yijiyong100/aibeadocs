(window.webpackJsonp=window.webpackJsonp||[]).push([[844],{1360:function(t,a,s){"use strict";s.r(a);var r=s(53),n=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("本文主要是介绍 SpringMVC-常见面试题 。")])]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#什么是spring-mvc-简单介绍下你对springmvc的理解"}},[t._v("什么是Spring MVC ？简单介绍下你对springMVC的理解?")])]),s("li",[s("a",{attrs:{href:"#springmvc的流程"}},[t._v("SpringMVC的流程？")])]),s("li",[s("a",{attrs:{href:"#springmvc的优点"}},[t._v("Springmvc的优点:")])]),s("li",[s("a",{attrs:{href:"#spring-mvc的主要组键"}},[t._v("Spring MVC的主要组键？")])]),s("li",[s("a",{attrs:{href:"#springmvc和struts2的区别有哪些"}},[t._v("springMVC和struts2的区别有哪些?")])]),s("li",[s("a",{attrs:{href:"#springmvc怎么样设定重定向和转发的"}},[t._v("SpringMVC怎么样设定重定向和转发的？")])]),s("li",[s("a",{attrs:{href:"#springmvc怎么和ajax相互调用的"}},[t._v("SpringMvc怎么和AJAX相互调用的？")])]),s("li",[s("a",{attrs:{href:"#springmvc里面拦截器是怎么写的"}},[t._v("SpringMvc里面拦截器是怎么写的：")])]),s("li",[s("a",{attrs:{href:"#如何解决post请求中文乱码问题-get的又如何处理呢"}},[t._v("如何解决POST请求中文乱码问题，GET的又如何处理呢？")])]),s("li",[s("a",{attrs:{href:"#spring-mvc的异常处理"}},[t._v("Spring MVC的异常处理 ？")])]),s("li",[s("a",{attrs:{href:"#springmvc的核心入口类是什么-struts1-struts2的分别是什么"}},[t._v("SpringMvc的核心入口类是什么,Struts1,Struts2的分别是什么：")])]),s("li",[s("a",{attrs:{href:"#springmvc的控制器是不是单例模式-如果是-有什么问题-怎么解决"}},[t._v("SpringMvc的控制器是不是单例模式,如果是,有什么问题,怎么解决？")])]),s("li",[s("a",{attrs:{href:"#spingmvc中的控制器的注解一般用那个-有没有别的注解可以替代"}},[t._v("SpingMvc中的控制器的注解一般用那个,有没有别的注解可以替代？")])]),s("li",[s("a",{attrs:{href:"#requestmapping注解用在类上面有什么作用"}},[t._v("@RequestMapping注解用在类上面有什么作用？")])]),s("li",[s("a",{attrs:{href:"#怎么样把某个请求映射到特定的方法上面"}},[t._v("怎么样把某个请求映射到特定的方法上面？")])]),s("li",[s("a",{attrs:{href:"#如果在拦截请求中-我想拦截get方式提交的方法-怎么配置"}},[t._v("如果在拦截请求中,我想拦截get方式提交的方法,怎么配置？")])]),s("li",[s("a",{attrs:{href:"#怎么样在方法里面得到request-或者session"}},[t._v("怎么样在方法里面得到Request,或者Session？")])]),s("li",[s("a",{attrs:{href:"#如果想在拦截的方法里面得到从前台传入的参数-怎么得到"}},[t._v("如果想在拦截的方法里面得到从前台传入的参数,怎么得到？")])]),s("li",[s("a",{attrs:{href:"#如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象"}},[t._v("如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？")])]),s("li",[s("a",{attrs:{href:"#springmvc中函数的返回值是什么"}},[t._v("SpringMvc中函数的返回值是什么？")])]),s("li",[s("a",{attrs:{href:"#springmvc用什么对象从后台向前台传递数据的"}},[t._v("SpringMvc用什么对象从后台向前台传递数据的？")])]),s("li",[s("a",{attrs:{href:"#springmvc中有个类把视图和数据都合并的一起的-叫什么"}},[t._v("SpringMvc中有个类把视图和数据都合并的一起的,叫什么？")])]),s("li",[s("a",{attrs:{href:"#怎么样把modelmap里面的数据放入session里面"}},[t._v("怎么样把ModelMap里面的数据放入Session里面？")])]),s("li",[s("a",{attrs:{href:"#当一个方法向ajax返回特殊对象-譬如object-list等-需要做什么处理"}},[t._v("当一个方法向AJAX返回特殊对象,譬如Object,List等,需要做什么处理？")])]),s("li",[s("a",{attrs:{href:"#参考文章"}},[t._v("参考文章")])])])]),s("p"),t._v(" "),s("h2",{attrs:{id:"什么是spring-mvc-简单介绍下你对springmvc的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是spring-mvc-简单介绍下你对springmvc的理解"}},[t._v("#")]),t._v(" 什么是Spring MVC ？简单介绍下你对springMVC的理解?")]),t._v(" "),s("p",[t._v("Spring MVC是一个基于MVC架构的用来简化web应用程序开发的应用开发框架，它是Spring的一个模块,无需中间整合层来整合 ，它和Struts2一样都属于表现层的框架。在web模型中，MVC是一种很流行的框架，通过把Model，View，Controller分离，把较为复杂的web应用分成逻辑清晰的几部分，简化开发，减少出错，方便组内开发人员之间的配合。")]),t._v(" "),s("h2",{attrs:{id:"springmvc的流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的流程"}},[t._v("#")]),t._v(" SpringMVC的流程？")]),t._v(" "),s("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/assets/img/spring/springmvc/interview-1.png"),alt:"wxmp"}}),t._v(" "),s("ul",[s("li",[t._v("（1）用户发送请求至前端控制器DispatcherServlet；")]),t._v(" "),s("li",[t._v("（2） DispatcherServlet收到请求后，调用HandlerMapping处理器映射器，请求获取Handle；")]),t._v(" "),s("li",[t._v("（3）处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet；")]),t._v(" "),s("li",[t._v("（4）DispatcherServlet通过HandlerAdapter处理器适配器调用处理器；")]),t._v(" "),s("li",[t._v("（5）执行处理器(Handler，也叫后端控制器)；")]),t._v(" "),s("li",[t._v("（6）Handler执行完成返回ModelAndView；")]),t._v(" "),s("li",[t._v("（7）HandlerAdapter将Handler执行结果ModelAndView返回给DispatcherServlet；")]),t._v(" "),s("li",[t._v("（8）DispatcherServlet将ModelAndView传给ViewReslover视图解析器进行解析；")]),t._v(" "),s("li",[t._v("（9）ViewReslover解析后返回具体View；")]),t._v(" "),s("li",[t._v("（10）DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）")]),t._v(" "),s("li",[t._v("（11）DispatcherServlet响应用户。 相当于转发器，有了DispatcherServlet 就减少了其它组件之间的耦合度。")])]),t._v(" "),s("h2",{attrs:{id:"springmvc的优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的优点"}},[t._v("#")]),t._v(" Springmvc的优点:")]),t._v(" "),s("p",[t._v("如下：")]),t._v(" "),s("ul",[s("li",[t._v("（1）它是基于组件技术的。全部的应用对象,无论控制器和视图,还是业务对象之类的都是 java组件.并且和Spring提供的其他基础结构紧密集成")]),t._v(" "),s("li",[t._v("（2）不依赖于Servlet API(目标虽是如此,但是在实现的时候确实是依赖于Servlet的)")]),t._v(" "),s("li",[t._v("（3）可以任意使用各种视图技术,而不仅仅局限于JSP")]),t._v(" "),s("li",[t._v("（4） 支持各种请求资源的映射策略")]),t._v(" "),s("li",[t._v("（5）它应是易于扩展的")])]),t._v(" "),s("h2",{attrs:{id:"spring-mvc的主要组键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc的主要组键"}},[t._v("#")]),t._v(" Spring MVC的主要组键？")]),t._v(" "),s("p",[t._v("六个主要组件：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("（1）前端控制器 DispatcherServlet（不需要程序员开发）\n作用：接收请求、响应结果 相当于转发器，有了DispatcherServlet 就减少了其它组件之间的耦合度。")])]),t._v(" "),s("li",[s("p",[t._v("（2）处理器映射器HandlerMapping（不需要程序员开发）\n作用：根据请求的URL来查找Handler")])]),t._v(" "),s("li",[s("p",[t._v("（3）处理器适配器HandlerAdapter\n注意：在编写Handler的时候要按照HandlerAdapter要求的规则去编写，这样适配器HandlerAdapter才可以正确的去执行Handler。")])]),t._v(" "),s("li",[s("p",[t._v("（4）处理器Handler（需要程序员开发）")])]),t._v(" "),s("li",[s("p",[t._v("（5）视图解析器 ViewResolver（不需要程序员开发）\n作用：进行视图的解析 根据视图逻辑名解析成真正的视图（view）")])]),t._v(" "),s("li",[s("p",[t._v("（6）视图View（需要程序员开发jsp）\nView是一个接口， 它的实现类支持不同的视图类型（jsp，freemarker，pdf等等）")])])]),t._v(" "),s("h2",{attrs:{id:"springmvc和struts2的区别有哪些"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc和struts2的区别有哪些"}},[t._v("#")]),t._v(" springMVC和struts2的区别有哪些?")]),t._v(" "),s("p",[t._v("区别：")]),t._v(" "),s("ul",[s("li",[t._v("（1）springmvc的入口是一个servlet即前端控制器（DispatchServlet），而struts2入口是一个filter过虑器（StrutsPrepareAndExecuteFilter）。")]),t._v(" "),s("li",[t._v("（2）springmvc是基于方法开发(一个url对应一个方法)，请求参数传递到方法的形参，可以设计为单例或多例(建议单例)，struts2是基于类开发，传递参数是通过类的属性，只能设计为多例。")]),t._v(" "),s("li",[t._v("（3）Struts采用值栈存储请求和响应的数据，通过OGNL存取数据，springmvc通过参数解析器是将request请求内容解析，并给方法形参赋值，将数据和视图封装成ModelAndView对象，最后又将ModelAndView中的模型数据通过reques域传输到页面。Jsp视图解析器默认使用jstl。")])]),t._v(" "),s("h2",{attrs:{id:"springmvc怎么样设定重定向和转发的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc怎么样设定重定向和转发的"}},[t._v("#")]),t._v(" SpringMVC怎么样设定重定向和转发的？")]),t._v(" "),s("p",[t._v("举例：")]),t._v(" "),s("ul",[s("li",[t._v('（1）在返回值前面加"forward:"就可以让结果转发,譬如"forward:user.do?name=method4"')]),t._v(" "),s("li",[t._v('（2）在返回值前面加"redirect:"就可以让返回值重定向,譬如"redirect:'),s("a",{attrs:{href:"http://www.baidu.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.baidu.com"),s("OutboundLink")],1),t._v('"')])]),t._v(" "),s("h2",{attrs:{id:"springmvc怎么和ajax相互调用的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc怎么和ajax相互调用的"}},[t._v("#")]),t._v(" SpringMvc怎么和AJAX相互调用的？")]),t._v(" "),s("p",[t._v("通过Jackson框架就可以把Java里面的对象直接转化成Js可以识别的Json对象。具体步骤如下 ：")]),t._v(" "),s("ul",[s("li",[t._v("（1）加入Jackson.jar")]),t._v(" "),s("li",[t._v("（2）在配置文件中配置json的映射")]),t._v(" "),s("li",[t._v("（3）在接受Ajax方法里面可以直接返回Object,List等,但方法前面要加上@ResponseBody注解。")])]),t._v(" "),s("h2",{attrs:{id:"springmvc里面拦截器是怎么写的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc里面拦截器是怎么写的"}},[t._v("#")]),t._v(" SpringMvc里面拦截器是怎么写的：")]),t._v(" "),s("p",[t._v("有两种写法,一种是实现HandlerInterceptor接口,另外一种是继承适配器类,，接着在接口方法当中，实现处理逻辑；然后在SpringMvc的配置文件中配置拦截器即可:")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 配置SpringMvc的拦截器 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 配置一个拦截器的Bean就可以了 默认是对所有请求都拦截 --\x3e")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myInterceptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.et.action.MyHandlerInterceptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 只针对部分请求拦截 --\x3e")]),t._v("\n \t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("mapping")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/modelMap.do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.et.action.MyHandlerInterceptorAdapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\ncopy\n")])])]),s("h2",{attrs:{id:"如何解决post请求中文乱码问题-get的又如何处理呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决post请求中文乱码问题-get的又如何处理呢"}},[t._v("#")]),t._v(" 如何解决POST请求中文乱码问题，GET的又如何处理呢？")]),t._v(" "),s("p",[t._v("（1）解决post请求乱码问题：\n在web.xml中加入：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.filter.CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("encoding"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/*"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\ncopy\n")])])]),s("p",[t._v("（2）get请求中文参数出现乱码解决方法有两个：")]),t._v(" "),s("p",[t._v("①修改tomcat配置文件添加编码 "),s("code",[t._v('URIEncoding="utf-8"')]),t._v("与工程编码一致，如下：")]),t._v(" "),s("div",{staticClass:"language-xml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Connector")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("URIEncoding")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("connectionTimeout")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("20000"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8080"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("protocol")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("HTTP/1.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("redirectPort")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("8443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\ncopy\n")])])]),s("p",[t._v("②另外一种方法对参数进行重新编码：ISO8859-1是tomcat默认编码，需要将tomcat编码后的内容按utf-8编码。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" userName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getParamter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"userName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ISO8859-1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ncopy\n")])])]),s("h2",{attrs:{id:"spring-mvc的异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc的异常处理"}},[t._v("#")]),t._v(" Spring MVC的异常处理 ？")]),t._v(" "),s("p",[t._v("答：可以将异常抛给Spring框架，由Spring框架来处理；我们只需要配置简单的异常处理器，在异常处理器中添视图页面即可。")]),t._v(" "),s("h2",{attrs:{id:"springmvc的核心入口类是什么-struts1-struts2的分别是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的核心入口类是什么-struts1-struts2的分别是什么"}},[t._v("#")]),t._v(" SpringMvc的核心入口类是什么,Struts1,Struts2的分别是什么：")]),t._v(" "),s("p",[t._v("答：SpringMvc的是DispatchServlet,Struts1的是ActionServlet,Struts2的是StrutsPrepareAndExecuteFilter。")]),t._v(" "),s("h2",{attrs:{id:"springmvc的控制器是不是单例模式-如果是-有什么问题-怎么解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc的控制器是不是单例模式-如果是-有什么问题-怎么解决"}},[t._v("#")]),t._v(" SpringMvc的控制器是不是单例模式,如果是,有什么问题,怎么解决？")]),t._v(" "),s("p",[t._v("答：是单例模式,所以在多线程访问的时候有线程安全问题,不要用同步,会影响性能的,解决方案是在控制器里面不能写字段。")]),t._v(" "),s("h2",{attrs:{id:"spingmvc中的控制器的注解一般用那个-有没有别的注解可以替代"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spingmvc中的控制器的注解一般用那个-有没有别的注解可以替代"}},[t._v("#")]),t._v(" SpingMvc中的控制器的注解一般用那个,有没有别的注解可以替代？")]),t._v(" "),s("p",[t._v("答：一般用@Conntroller注解,表示是表现层,不能用用别的注解代替。")]),t._v(" "),s("h2",{attrs:{id:"requestmapping注解用在类上面有什么作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requestmapping注解用在类上面有什么作用"}},[t._v("#")]),t._v(" @RequestMapping注解用在类上面有什么作用？")]),t._v(" "),s("p",[t._v("答：是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。")]),t._v(" "),s("h2",{attrs:{id:"怎么样把某个请求映射到特定的方法上面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么样把某个请求映射到特定的方法上面"}},[t._v("#")]),t._v(" 怎么样把某个请求映射到特定的方法上面？")]),t._v(" "),s("p",[t._v("答：直接在方法上面加上注解@RequestMapping,并且在这个注解里面写上要拦截的路径。")]),t._v(" "),s("h2",{attrs:{id:"如果在拦截请求中-我想拦截get方式提交的方法-怎么配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果在拦截请求中-我想拦截get方式提交的方法-怎么配置"}},[t._v("#")]),t._v(" 如果在拦截请求中,我想拦截get方式提交的方法,怎么配置？")]),t._v(" "),s("p",[t._v("答：可以在@RequestMapping注解里面加上method=RequestMethod.GET。")]),t._v(" "),s("h2",{attrs:{id:"怎么样在方法里面得到request-或者session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么样在方法里面得到request-或者session"}},[t._v("#")]),t._v(" 怎么样在方法里面得到Request,或者Session？")]),t._v(" "),s("p",[t._v("答：直接在方法的形参中声明request,SpringMvc就自动把request对象传入。")]),t._v(" "),s("h2",{attrs:{id:"如果想在拦截的方法里面得到从前台传入的参数-怎么得到"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果想在拦截的方法里面得到从前台传入的参数-怎么得到"}},[t._v("#")]),t._v(" 如果想在拦截的方法里面得到从前台传入的参数,怎么得到？")]),t._v(" "),s("p",[t._v("答：直接在形参里面声明这个参数就可以,但必须名字和传过来的参数一样。")]),t._v(" "),s("h2",{attrs:{id:"如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象"}},[t._v("#")]),t._v(" 如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？")]),t._v(" "),s("p",[t._v("答：直接在方法中声明这个对象,SpringMvc就自动会把属性赋值到这个对象里面。")]),t._v(" "),s("h2",{attrs:{id:"springmvc中函数的返回值是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc中函数的返回值是什么"}},[t._v("#")]),t._v(" SpringMvc中函数的返回值是什么？")]),t._v(" "),s("p",[t._v("答：返回值可以有很多类型,有String, ModelAndView，但一般用String比较好。")]),t._v(" "),s("h2",{attrs:{id:"springmvc用什么对象从后台向前台传递数据的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc用什么对象从后台向前台传递数据的"}},[t._v("#")]),t._v(" SpringMvc用什么对象从后台向前台传递数据的？")]),t._v(" "),s("p",[t._v("答：通过ModelMap对象,可以在这个对象里面用put方法,把对象加到里面,前台就可以通过el表达式拿到。")]),t._v(" "),s("h2",{attrs:{id:"springmvc中有个类把视图和数据都合并的一起的-叫什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc中有个类把视图和数据都合并的一起的-叫什么"}},[t._v("#")]),t._v(" SpringMvc中有个类把视图和数据都合并的一起的,叫什么？")]),t._v(" "),s("p",[t._v("答：ModelAndView。")]),t._v(" "),s("h2",{attrs:{id:"怎么样把modelmap里面的数据放入session里面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么样把modelmap里面的数据放入session里面"}},[t._v("#")]),t._v(" 怎么样把ModelMap里面的数据放入Session里面？")]),t._v(" "),s("p",[t._v("答：可以在类上面加上@SessionAttributes注解,里面包含的字符串就是要放入session里面的key。")]),t._v(" "),s("h2",{attrs:{id:"当一个方法向ajax返回特殊对象-譬如object-list等-需要做什么处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#当一个方法向ajax返回特殊对象-譬如object-list等-需要做什么处理"}},[t._v("#")]),t._v(" 当一个方法向AJAX返回特殊对象,譬如Object,List等,需要做什么处理？")]),t._v(" "),s("p",[t._v("答：要加上@ResponseBody注解。")]),t._v(" "),s("p",[t._v("作　　者：Y.yang Blog\n出　　处：https://www.cnblogs.com/yoci/p/10642379.html\n关于博主：热爱技术，喜欢专研，一个平凡的架构梦，每天进步一点点，共勉~。\n版权声明：-个人学习笔记-非商业性使用，部分资料来自互联网如有侵权联系删除，欢迎转载，但希望能给出原文连接。\n声援博主：如果您觉得文章对您有帮助，可以点击文章右下角【推荐】一下。您的鼓励是博主的最大动力！")]),t._v(" "),s("h2",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("ul",[s("li",[t._v("https://www.cnblogs.com/yoci/p/10642379.html")])])])}),[],!1,null,null,null);a.default=n.exports}}]);